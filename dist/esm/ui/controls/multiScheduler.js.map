{"version":3,"file":"multiScheduler.js","sources":["../../../../src/ui/controls/multiScheduler.ts"],"sourcesContent":["import { UtilityManager } from \"../../../src/managers/utilityManager\";\nimport { VrControl, VrControlOptions, VrControlsEvent } from \"../common\";\nimport { ComboBoxTypeEnum, ControlTypeEnum, createButton, createComboBox, createLabel, createScheduler, DateModeEnum, DayOfWeekEnum, div, GridLabelUnderlineMode, IconClassicLight, IconClass, puma, SchedulerData, SchedulerResource, SchedulerView, SchedulerViewEnum, TextAlignEnum, vrEditorCustomItem } from \"../vr\";\nimport { ComboBox } from \"./comboBox\";\nimport { Scheduler, SchedulerAppointmentClickEvent, SchedulerAvailabilityClickEvent, SchedulerTimeslotClickEvent } from \"./scheduler\";\n\n//#region Options\nexport class MultiSchedulerOptions extends VrControlOptions\n{\n\tresources?: SchedulerResource[];\n\tdatasource?: SchedulerData[];\n\tdates?: Date[];\n\tstartTime?: Date;\n\tendTime?: Date;\n\ttimeslotIntervalDuration?: number;\n\texportPdf?: boolean;\n\tshowNavigateButtons?: boolean;\n\tmaxDatesNumber?: number;\n\n\tonTimeslotClick?: (e: SchedulerTimeslotClickEvent) => void;\n\tonAvailabilityClick?: (e: SchedulerAvailabilityClickEvent) => void;\n\tonAppointmentClick?: (e: SchedulerAppointmentClickEvent) => void;\n\tonNavigate?: (e: MultiSchedulerNavigateEvent) => void;\n}\n//#endregion\n\n//#region Control\nexport class MultiScheduler extends VrControl\n{\n\t//#region Variables\n\tprivate _resources?: SchedulerResource[];\n\tprivate _datasource: any[];\n\tprivate _availabilities: SchedulerData[];\n\tprivate _dates: Date[];\n\tprivate _dictionaryDateScheduler: Map<Date, Scheduler>;\n\tprivate _cmbTimeslotIntervalDuration: ComboBox;\n\t//#endregion\n\n\tconstructor(element: HTMLElement, options?: MultiSchedulerOptions | null)\n\t{\n\t\t//#region Options\n\t\tif (options == null)\n\t\t\toptions = new MultiSchedulerOptions();\n\n\t\tif (options.dates == null) options.dates = [];\n\t\tif (options.datasource == null) options.datasource = [];\n\t\tif (options.resources == null) options.resources = [];\n\t\tif (options.showNavigateButtons == null) options.showNavigateButtons = true;\n\t\tif (options.maxDatesNumber == null) options.maxDatesNumber = 6;\n\t\tif (options.timeslotIntervalDuration == null) options.timeslotIntervalDuration = 30;\n\t\t//#endregion\n\n\t\tsuper(element, options, ControlTypeEnum.MultiScheduler);\n\t\tthis._resources = options.resources;\n\t\tthis._dates = options.dates;\n\t\tthis._dictionaryDateScheduler = new Map();\n\n\t\tthis.element().style.cssText += \"display: flex; flex-direction: column;\";\n\n\t\tif (options.dates != null)\n\t\t\tthis.dates(options.dates);\n\n\t\tif (options.datasource != null)\n\t\t\tthis.datasource(options.datasource);\n\t}\n\n\t//#region Methods\n\tdates(dates?: Date[])\n\t{\n\t\tif (dates != null && dates.length > 0)\n\t\t{\n\t\t\tlet options = this.getOptions();\n\t\t\tthis._dictionaryDateScheduler.clear();\n\t\t\tpuma(this.element()).empty();\n\n\t\t\tdates = dates.slice(0, options.maxDatesNumber!);\n\n\t\t\t//#region Date\n\t\t\tlet divDates = div(this.element(), { class: \"vrMultiSchedulerDivDates\", css: \"display: flex; height: 22px;\" });\n\n\t\t\t//#region Navigation buttons\n\t\t\tif (options.showNavigateButtons)\n\t\t\t{\n\t\t\t\tcreateButton({\n\t\t\t\t\ticon: IconClassicLight.ChevronLeft,\n\t\t\t\t\tcssContainer: \"position: absolute; left: 10px; z-index: 9999999999999;\",\n\t\t\t\t\tcss: \"border: none; background: none;\",\n\t\t\t\t\tonClick: (e) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (options.onNavigate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet navigateEvent = new MultiSchedulerNavigateEvent();\n\t\t\t\t\t\t\tnavigateEvent.sender = this;\n\t\t\t\t\t\t\tnavigateEvent.action = MultiSchedulerNavigateActionEnum.PrevDate;\n\t\t\t\t\t\t\tnavigateEvent.dates = this.dates();\n\t\t\t\t\t\t\toptions.onNavigate!(navigateEvent);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, divDates);\n\n\t\t\t\tcreateButton({\n\t\t\t\t\ticon: IconClassicLight.ChevronRight,\n\t\t\t\t\tcssContainer: \"position: absolute; right: 10px; z-index: 9999999999999;\",\n\t\t\t\t\tcss: \"border: none; background: none;\",\n\t\t\t\t\tonClick: (e) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (options.onNavigate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet navigateEvent = new MultiSchedulerNavigateEvent();\n\t\t\t\t\t\t\tnavigateEvent.sender = this;\n\t\t\t\t\t\t\tnavigateEvent.action = MultiSchedulerNavigateActionEnum.NextDate;\n\t\t\t\t\t\t\tnavigateEvent.dates = this.dates();\n\t\t\t\t\t\t\toptions.onNavigate!(navigateEvent);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, divDates);\n\t\t\t}\n\t\t\t//#endregion\n\n\t\t\tlet widthPercentage = 100 / dates.length;\n\t\t\tfor (let i = -1; i < dates.length; i++)\n\t\t\t{\n\t\t\t\tlet lblDate = createLabel({\n\t\t\t\t\talign: TextAlignEnum.Center,\n\t\t\t\t\tclass: \"vrMultiSchedulerLblDate\",\n\t\t\t\t\tcss: \"width: 100%;\",\n\t\t\t\t\tcssContainer: ((i == -1) ? \"width: 63px; border-right: solid 1px #CCC; padding-left: 0px; padding-right: 0px;\" : \"border-right: solid 1px #CCC; width: \" + widthPercentage + \"%; padding-left: 5px; padding-right: 5px;\") + \"text-align: left; background-color: #f0f0f0; border-bottom: solid 1px #CCC; border-top: solid 1px #CCC;\"\n\t\t\t\t}, divDates);\n\n\t\t\t\tif (i == -1)\n\t\t\t\t{\n\t\t\t\t\tlet divTimeslotIntervalDuration = puma(\"<div>\").vrPrependToPuma(lblDate.container())[0];\n\t\t\t\t\tdivTimeslotIntervalDuration.classList.add(\"vrMultiSchedulerTimeslotIntervalDuration\");\n\n\t\t\t\t\tthis._cmbTimeslotIntervalDuration = createComboBox({\n\t\t\t\t\t\tmode: ComboBoxTypeEnum.DropDown,\n\t\t\t\t\t\tvalue: options.timeslotIntervalDuration,\n\t\t\t\t\t\tcssContainer: \"width: 100%; top: 0px; left: 0px; height: 21px; border-right: solid 1px #CCC;\",\n\t\t\t\t\t\tcss: \"width: Calc(100% - 6px); border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; padding-left: 6px; padding-right: 0px; text-align: left; height: 20px; border-top-right-radius: 0px; border-top-left-radius: 0px; background-color: #f0f0f0;border-top: 0px; border-bottom: 0px; top: 0px; position: absolute; border-right: solid 1px #CCC;\",\n\t\t\t\t\t\tpopupSettings: { width: 50 },\n\t\t\t\t\t\twidth: 60,\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t{ text: \"5 min\", value: \"5\" },\n\t\t\t\t\t\t\t{ text: \"10 min\", value: \"10\" },\n\t\t\t\t\t\t\t{ text: \"15 min\", value: \"15\" },\n\t\t\t\t\t\t\t{ text: \"25 min\", value: \"25\" },\n\t\t\t\t\t\t\t{ text: \"30 min\", value: \"30\" },\n\t\t\t\t\t\t\t{ text: \"60 min\", value: \"60\" }\n\t\t\t\t\t\t],\n\t\t\t\t\t\tonAfterChange: (e) => \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.timeslotInterval(e.value);\n\t\t\t\t\t\t\tthis.rebind();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, divTimeslotIntervalDuration);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet day = dates[i];\n\t\t\t\t\tlet dateString = day.vrToLongDateString();\n\t\t\t\t\tlblDate.value(dateString);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdiv(divDates, { class: \"vrMultiSchedulerDivBorderOverflow\", css: \"min-width: 17px; background-color: #f0f0f0; border-bottom: solid 1px #CCC;\" });\n\t\t\t//#endregion\n\n\t\t\tlet divSchedulers = div(this.element(), { class: \"vrMultiSchedulerDivSchedulers\", css: \"display: flex; overflow-y: auto;\" });\n\t\t\tfor (let i = -1; i < dates.length; i++)\n\t\t\t{\n\t\t\t\tlet date = (i == -1) ? new Date() : dates[i];\n\n\t\t\t\t//#region Scheduler\n\t\t\t\tdate.setHours(0, 0, 0, 0);\n\t\t\t\tlet scheduler = createScheduler({\n\t\t\t\t\taddToControlList: false,\n\t\t\t\t\tresources: this._resources,\n\t\t\t\t\tviews: [{ type: SchedulerViewEnum.Day, selected: true }],\n\t\t\t\t\tdate: date,\n\t\t\t\t\tcssContainer: \"width: \" + ((i == -1) ? \"63px;\" : widthPercentage + \"%;\"),\n\t\t\t\t\tstartTime: options.startTime,\n\t\t\t\t\tendTime: options.endTime,\n\t\t\t\t\ttimeColumn: (i == -1),\n\t\t\t\t\ttimeslotIntervalDuration: options.timeslotIntervalDuration,\n\t\t\t\t\theight: \"auto\",\n\t\t\t\t\texportPdf: options.exportPdf,\n\t\t\t\t\tshowHeader: (this._resources!.length > 1),\n\t\t\t\t\tshowToolbar: false,\n\t\t\t\t\teditable: {\n\t\t\t\t\t\tmove: false,\n\t\t\t\t\t\tresize: false\n\t\t\t\t\t},\n\t\t\t\t\tonTimeslotClick: options.onTimeslotClick,\n\t\t\t\t\tonAvailabilityClick: options.onAvailabilityClick,\n\t\t\t\t\tonAppointmentClick: options.onAppointmentClick\n\t\t\t\t}, divSchedulers);\n\t\t\t\tpuma(scheduler.container()).find(\".vrSchedulerDivContent\")[0].style.cssText += \"overflow-y: hidden !important;\";\n\t\t\t\t//#endregion\n\n\t\t\t\tif (!this._dictionaryDateScheduler.has(date))\n\t\t\t\t\tthis._dictionaryDateScheduler.set(date, scheduler);\n\t\t\t}\n\n\t\t\tthis.adaptHeight();\n\t\t\tthis.fixWidth();\n\n\t\t\tthis._dates = dates;\n\t\t}\n\t\treturn this._dates;\n\t}\n\n\tdatasource<T extends SchedulerData>(datasource?: T[]): T[]\n\t{\n\t\tif (datasource != null)\n\t\t{\n\t\t\tthis._datasource = datasource;\n\t\t\tthis.drawData(datasource, (scheduler, items) =>\n\t\t\t{\n\t\t\t\tscheduler.datasource(items);\n\t\t\t});\n\t\t}\n\t\treturn this._datasource;\n\t}\n\n\tavailabilities<T extends SchedulerData>(availabilities?: T[]): T[]\n\t{\n\t\tif (availabilities != null)\n\t\t{\n\t\t\tthis._availabilities = availabilities;\n\t\t\tthis.drawData(availabilities, (scheduler, items) =>\n\t\t\t{\n\t\t\t\tscheduler.availabilities(items);\n\t\t\t});\n\t\t}\n\t\treturn this._availabilities as T[];\n\t}\n\n\tprivate drawData(datasource: any[], callback: (scheduler: Scheduler, items: any[]) => void)\n\t{\n\t\t//#region Get date without hours\n\t\tlet newDatasource = [];\n\t\tfor (let data of datasource)\n\t\t{\n\t\t\tlet overlappedList: any = null;\n\t\t\tif (data.overlappedList != null)\n\t\t\t{\n\t\t\t\toverlappedList = data.overlappedList;\n\t\t\t\tdata.overlappedList = undefined;\n\t\t\t}\n\n\t\t\tlet newData = UtilityManager.duplicate(data);\n\t\t\tlet newDataDate = new Date(newData.start);\n\t\t\tnewDataDate.setHours(0, 0, 0, 0);\n\t\t\tnewData.groupingField = newDataDate;\n\t\t\tnewData.overlappedList = overlappedList;\n\t\t\tnewDatasource.push(newData);\n\t\t}\n\t\t//#endregion\n\n\t\t// Group by date\n\t\tlet datasourceGrouped = newDatasource.vrGroupBy(k => k.groupingField);\n\t\tfor (let keyDate in datasourceGrouped)\n\t\t{\n\t\t\tlet schedulerDataList = datasourceGrouped[keyDate];\n\t\t\tlet date = new Date(keyDate);\n\t\t\tdate.setHours(0, 0, 0, 0);\n\n\t\t\tthis._dictionaryDateScheduler.forEach((value, key) =>\n\t\t\t{\n\t\t\t\tif (Date.vrEquals(date, key))\n\t\t\t\t{\n\t\t\t\t\t// Draw data\n\t\t\t\t\tlet scheduler = this._dictionaryDateScheduler.get(key);\n\t\t\t\t\tif (scheduler != null)\n\t\t\t\t\t\tcallback(scheduler, schedulerDataList);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tresources(resources?: SchedulerResource[])\n\t{\n\t\tif (resources != null)\n\t\t{\n\t\t\tthis._resources = resources;\n\t\t\tthis.rebind();\n\t\t}\n\t\treturn this._resources;\n\t}\n\n\tstartTime(): Date\n\t{\n\t\treturn this.getOptions().startTime!;\n\t}\n\n\tendTime(): Date\n\t{\n\t\treturn this.getOptions().endTime!;\n\t}\n\n\ttimeslotInterval(timeslotIntervalDuration?: number): number\n\t{\n\t\tlet options = this.getOptions();\n\t\tif (timeslotIntervalDuration != null)\n\t\t{\n\t\t\toptions.timeslotIntervalDuration = timeslotIntervalDuration;\n\t\t\tthis._cmbTimeslotIntervalDuration.value(timeslotIntervalDuration, false);\n\n\t\t\tthis._dictionaryDateScheduler.forEach((value, key) =>\n\t\t\t{\n\t\t\t\t// Draw data\n\t\t\t\tlet scheduler = this._dictionaryDateScheduler.get(key);\n\t\t\t\tif (scheduler != null)\n\t\t\t\t\tscheduler.timeslotInterval(timeslotIntervalDuration);\n\t\t\t});\n\t\t}\n\t\treturn options.timeslotIntervalDuration!;\n\t}\n\n\trebind()\n\t{\n\t\tthis.dates(this._dates);\n\t\tthis.datasource(this._datasource);\n\t\tthis.availabilities(this._availabilities);\n\n\t\tthis.adaptHeight();\n\t\tthis.fixWidth();\n\t}\n\n\tprivate adaptHeight()\n\t{\n\t\tlet divContent = puma(this.container()).find(\".vrMultiSchedulerDivSchedulers\")[0];\n\t\tlet options = this.getOptions();\n\n\t\tlet height: number | string = 0;\n\t\tif (options.height == null)\n\t\t{\n\t\t\tlet multiSchedulerOffset = puma(this.container()).offset().top;\n\t\t\tlet contentHeight = (window.innerHeight - multiSchedulerOffset);\n\n\t\t\tlet divDatesHeight = puma(this.container()).find(\".vrMultiSchedulerDivDates\").outerHeight();\n\t\t\theight = contentHeight - divDatesHeight;\n\t\t}\n\t\telse\n\t\t\theight = options.height;\n\n\t\tpuma(divContent).height(height);\n\t}\n\n\tprivate fixWidth()\n\t{\n\t\tlet divScrollable = puma(this.container()).find(\".vrMultiSchedulerDivSchedulers\")[0];\n\t\tif (divScrollable != null)\n\t\t{\n\t\t\tif (divScrollable.scrollHeight > divScrollable.clientHeight && divScrollable.clientHeight > 0)\n\t\t\t\tpuma(this.container()).find(\".vrMultiSchedulerDivBorderOverflow\").show();\n\t\t\telse\n\t\t\t\tpuma(this.container()).find(\".vrMultiSchedulerDivBorderOverflow\").hide();\n\t\t}\n\t}\n\n\tgetOptions()\n\t{\n\t\treturn this.options<MultiSchedulerOptions>();\n\t}\n\t//#endregion\n}\n\n//#region Classes\nclass MultiSchedulerNavigateEvent extends VrControlsEvent\n{\n\tsender: MultiScheduler;\n\taction?: MultiSchedulerNavigateActionEnum;\n\tdates?: Date[];\n}\n\nenum MultiSchedulerNavigateActionEnum\n{\n\tNextDate = 0,\n\tPrevDate = 1,\n}\n//#endregion"],"names":[],"mappings":"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"}