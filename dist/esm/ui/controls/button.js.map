{"version":3,"file":"button.js","sources":["../../../../src/ui/controls/button.ts"],"sourcesContent":["import { ButtonModeEnum, ColorSettings, IconClass, PositionEnum, ControlTypeEnum, confirm, puma, span, IconSettings, BadgeClickEvent, BadgeSettings } from \"../vr\";\nimport { VrControlOptions, VrControl, VrControlsEvent } from \"../common\";\n\n//#region Options\nexport class ButtonOptions extends VrControlOptions\n{\n    text?: string;\n    value?: string;\n    mode?: ButtonModeEnum;\n    tooltip?: string;\n    colorSettings?: ColorSettings;\n    icon?: IconClass;\n    onlyIcon?: boolean;\n    imageUrl?: string;\n    iconSettings?: IconSettings;\n    confirmationMessage?: string;\n    badgeSettings?: BadgeSettings;\n\n    onContextMenu?: boolean | ((e: ContextMenuEvent) => void);\n    onClick?: (e: ButtonClickEvent) => void;\n    onRightClick?: (e: ButtonRightClickEvent) => void;\n    onMiddleClick?: (e: ButtonMiddleClickEvent) => void;\n    onHover?: (e: ButtonHoverEvent) => void;\n    onBlur?: (e: ButtonBlurEvent) => void;\n    onRejectedConfirm?: () => void;\n    onMouseDown?: (e: ButtonMouseDownEvent) => void;\n    onMouseUp?: (e: ButtonMouseUpEvent) => void;\n}\n//#endregion\n\n//#region Control\nexport class Button extends VrControl\n{\n    private _mouseDownEvent: JQuery.MouseDownEvent | null;\n\n    constructor(element: HTMLElement, options?: ButtonOptions | null)\n    {\n        //#region Options\n        if (options == null)\n            options = new ButtonOptions();\n\n        if (options.text == null) options.text = \"\";\n        if (options.mode == null) options.mode = ButtonModeEnum.Default;\n\n        if (options.iconSettings == null) options.iconSettings = new IconSettings();\n        if (options.iconSettings.position == null) options.iconSettings.position = PositionEnum.Left;\n        if (options.onContextMenu == null) options.onContextMenu = true;\n        //#endregion\n\n        super(element, options, ControlTypeEnum.Button);\n\n        //#region Width\n        if (options.width == null)\n            this.element().style.cssText += \"min-width: 27px;\";\n        else\n            this.element().style.cssText += \"width: 100%;\";\n        //#endregion\n\n        //#region Color settings\n        if (options.colorSettings != null)\n        {\n            let colorSettings = options.colorSettings;\n            if (colorSettings.textColor != null)\n                this.color(colorSettings.textColor);\n            if (colorSettings.background != null)\n                this.backgroundColor(colorSettings.background);\n            if (colorSettings.border != null)\n                this.borderColor(colorSettings.border);\n        }\n        //#endregion\n\n        //#region Mode\n        this.mode(options.mode);\n        //#endregion\n\n        //#region Icon/ImageUrl\n        if (options.icon != null)\n            this.icon(options.icon);\n        else if (options.imageUrl != null)\n            this.imageUrl(options.imageUrl);\n\n        if ((options.icon != null || options.imageUrl != null) && options.onlyIcon === true)\n            this.css(\"border: none; background: none;\");\n        //#endregion\n\n        //#region Text/Tooltip/Value\n        this.text(options.text);\n\n        if (options.tooltip != null)\n            this.tooltip(options.tooltip);\n\n        if (options.value != null)\n            puma(this.element()).attr(\"value\", options.value);\n        //#endregion\n\n        //#region Badge\n        let badgeColor = \"#FFF\";\n        let badgeBackgroundColor = \"red\";\n        let badgeText = \"\";\n        let badgeVisible = false;\n        if (options.badgeSettings != null)\n        {\n            if (options.badgeSettings.text != null) badgeText = String(options.badgeSettings.text);\n            if (options.badgeSettings.color != null) badgeColor = options.badgeSettings.color;\n            if (options.badgeSettings.backgroundColor != null) badgeBackgroundColor = String(options.badgeSettings.backgroundColor);\n            if (options.badgeSettings.visible != null) badgeVisible = options.badgeSettings.visible;\n        }\n\n        let badge = puma(\"<span class='vrBadgeClass vrButtonBadgeClass'>\" + badgeText + \"</span>\")[0];\n        badge.innerHTML = badgeText;\n        puma(element).after(badge);\n\n        if (options.tooltip != null)\n            badge.title = options.tooltip;\n\n        badge.style.cssText += \"color: \" + badgeColor + \"; background-color: \" + badgeBackgroundColor + \";\";\n        if ((badgeText == \"\" || badgeText == null) && !badgeVisible)\n            puma(badge).hide();\n\n        if (options.badgeSettings != null && options.badgeSettings.css != null)\n            badge.style.cssText += options.badgeSettings.css;\n\n        if (options.badgeSettings != null && options.badgeSettings.click != null)\n        {\n            puma(badge).on(\"mousedown\", (e: JQuery.MouseDownEvent) =>\n            {\n                let badgeClickEvent = new BadgeClickEvent();\n                badgeClickEvent.sender = this;\n                badgeClickEvent.text = this.badge();\n\n                switch (e.button)\n                {\n                    case 0: badgeClickEvent.leftButton = true; break;\n                    case 1: badgeClickEvent.middleButton = true; break;\n                    case 2: badgeClickEvent.rightButton = true; break;\n                }\n\n                options!.badgeSettings!.click!(badgeClickEvent);\n            });\n        }\n        else if (options.onClick != null)\n        {\n            puma(badge).on(\"click\", (e: JQuery.MouseDownEvent) => \n            {\n                this.click();\n                return false;\n            });\n        }\n        //#endregion\n\n        //#region Events\n        puma(element).on(\"mousedown\", (e: JQuery.MouseDownEvent) => \n        {\n            //#region MouseDown event\n            if (options!.onMouseDown != null)\n            {\n                let event = new ButtonMouseDownEvent();\n                event.sender = this;\n                options!.onMouseDown(event);\n\n                if (event.isDefaultPrevented())\n                    return;\n            }\n            //#endregion\n\n            this._mouseDownEvent = e;\n            if (e.button != 0) // Not left button\n                this.click();\n        });\n\n        puma(element).on(\"click\", (e: JQuery.ClickEvent) =>\n        {\n            this.click();\n\n            // To prevent Ajax rebind\n            e.preventDefault();\n            return false;\n        });\n\n        puma(element).on(\"mouseup\", (e: JQuery.MouseUpEvent) => \n        {\n            //#region MouseUp event\n            if (options!.onMouseUp != null)\n            {\n                let event = new ButtonMouseUpEvent();\n                event.sender = this;\n                options!.onMouseUp(event);\n\n                if (event.isDefaultPrevented())\n                    return;\n            }\n            //#endregion\n        });\n\n        puma(this.container()).hover(() =>\n        {\n            if (options!.onHover != null)\n            {\n                let hoverEvent = new ButtonHoverEvent();\n                hoverEvent.sender = this;\n                options!.onHover(hoverEvent);\n            }\n        });\n\n        puma(this.container()).mouseleave(() =>\n        {\n            if (options!.onBlur != null)\n            {\n                let blurEvent = new ButtonBlurEvent();\n                blurEvent.sender = this;\n                options!.onBlur(blurEvent);\n            }\n        });\n\n        puma(this.container()).on(\"contextmenu\", (e: JQuery.ContextMenuEvent) => \n        {\n            if (options!.onContextMenu != null)\n            {\n                if (typeof (options!.onContextMenu) == \"boolean\")\n                {\n                    if (!options!.onContextMenu)\n                        e.preventDefault();\n                }\n                else\n                {\n                    let event = new ContextMenuEvent();\n                    event.sender = this;\n                    options!.onContextMenu(event);\n                }\n            }\n        });\n        //#endregion\n    }\n\n    //#region Methods\n\n    //#region Text/Label/Tooltip\n    text(value?: string): string\n    {\n        let options = this.getOptions();\n        if (value != null)\n        {\n            puma(this.element()).find(\".vrButtonSpanText\").remove();\n            let spanText = span(this.element(), { class: \"vrButtonSpanText\" });\n\n            //#region Position\n            let iconPosition = options.iconSettings!.position;\n            if (iconPosition == PositionEnum.Left)\n                puma(this.element()).vrAppendPuma(spanText);\n            else if (iconPosition == PositionEnum.Right)\n                puma(this.element()).vrPrependPuma(spanText);\n            //#endregion\n\n            spanText.innerHTML = value;\n            options.text = value;\n        }\n        return options.text!;\n    }\n\n    value(value?: string)\n    {\n        return this.text(value);\n    }\n\n    tooltip(value?: string | number): string\n    {\n        if (value != null)\n            this.element().title = String(value);\n\n        return this.element().title;\n    }\n    //#endregion\n\n    //#region Badge\n    badge(text?: string | number): string\n    {\n        if (text != null)\n        {\n            puma(this.container()).find(\".vrButtonBadgeClass\").html(text);\n            this.visibleBadge(text != \"\");\n        }\n        return puma(this.container()).find(\".vrButtonBadgeClass\").html();\n    }\n\n    badgeBackgroundColor(color: string)\n    {\n        puma(this.container()).find(\".vrButtonBadgeClass\").css(\"background-color\", color)\n    }\n\n    badgeColor(color: string)\n    {\n        puma(this.container()).find(\".vrButtonBadgeClass\").css(\"color\", color)\n    }\n\n    showBadge()\n    {\n        puma(this.container()).find(\".vrButtonBadgeClass\").show();\n    }\n\n    hideBadge()\n    {\n        puma(this.container()).find(\".vrButtonBadgeClass\").hide();\n    }\n\n    visibleBadge(state: boolean)\n    {\n        if (state) this.showBadge();\n        else this.hideBadge();\n    }\n    //#endregion\n\n    //#region Override\n    hide()\n    {\n        super.hide();\n        this.hideBadge();\n    }\n    //#endregion\n\n    //#region Mode\n    mode(mode?: ButtonModeEnum): ButtonModeEnum\n    {\n        if (mode != null)\n        {\n            puma(this.element()).removeClass([ButtonModeEnum.Default, ButtonModeEnum.Primary, ButtonModeEnum.Delete, ButtonModeEnum.Excel, ButtonModeEnum.Primary].join(\" \"));\n            puma(this.element()).addClass(mode);\n        }\n\n        let classList: string[] = this.element().className.split(/\\s+/);\n        return classList.filter(k => k.endsWith(\"Mode\"))[0] as ButtonModeEnum;\n    }\n    //#endregion\n\n    //#region Color\n    colorSettings(settings?: ColorSettings)\n    {\n        let options = this.getOptions();\n        if (settings != null)\n        {\n            options.colorSettings = settings;\n            if (settings.textColor != null)\n                this.color(settings.textColor);\n            if (settings.background != null)\n                this.backgroundColor(settings.background);\n            if (settings.border != null)\n                this.borderColor(settings.border);\n        }\n        return options.colorSettings;\n    }\n\n    color(value?: string): string\n    {\n        if (value != null)\n            this.element().style.cssText += \"color: \" + value;\n\n        return puma(this.element()).css(\"color\");\n    }\n\n    backgroundColor(value?: string): string\n    {\n        if (value != null)\n            this.element().style.cssText += \"background-color: \" + value;\n\n        return puma(this.element()).css(\"background-color\");\n    }\n\n    borderColor(value?: string): string\n    {\n        if (value != null)\n            this.element().style.cssText += \"border-color: \" + value;\n\n        return puma(this.element()).css(\"border-color\");\n    }\n    //#endregion\n\n    //#region Icon/ImageUrl\n    icon(icon?: IconClass, iconPosition?: PositionEnum | null, iconTooltip = \"\"): HTMLElement | null\n    {\n        let options = this.getOptions();\n        if (iconPosition == null)\n            iconPosition = options.iconSettings!.position;\n\n        let vrIcon = puma(this.element()).find(\".vrIcon\")[0] as HTMLElement;\n        if (icon != null)\n        {\n            if (vrIcon != null)\n            {\n                let classList: string[] = vrIcon.className.split(/\\s+/);\n                let iconClassList = classList.filter(k => k.startsWith(\"fa-\"));\n                for (let iconClass of iconClassList)\n                    vrIcon.classList.remove(iconClass);\n\n                puma(vrIcon).addClass(icon);\n            }\n            else\n            {\n                let options = this.options<ButtonOptions>();\n                let margin = \"\";\n                if (options.text != null && options.text != \"\")\n                {\n                    if (iconPosition == PositionEnum.Left) margin = \"margin-right: 5px;\";\n                    else if (iconPosition == PositionEnum.Right) margin = \"margin-left: 5px;\";\n                }\n\n                //#region Settings\n                let classAttribute = \"\";\n                let idAttribute = \"\";\n                let css = \"\";\n\n                let settings = options.iconSettings!;\n                if (settings.id != null)\n                    idAttribute = \"id = '\" + settings.id + \"'\";\n\n                if (settings.css != null)\n                    css += settings.css + \";\";\n\n                if (settings.fontSize != null)\n                {\n                    if (typeof (settings.fontSize) == \"number\")\n                        settings.fontSize = settings.fontSize + \"px\";\n\n                    css += \"font-size: \" + settings.fontSize + \";\";\n                }\n\n                if (settings.color != null)\n                    css += \"color: \" + settings.color + \";\";\n\n                if (settings.class != null)\n                    classAttribute += settings.class;\n\n                if (settings.cursor != null)\n                    css += \"cursor: \" + settings.cursor + \";\";\n                //#endregion\n\n                let iElementString = \"<i class='\" + icon + \" vrIcon \" + classAttribute\n                    + \"' aria-hidden='true' style='position: relative; top: -1px;\" + margin + \" \" + css + \"' id='\" + idAttribute + \"'></i>\";\n\n                if (iconPosition == PositionEnum.Left)\n                    puma(this.element()).vrPrependPuma(iElementString);\n                else if (iconPosition == PositionEnum.Right)\n                    puma(this.element()).vrAppendPuma(iElementString);\n            }\n\n            if (iconTooltip != \"\")\n                puma(vrIcon).attr(\"title\", iconTooltip);\n        }\n        return vrIcon;\n    }\n\n    imageUrl(imageUrl?: string, imagePosition?: PositionEnum): HTMLElement | null\n    {\n        let options = this.getOptions();\n        if (imagePosition == null)\n            imagePosition = options.iconSettings!.position;\n\n        let vrImageUrl = puma(this.element()).find(\".vrImageUrl\")[0];\n        if (imageUrl != null)\n        {\n            if (vrImageUrl != null)\n                puma(vrImageUrl).remove();\n\n            let options = this.options<ButtonOptions>();\n            let margin = \"\";\n            if (options.text != null && options.text != \"\")\n            {\n                if (imagePosition == PositionEnum.Left) margin = \"margin-right: 5px;\";\n                else if (imagePosition == PositionEnum.Right) margin = \"margin-left: 5px;\";\n            }\n\n            if (imagePosition == PositionEnum.Left)\n                puma(this.element()).prepend(\"<img src='\" + imageUrl + \"' vrImageUrl' style='width: 16px; height: 16px; float: left;\" + margin + \"' />\");\n            else if (imagePosition == PositionEnum.Right)\n                puma(this.element()).vrAppendPuma(\"<img src='\" + imageUrl + \"' vrImageUrl' style='width: 16px; height: 16px; float: right;\" + margin + \"' />\");\n        }\n\n        vrImageUrl = puma(this.element()).find(\".vrImageUrl\")[0];\n        return vrImageUrl;\n    }\n    //#endregion\n\n    getOptions(): ButtonOptions\n    {\n        return this.options<ButtonOptions>();\n    }\n    //#endregion\n\n    //#region Events\n    click(callback?: (e: ButtonClickEvent) => void): void\n    {\n        let options = this.getOptions();\n        if (options.confirmationMessage != null)\n            confirm(options.confirmationMessage).then(() => this.internalClick(callback), () => this.rejectedConfirm());\n        else\n            this.internalClick(callback);\n    }\n\n    private internalClick(callback?: (e: ButtonClickEvent) => void): void\n    {\n        let clickCallback = this.options<ButtonOptions>().onClick; // Left click\n        if (this._mouseDownEvent != null)\n        {\n            switch (this._mouseDownEvent.button)\n            {\n                case 0: clickCallback = this.options<ButtonOptions>().onClick; break; // Left click\n                case 1: clickCallback = this.options<ButtonOptions>().onMiddleClick; break; // Middle click\n                case 2: clickCallback = this.options<ButtonOptions>().onRightClick; break; // Right click\n            }\n        }\n\n        if (clickCallback != null)\n        {\n            let clickEvent = new ButtonClickEvent();\n            clickEvent.sender = this;\n            clickEvent.text = this.text();\n            clickCallback(clickEvent);\n        }\n        this._mouseDownEvent = null;\n\n        if (callback != null)\n        {\n            let clickEvent = new ButtonClickEvent();\n            clickEvent.sender = this;\n            clickEvent.text = this.text();\n            callback(clickEvent);\n        }\n    }\n\n    private rejectedConfirm()\n    {\n        let options = this.getOptions();\n        if (options.onRejectedConfirm != null)\n            options.onRejectedConfirm();\n    }\n    //#endregion\n}\n//#endregion\n\n//#region EventClasses\nclass ButtonEvent extends VrControlsEvent\n{\n    sender: Button;\n}\n\nclass ButtonClickEvent extends ButtonEvent\n{\n    text: string;\n}\n\nclass ButtonRightClickEvent extends ButtonEvent\n{\n    text: string;\n    leftButton?: boolean;\n    middleButton?: boolean;\n    rightButton?: boolean;\n}\n\nclass ButtonMiddleClickEvent extends ButtonEvent\n{\n    text: string;\n    leftButton?: boolean;\n    middleButton?: boolean;\n    rightButton?: boolean;\n}\n\nclass ButtonHoverEvent extends ButtonEvent\n{ }\n\nclass ButtonBlurEvent extends ButtonEvent\n{ }\n\nclass ContextMenuEvent extends ButtonEvent\n{ }\n\nclass ButtonMouseDownEvent extends ButtonEvent\n{ }\n\nclass ButtonMouseUpEvent extends ButtonEvent\n{ }\n//#endregion"],"names":["options"],"mappings":"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"}