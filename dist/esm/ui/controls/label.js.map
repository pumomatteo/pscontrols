{"version":3,"file":"label.js","sources":["../../../../src/ui/controls/label.ts"],"sourcesContent":["import { ControlTypeEnum, LabelModeEnum, DateModeEnum, puma, ColorSettings, TextAlignEnum, LabelUnderlineMode, PositionEnum, IconClass, icon } from \"../vr\";\nimport { VrControlOptions, VrControl, VrControlsEvent } from \"../common\";\nimport { UtilityManager } from \"../../../src/managers/utilityManager\";\n\n//#region Options\nexport class LabelOptions extends VrControlOptions\n{\n    text?: string | number | Date;\n    value?: string | number | Date;\n    key?: string;\n    tooltip?: boolean | string;\n    colorSettings?: ColorSettings;\n    fontSize?: number | string;\n    fontFamily?: string;\n    bold?: boolean;\n    noBr?: boolean | number;\n    mode?: LabelModeEnum;\n    align?: TextAlignEnum;\n    linkCss?: string;\n    underlineMode?: LabelUnderlineMode;\n    icon?: IconClass;\n\n    onClick?: (e: LabelClickEvent) => void;\n    onHover?: (e: LabelHoverEvent) => void;\n}\n//#endregion\n\n//#region Control\nexport class Label extends VrControl\n{\n    constructor(element: HTMLElement, options?: LabelOptions | null)\n    {\n        //#region Options\n        if (options == null)\n            options = new LabelOptions();\n\n        if (options.text == null) options.text = \"\";\n        if (options.value != null) options.text = options.value;\n\n        if (options.noBr == null) options.noBr = false;\n        if (options.mode == null) options.mode = LabelModeEnum.Default;\n\n        if (options.mode == LabelModeEnum.Currency && options.align == null)\n            options.align = TextAlignEnum.Right;\n\n        if (options.align == null) options.align = TextAlignEnum.Left;\n        if (options.tabIndex == null) options.tabIndex = -1;\n        //#endregion\n\n        super(element, options, ControlTypeEnum.Label);\n\n        if (options.label != null && options.labelSettings!.position == PositionEnum.Left)\n            this.element().style.cssText += \"margin-top: -2px;\";\n\n        if (options.width == \"100%\" && options.align == TextAlignEnum.Left && (options.labelSettings == null || options.labelSettings.position == PositionEnum.Left))\n            this.element().style.cssText += \"width: unset;\";\n\n        //#region NoBr\n        if (options.noBr !== false)\n        {\n            if (options.noBr === true)\n            {\n                this.element().style.cssText += \"white-space: nowrap; overflow:hidden; margin-bottom: -6px; text-overflow: ellipsis; display: inline-block; width: unset;\";\n                if (options.width == null)\n                    this.container().style.cssText += \"width: 100%;\";\n            }\n            else\n                this.element().style.cssText += \"overflow: hidden; display: -webkit-inline-box; -webkit-line-clamp: \" + options.noBr + \"; -webkit-box-orient: vertical; white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; word-wrap: break-word;\";\n        }\n        //#endregion\n\n        //#region Text/Tooltip\n        this.value(options.text);\n\n        if (options.tooltip != null && options.tooltip !== false)\n            this.tooltip((options.tooltip === true) ? options.text : options.tooltip);\n        //#endregion\n\n        //#region Value\n        if (options.key != null)\n            puma(this.element()).attr(\"key\", options.key);\n        //#endregion\n\n        //#region Color settings\n        if (options.colorSettings != null)\n        {\n            let colorSettings = options.colorSettings;\n            if (colorSettings.textColor != null)\n                this.color(colorSettings.textColor);\n            if (colorSettings.background != null)\n                this.backgroundColor(colorSettings.background);\n            if (colorSettings.border != null)\n                this.borderColor(colorSettings.border);\n        }\n        //#endregion\n\n        //#region Font\n        let font = \"\";\n        if (options.fontSize != null)\n        {\n            if (typeof (options.fontSize) == \"number\")\n                options.fontSize = options.fontSize + \"px\";\n\n            font += \"font-size: \" + options.fontSize + \";\";\n        }\n        if (options.fontFamily != null)\n            font += \"font-family: \" + options.fontFamily + \";\";\n        if (options.bold === true)\n            font += \"font-weight: 600;\";\n\n        this.element().style.cssText += font;\n        //#endregion\n\n        //#region Align\n        this.element().style.cssText += \"text-align: \" + options.align + \";\";\n        this.container().style.cssText += \"text-align: \" + options.align + \";\";\n        //#endregion\n\n        //#region Underline\n        let underlineOnHoverClass = \"\";\n        let underlineCss = \"\";\n        if (options.underlineMode != null)\n        {\n            switch (options.underlineMode)\n            {\n                case LabelUnderlineMode.Always: underlineCss += \"text-decoration: underline\"; break;\n                case LabelUnderlineMode.None: underlineCss += \"text-decoration: none\"; break;\n                case LabelUnderlineMode.OnHover: underlineOnHoverClass = \"labelhover\"; break;\n            }\n\n            this.element().style.cssText += underlineCss + \";\";\n            if (underlineOnHoverClass.vrIsNotNullOrEmpty())\n                puma(this.element()).addClass(underlineOnHoverClass);\n        }\n        //#endregion\n\n        //#region Events\n        if (options.onClick != null)\n            this.element().style.cssText += \"cursor: pointer;\";\n\n        puma(this.element()).click(() => this.click());\n\n        if (options.onHover != null)\n        {\n            puma(this.element()).on(\"hover\", () =>\n            {\n                let hoverEvent = new LabelHoverEvent();\n                hoverEvent.sender = this;\n                hoverEvent.text = this.value();\n                options!.onHover!(hoverEvent);\n            });\n        }\n        //#endregion\n    }\n\n    //#region Methods\n\n    //#region Text/Label/Tooltip\n    value(value?: string | number | Date): string\n    {\n        let options = this.getOptions();\n        if (value != null)\n        {\n            let linkCss = \"\";\n            if (options.linkCss != null)\n                linkCss = \" style='\" + options.linkCss + \";' \";\n\n            let mode = this.options<LabelOptions>().mode;\n            switch (mode)\n            {\n                case LabelModeEnum.Primary: puma(this.element()).addClass(\"vrLabelPrimaryMode\"); break;\n                case LabelModeEnum.Error: puma(this.element()).addClass(\"vrLabelErrorMode\"); break;\n                case LabelModeEnum.Phone: value = \"<a \" + linkCss + \" href='tel:\" + value + \"'>\" + value + \"</a>\"; break;\n                case LabelModeEnum.Mail: value = \"<a \" + linkCss + \" href='mailto:\" + value + \"'>\" + value + \"</a>\"; break;\n                case LabelModeEnum.Link: value = \"<a \" + linkCss + \" href='\" + value + \"'>\" + value + \"</a>\"; break;\n                case LabelModeEnum.Currency: value = Number(value).vrToCurrencyString(); break;\n                case LabelModeEnum.Date:\n                    {\n                        if (Date.vrIsValidDate(value))\n                            value = new Date(value).vrToItalyString(DateModeEnum.Date);\n                    }\n                    break;\n                case LabelModeEnum.DateTime:\n                    {\n                        if (Date.vrIsValidDate(value))\n                            value = new Date(value).vrToItalyString(DateModeEnum.DateTime);\n                    }\n                    break;\n                case LabelModeEnum.Time:\n                    {\n                        if (Date.vrIsValidDate(value))\n                            value = new Date(value).vrToItalyString(DateModeEnum.Time);\n                    }\n                    break;\n            }\n\n            if (options.icon != null)\n                value = \"<i class='\" + options.icon + \"'></i> \" + value;\n\n            this.element().innerHTML = String(value);\n\n            //let textWidth = UtilityManager.textWidth(this.element());\n            if (options.tooltip === true)// || (options.tooltip !== false && textWidth != null && textWidth > 0 && (textWidth + 10) > this.width()))\n                this.tooltip(this.element().textContent!);\n        }\n        return this.element().innerHTML;\n    }\n\n    appendText(value: string | number)\n    {\n        this.value(this.value() + value);\n    }\n\n    tooltip(value?: string | number | Date): string\n    {\n        if (value != null)\n            this.element().title = (typeof (value) == \"string\" || typeof (value) == \"number\") ? String(value) : value.vrToItalyString();\n\n        return this.element().title;\n    }\n    //#endregion\n\n    //#region Mail/Phone/Link\n    toTel(phoneNumber: string, customText?: string): void\n    {\n        this.element().innerHTML = this.formatLinkLabel(\"tel:\" + phoneNumber, customText);\n    }\n\n    toMail(mail: string, customText?: string): void\n    {\n        this.element().innerHTML = this.formatLinkLabel(\"mailto:\" + mail, customText);\n    }\n\n    toLink(url: string, customText?: string): void\n    {\n        this.element().innerHTML = this.formatLinkLabel(url, customText);\n    }\n\n    private formatLinkLabel(url: string, customText?: string)\n    {\n        let options = this.getOptions();\n        let linkCss = \"\";\n        if (options.linkCss != null)\n            linkCss = \" style='\" + options.linkCss + \";' \";\n\n        return \"<a \" + linkCss + \" href='\" + url + \"'>\" + ((customText != null) ? customText : this.value()) + \"</a>\";\n    }\n    //#endregion\n\n    //#region Color\n    color(value?: string): string\n    {\n        if (value != null)\n            this.element().style.cssText += \"color: \" + value;\n\n        return puma(this.element()).css(\"color\");\n    }\n\n    backgroundColor(value?: string): string\n    {\n        if (value != null)\n            this.element().style.cssText += \"background-color: \" + value;\n\n        return puma(this.element()).css(\"background-color\");\n    }\n\n    borderColor(value?: string): string\n    {\n        if (value != null)\n            this.element().style.cssText += \"border: solid 1px \" + value + \"; padding: 1px 3px 1px 3px;\";\n\n        return puma(this.element()).css(\"border-color\");\n    }\n    //#endregion\n\n    isEmpty(): boolean\n    {\n        return this.element().innerHTML === \"\";\n    }\n\n    clear(): void\n    {\n        this.element().innerHTML = \"\";\n        this.element().title = \"\";\n    }\n\n    getOptions(): LabelOptions\n    {\n        return this.options<LabelOptions>();\n    }\n    //#endregion\n\n    //#region Events\n    click(): void\n    {\n        let clickCallback = this.options<LabelOptions>().onClick;\n        if (clickCallback != null)\n        {\n            let clickEvent = new LabelClickEvent();\n            clickEvent.sender = this;\n            clickEvent.text = this.value();\n            clickCallback(clickEvent);\n        }\n    }\n    //#endregion\n}\n//#endregion\n\n//#region EventClasses\nexport class LabelClickEvent extends VrControlsEvent\n{\n    sender: Label;\n    text: string;\n}\n\nclass LabelHoverEvent extends VrControlsEvent\n{\n    sender: Label;\n    text: string;\n}\n//#endregion"],"names":[],"mappings":";;AAKO,MAAM,qBAAqB,iBAClC;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AACJ;AAIO,MAAM,cAAc,UAC3B;AAAA,EACI,YAAY,SAAsB,SAClC;AAEI,QAAI,WAAW;AACX,gBAAU,IAAI,aAAA;AAElB,QAAI,QAAQ,QAAQ,KAAM,SAAQ,OAAO;AACzC,QAAI,QAAQ,SAAS,KAAM,SAAQ,OAAO,QAAQ;AAElD,QAAI,QAAQ,QAAQ,KAAM,SAAQ,OAAO;AACzC,QAAI,QAAQ,QAAQ,KAAM,SAAQ,OAAO,cAAc;AAEvD,QAAI,QAAQ,QAAQ,cAAc,YAAY,QAAQ,SAAS;AAC3D,cAAQ,QAAQ,cAAc;AAElC,QAAI,QAAQ,SAAS,KAAM,SAAQ,QAAQ,cAAc;AACzD,QAAI,QAAQ,YAAY,KAAM,SAAQ,WAAW;AAGjD,UAAM,SAAS,SAAS,gBAAgB,KAAK;AAE7C,QAAI,QAAQ,SAAS,QAAQ,QAAQ,cAAe,YAAY,aAAa;AACzE,WAAK,QAAA,EAAU,MAAM,WAAW;AAEpC,QAAI,QAAQ,SAAS,UAAU,QAAQ,SAAS,cAAc,SAAS,QAAQ,iBAAiB,QAAQ,QAAQ,cAAc,YAAY,aAAa;AACnJ,WAAK,QAAA,EAAU,MAAM,WAAW;AAGpC,QAAI,QAAQ,SAAS,OACrB;AACI,UAAI,QAAQ,SAAS,MACrB;AACI,aAAK,QAAA,EAAU,MAAM,WAAW;AAChC,YAAI,QAAQ,SAAS;AACjB,eAAK,UAAA,EAAY,MAAM,WAAW;AAAA,MAC1C;AAEI,aAAK,UAAU,MAAM,WAAW,wEAAwE,QAAQ,OAAO;AAAA,IAC/H;AAIA,SAAK,MAAM,QAAQ,IAAI;AAEvB,QAAI,QAAQ,WAAW,QAAQ,QAAQ,YAAY;AAC/C,WAAK,QAAS,QAAQ,YAAY,OAAQ,QAAQ,OAAO,QAAQ,OAAO;AAI5E,QAAI,QAAQ,OAAO;AACf,WAAK,KAAK,QAAA,CAAS,EAAE,KAAK,OAAO,QAAQ,GAAG;AAIhD,QAAI,QAAQ,iBAAiB,MAC7B;AACI,UAAI,gBAAgB,QAAQ;AAC5B,UAAI,cAAc,aAAa;AAC3B,aAAK,MAAM,cAAc,SAAS;AACtC,UAAI,cAAc,cAAc;AAC5B,aAAK,gBAAgB,cAAc,UAAU;AACjD,UAAI,cAAc,UAAU;AACxB,aAAK,YAAY,cAAc,MAAM;AAAA,IAC7C;AAIA,QAAI,OAAO;AACX,QAAI,QAAQ,YAAY,MACxB;AACI,UAAI,OAAQ,QAAQ,YAAa;AAC7B,gBAAQ,WAAW,QAAQ,WAAW;AAE1C,cAAQ,gBAAgB,QAAQ,WAAW;AAAA,IAC/C;AACA,QAAI,QAAQ,cAAc;AACtB,cAAQ,kBAAkB,QAAQ,aAAa;AACnD,QAAI,QAAQ,SAAS;AACjB,cAAQ;AAEZ,SAAK,QAAA,EAAU,MAAM,WAAW;AAIhC,SAAK,UAAU,MAAM,WAAW,iBAAiB,QAAQ,QAAQ;AACjE,SAAK,YAAY,MAAM,WAAW,iBAAiB,QAAQ,QAAQ;AAInE,QAAI,wBAAwB;AAC5B,QAAI,eAAe;AACnB,QAAI,QAAQ,iBAAiB,MAC7B;AACI,cAAQ,QAAQ,eAAA;AAAA,QAEZ,KAAK,mBAAmB;AAAQ,0BAAgB;AAA8B;AAAA,QAC9E,KAAK,mBAAmB;AAAM,0BAAgB;AAAyB;AAAA,QACvE,KAAK,mBAAmB;AAAS,kCAAwB;AAAc;AAAA,MAAA;AAG3E,WAAK,QAAA,EAAU,MAAM,WAAW,eAAe;AAC/C,UAAI,sBAAsB,mBAAA;AACtB,aAAK,KAAK,QAAA,CAAS,EAAE,SAAS,qBAAqB;AAAA,IAC3D;AAIA,QAAI,QAAQ,WAAW;AACnB,WAAK,QAAA,EAAU,MAAM,WAAW;AAEpC,SAAK,KAAK,SAAS,EAAE,MAAM,MAAM,KAAK,OAAO;AAE7C,QAAI,QAAQ,WAAW,MACvB;AACI,WAAK,KAAK,QAAA,CAAS,EAAE,GAAG,SAAS,MACjC;AACI,YAAI,aAAa,IAAI,gBAAA;AACrB,mBAAW,SAAS;AACpB,mBAAW,OAAO,KAAK,MAAA;AACvB,gBAAS,QAAS,UAAU;AAAA,MAChC,CAAC;AAAA,IACL;AAAA,EAEJ;AAAA;AAAA;AAAA,EAKA,MAAM,OACN;AACI,QAAI,UAAU,KAAK,WAAA;AACnB,QAAI,SAAS,MACb;AACI,UAAI,UAAU;AACd,UAAI,QAAQ,WAAW;AACnB,kBAAU,aAAa,QAAQ,UAAU;AAE7C,UAAI,OAAO,KAAK,QAAA,EAAwB;AACxC,cAAQ,MAAA;AAAA,QAEJ,KAAK,cAAc;AAAS,eAAK,KAAK,QAAA,CAAS,EAAE,SAAS,oBAAoB;AAAG;AAAA,QACjF,KAAK,cAAc;AAAO,eAAK,KAAK,QAAA,CAAS,EAAE,SAAS,kBAAkB;AAAG;AAAA,QAC7E,KAAK,cAAc;AAAO,kBAAQ,QAAQ,UAAU,gBAAgB,QAAQ,OAAO,QAAQ;AAAQ;AAAA,QACnG,KAAK,cAAc;AAAM,kBAAQ,QAAQ,UAAU,mBAAmB,QAAQ,OAAO,QAAQ;AAAQ;AAAA,QACrG,KAAK,cAAc;AAAM,kBAAQ,QAAQ,UAAU,YAAY,QAAQ,OAAO,QAAQ;AAAQ;AAAA,QAC9F,KAAK,cAAc;AAAU,kBAAQ,OAAO,KAAK,EAAE,mBAAA;AAAsB;AAAA,QACzE,KAAK,cAAc;AACf;AACI,gBAAI,KAAK,cAAc,KAAK;AACxB,sBAAQ,IAAI,KAAK,KAAK,EAAE,gBAAgB,aAAa,IAAI;AAAA,UACjE;AACA;AAAA,QACJ,KAAK,cAAc;AACf;AACI,gBAAI,KAAK,cAAc,KAAK;AACxB,sBAAQ,IAAI,KAAK,KAAK,EAAE,gBAAgB,aAAa,QAAQ;AAAA,UACrE;AACA;AAAA,QACJ,KAAK,cAAc;AACf;AACI,gBAAI,KAAK,cAAc,KAAK;AACxB,sBAAQ,IAAI,KAAK,KAAK,EAAE,gBAAgB,aAAa,IAAI;AAAA,UACjE;AACA;AAAA,MAAA;AAGR,UAAI,QAAQ,QAAQ;AAChB,gBAAQ,eAAe,QAAQ,OAAO,YAAY;AAEtD,WAAK,QAAA,EAAU,YAAY,OAAO,KAAK;AAGvC,UAAI,QAAQ,YAAY;AACpB,aAAK,QAAQ,KAAK,QAAA,EAAU,WAAY;AAAA,IAChD;AACA,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA,EAEA,WAAW,OACX;AACI,SAAK,MAAM,KAAK,MAAA,IAAU,KAAK;AAAA,EACnC;AAAA,EAEA,QAAQ,OACR;AACI,QAAI,SAAS;AACT,WAAK,QAAA,EAAU,QAAS,OAAQ,SAAU,YAAY,OAAQ,SAAU,WAAY,OAAO,KAAK,IAAI,MAAM,gBAAA;AAE9G,WAAO,KAAK,UAAU;AAAA,EAC1B;AAAA;AAAA;AAAA,EAIA,MAAM,aAAqB,YAC3B;AACI,SAAK,UAAU,YAAY,KAAK,gBAAgB,SAAS,aAAa,UAAU;AAAA,EACpF;AAAA,EAEA,OAAO,MAAc,YACrB;AACI,SAAK,UAAU,YAAY,KAAK,gBAAgB,YAAY,MAAM,UAAU;AAAA,EAChF;AAAA,EAEA,OAAO,KAAa,YACpB;AACI,SAAK,UAAU,YAAY,KAAK,gBAAgB,KAAK,UAAU;AAAA,EACnE;AAAA,EAEQ,gBAAgB,KAAa,YACrC;AACI,QAAI,UAAU,KAAK,WAAA;AACnB,QAAI,UAAU;AACd,QAAI,QAAQ,WAAW;AACnB,gBAAU,aAAa,QAAQ,UAAU;AAE7C,WAAO,QAAQ,UAAU,YAAY,MAAM,QAAS,cAAc,OAAQ,aAAa,KAAK,MAAA,KAAW;AAAA,EAC3G;AAAA;AAAA;AAAA,EAIA,MAAM,OACN;AACI,QAAI,SAAS;AACT,WAAK,QAAA,EAAU,MAAM,WAAW,YAAY;AAEhD,WAAO,KAAK,KAAK,QAAA,CAAS,EAAE,IAAI,OAAO;AAAA,EAC3C;AAAA,EAEA,gBAAgB,OAChB;AACI,QAAI,SAAS;AACT,WAAK,QAAA,EAAU,MAAM,WAAW,uBAAuB;AAE3D,WAAO,KAAK,KAAK,QAAA,CAAS,EAAE,IAAI,kBAAkB;AAAA,EACtD;AAAA,EAEA,YAAY,OACZ;AACI,QAAI,SAAS;AACT,WAAK,QAAA,EAAU,MAAM,WAAW,uBAAuB,QAAQ;AAEnE,WAAO,KAAK,KAAK,QAAA,CAAS,EAAE,IAAI,cAAc;AAAA,EAClD;AAAA;AAAA,EAGA,UACA;AACI,WAAO,KAAK,UAAU,cAAc;AAAA,EACxC;AAAA,EAEA,QACA;AACI,SAAK,UAAU,YAAY;AAC3B,SAAK,UAAU,QAAQ;AAAA,EAC3B;AAAA,EAEA,aACA;AACI,WAAO,KAAK,QAAA;AAAA,EAChB;AAAA;AAAA;AAAA,EAIA,QACA;AACI,QAAI,gBAAgB,KAAK,QAAA,EAAwB;AACjD,QAAI,iBAAiB,MACrB;AACI,UAAI,aAAa,IAAI,gBAAA;AACrB,iBAAW,SAAS;AACpB,iBAAW,OAAO,KAAK,MAAA;AACvB,oBAAc,UAAU;AAAA,IAC5B;AAAA,EACJ;AAAA;AAEJ;AAIO,MAAM,wBAAwB,gBACrC;AAAA,EACI;AAAA,EACA;AACJ;AAEA,MAAM,wBAAwB,gBAC9B;AAAA,EACI;AAAA,EACA;AACJ;"}