{"version":3,"file":"comboBox.js","sources":["../../../../src/ui/controls/comboBox.ts"],"sourcesContent":["import { VrControlOptions, VrControl, VrControlsEvent } from \"../common\";\nimport { ControlTypeEnum, ComboBoxTypeEnum, ComboBoxTreeModeEnum, ComboBoxItem, IconClassicLight, IconClass, createTextBox, ControlPositionEnum, TextAlignEnum, PositionEnum, PopupSettings, ComboBoxWebServiceSettings, puma, createCheckBox, CheckboxStateEnum, KeyEnum, WebApiModeEnum, shadowRoot, createButton, ComboBoxTemplateEvent, ComboBoxChangeEvent, ComboBoxChangingEvent, ComboBoxClearEvent, SortDirectionEnum, SortByComboSettings, IconClassicRegular, icon, IconClassicSolid, isMobile, isIphone } from \"../vr\";\nimport { UtilityManager } from \"../../managers/utilityManager\";\nimport { TextBox } from \"./textbox\";\nimport { CheckBox } from \"./checkbox\";\nimport { Button, ButtonOptions } from \"./button\";\nimport { Icon } from \"./icon\";\n\n//#region Options\nexport class ComboBoxOptions extends VrControlOptions\n{\n    mode?: ComboBoxTypeEnum;\n    checkboxes?: boolean;\n    freeText?: boolean;\n    filter?: boolean;\n    treeMode?: ComboBoxTreeModeEnum;\n    value?: string | number | string[] | number[];\n    webService?: ComboBoxWebServiceSettings;\n    items?: ComboBoxItem[];\n    clearButton?: boolean;\n    addButton?: boolean | ButtonOptions;\n    nullable?: boolean | ComboBoxNullableItem;\n    textAlign?: TextAlignEnum;\n    placeholder?: string;\n    popupSettings?: PopupSettings;\n    allSelectedMessage?: string;\n    textEllipsis?: boolean;\n    noBr?: boolean;\n    onlyIcon?: boolean;\n    icon?: IconClass;\n    imageUrl?: string;\n    checkAll?: boolean;\n    showCheckAll?: boolean | CheckAllSettings;\n    tooltip?: string;\n    template?: (e: ComboBoxTemplateEvent) => string;\n\n    onBeforeChange?(e: ComboBoxChangingEvent): void;\n    onAfterChange?(e: ComboBoxChangeEvent): void;\n    onKeyDown?(e: ComboBoxKeyDownEvent): void;\n    onKeyUp?(e: ComboBoxKeyUpEvent): void;\n    onEnterKey?(e: ComboBoxEnterKeyEvent): void;\n    onBeforeOpen?(e: ComboBoxOpenEvent): void;\n    onAfterOpen?(e: ComboBoxOpenEvent): void;\n    onClose?(e: ComboBoxCloseEvent): void;\n    onItemDataBound?(e: ComboBoxItemDataBoundEvent): void;\n    onFocus?(e: ComboBoxFocusEvent): void;\n    onBlur?(e: ComboBoxBlurEvent): void;\n    onClear?(e: ComboBoxClearEvent): void;\n    onPaste?(e: ComboBoxPasteEvent): void;\n}\n//#endregion\n\n//#region Control\nexport class ComboBox extends VrControl\n{\n    private _items: ComboBoxItem[];\n    private _popup: HTMLElement;\n    private _isDivElement: boolean;\n    private _value?: string[] | null;\n    private _tempValueWebService?: string[] | null;\n    private _txtSearchFilter: TextBox;\n    private _chkCheckAll: CheckBox;\n    private _typedTextWebService: string | null;\n    private _isChecked: boolean;\n    private _tempCheckedValue: string | null;\n    private _openPopupAfterFocus: boolean;\n    private _btnCombo: Button;\n    private _divPickerIcon: HTMLElement;\n    private _allCheckedOnlyIcon: HTMLElement;\n    private _iconCombo: HTMLElement | null;\n\n    private _dictionaryValueLi: Map<string, HTMLElement[]>;\n    private _checkedValues: string[];\n    private _openedValue: any;\n    private _lastAjaxCallGuid: string;\n    private _focusWithArrows: boolean;\n    private _callbackAfterValue?: null | ((e: ComboBoxChangeEvent) => void);\n\n    constructor(element: HTMLElement, options?: ComboBoxOptions | null)\n    {\n        //#region Options\n        if (options == null)\n            options = new ComboBoxOptions();\n\n        if (options.mode == null) options.mode = ComboBoxTypeEnum.Combo;\n        if (options.treeMode == null) options.treeMode = ComboBoxTreeModeEnum.AllExpanded;\n        if (options.freeText == null) options.freeText = false;\n        if (options.checkboxes == null) options.checkboxes = false;\n        if (options.filter == null) options.filter = true;\n        if (options.clearButton == null) options.clearButton = false;\n        if (options.addButton == null) options.addButton = false;\n        if (options.textAlign == null) options.textAlign = TextAlignEnum.Left;\n        if (options.textEllipsis == null) options.textEllipsis = false;\n        if (options.checkAll == null) options.checkAll = false;\n        if (options.noBr == null) options.noBr = true;\n\n        if (options.showCheckAll == null && options.checkboxes == true) options.showCheckAll = true;\n        if (options.showCheckAll != null && typeof (options.showCheckAll) != \"boolean\")\n            if (options.showCheckAll.triggerChange == null) options.showCheckAll.triggerChange = true;\n\n        if (options.popupSettings == null)\n            options.popupSettings = { maxHeight: 200, maxWidth: 500 };\n        else if (options.popupSettings.maxHeight == null && options.popupSettings.height == null)\n            options.popupSettings.maxHeight = 200;\n        else if (options.popupSettings.maxWidth == null && options.popupSettings.width == null)\n            options.popupSettings.maxWidth = 500;\n\n        if (options.mode == ComboBoxTypeEnum.DropDown) \n        {\n            options.checkboxes = false;\n            options.freeText = false;\n            options.placeholder = undefined;\n        }\n\n        if (options.webService != null || options.freeText) \n        {\n            options.mode = ComboBoxTypeEnum.Combo;\n            options.checkboxes = false;\n            options.filter = false;\n\n            if (options.webService != null)\n            {\n                options.items = undefined;\n                if (options.webService.searchAfterCharsNumber == null) options.webService.searchAfterCharsNumber = 3;\n            }\n        }\n\n        if (options.mode == ComboBoxTypeEnum.Combo && !options.checkboxes)\n            options.filter = false;\n\n        if (options.checkboxes === true) \n        {\n            options.mode = ComboBoxTypeEnum.Combo;\n            options.nullable = false;\n        }\n\n        if (options.onlyIcon == null) options.onlyIcon = false;\n        if (options.width == null) options.width = (options.onlyIcon) ? 40 : 200;\n        //#endregion\n\n        super(element, options, ControlTypeEnum.ComboBox);\n        puma(element).attr(\"type\", \"text\");\n        puma(element).attr(\"autocomplete\", \"off\");\n\n        this._isDivElement = puma(this.element()).is(\"div\");\n\n        this._checkedValues = [];\n        this._openPopupAfterFocus = true;\n\n        this.items((options.items != null) ? options.items : [], false);\n\n        //#region Mode\n        switch (options.mode)\n        {\n            case ComboBoxTypeEnum.Combo: puma(this.element()).addClass(\"vrComboBox\"); break;\n            case ComboBoxTypeEnum.DropDown: puma(this.element()).addClass(\"vrComboBoxDropDown\"); break;\n        }\n\n        if (options.mode == ComboBoxTypeEnum.Combo)\n        {\n            if (this._isDivElement)\n                puma(this.element()).addClass(\"vrComboBoxCheckbox\");\n            else\n            {\n                puma(this.element()).addClass(\"vrComboBox\");\n                if (options.placeholder != null)\n                    (this.element() as HTMLInputElement).placeholder = options.placeholder;\n            }\n        }\n\n        if (options.mode == ComboBoxTypeEnum.DropDown || options.checkboxes)\n        {\n            if (!this._isDivElement)\n                throw Error(\"L'element html deve essere un div\");\n        }\n        else if (this._isDivElement)\n            throw Error(\"L'element html deve essere un input\");\n        //#endregion\n\n        //#region Tooltip\n        if (options.tooltip != null)\n            puma(this.element()).attr(\"title\", options.tooltip);\n        //#endregion\n\n        //#region Picker icon\n        let pickerIcon = UtilityManager.createIcon(IconClassicLight.CaretDown);\n        let classPickerIcon = \"vrDivPickerIconComboBox\";\n        if (this._isDivElement)\n            classPickerIcon = \"vrDivPickerIconComboBoxDropDown\";\n\n        this._divPickerIcon = puma(\"<div class='\" + classPickerIcon + \"'></div>\").vrAppendToPuma(this.container())[0];\n        puma(this._divPickerIcon).vrAppendPuma(pickerIcon);\n        puma(this._divPickerIcon).click(() => \n        {\n            if (puma(\".comboBox_divPopup\").is(\":visible\"))\n                this.close();\n            else\n            {\n                this.open();\n                this.focus();\n            }\n        });\n\n        puma(this._divPickerIcon).on(\"mouseenter\", (e: JQuery.MouseEnterEvent) => puma(this.element()).addClass(\"hoverClass\"))\n        puma(this._divPickerIcon).on(\"mouseleave\", (e: JQuery.MouseLeaveEvent) => puma(this.element()).removeClass(\"hoverClass\"))\n\n        if (options.label != null && options.labelSettings!.position == PositionEnum.Top)\n            this._divPickerIcon.style.cssText += \"bottom: 1px; top: inherit;\";\n        //#endregion\n\n        //#region Clear button\n        let clearIcon = UtilityManager.createIcon(IconClassicRegular.Xmark);\n        let divClearIcon = puma(\"<div class='vrDivComboBoxClearIcon' style='display: none;'></div>\").vrAppendToPuma(this.container())[0];\n        if (options.addButton !== false)\n            divClearIcon.style.cssText += \"right: 57px;\";\n\n        puma(divClearIcon).vrAppendPuma(clearIcon);\n        puma(divClearIcon).click((e: any) => \n        {\n            if (this.enabled())\n                this.clear(true);\n        });\n        //#endregion\n\n        //#region Button\n        if (options.addButton !== false)\n        {\n            if (options.addButton === true) options.addButton = new ButtonOptions();\n            if (options.addButton.icon == null) options.addButton.icon = IconClassicLight.Plus;\n            options.addButton.cssContainer = options.addButton.cssContainer + \"; position: absolute; right: 0px; bottom: 0px;\";\n            options.addButton.css = options.addButton.css + \"; border-top-left-radius: 0px; border-bottom-left-radius: 0px; height: 26px;\";\n            if (options.addButton.enable == null) options.addButton.enable = options.enable;\n\n            this._btnCombo = createButton(options.addButton, this.container());\n\n            if (options.addButton.visible !== false)\n                this._divPickerIcon.classList.add(\"vrComboDivPickerWithButton\");\n        }\n        //#endregion\n\n        //#region Value\n        if (options.value != null)\n            this.value(options.value, false);\n        //#endregion\n\n        //#region Text align\n        switch (options.textAlign)\n        {\n            case TextAlignEnum.Left: this.element().style.cssText += \"text-align: left;\"; break;\n            case TextAlignEnum.Center: this.element().style.cssText += \"text-align: center;\"; break;\n            case TextAlignEnum.Right: this.element().style.cssText += \"text-align: right;\"; break;\n        }\n        //#endregion\n\n        //#region Icon/ImageUrl\n        this._iconCombo = null;\n        if (options.icon != null && options.icon != \"\")\n        {\n            let style = \"\";\n            if (this.options().label == null)\n                style = \"margin-left: 6px; margin-top: -1px;\";\n            else\n            {\n                let labelWidth = puma(this.container()).find(\".vrLabel\").width();\n                if (options.labelSettings != null && options.labelSettings.width != null)\n                    labelWidth = options.labelSettings.width;\n\n                if (this.options().labelSettings!.position == PositionEnum.Left || this.options().labelSettings!.position == PositionEnum.Right)\n                    style = \"margin-left: \" + (labelWidth + 10) + \"px; margin-top: -1px;\";\n                else\n                    style = \"left: 6px; bottom: 6px;\";\n            }\n\n            this._iconCombo = puma(\"<i class='\" + options.icon + \"' style='cursor: pointer; font-size: 14px; position: absolute;\" + style + \"'></i>\")[0];\n            puma(this.element()).vrBeforePuma(this._iconCombo);\n            this.element().style.cssText += \"text-indent: 18px;\";\n\n            if (options.tooltip != null)\n                puma(this._iconCombo).attr(\"title\", options.tooltip);\n\n            puma(this._iconCombo).click(() => \n            {\n                if (puma(\".comboBox_divPopup\").is(\":visible\"))\n                    this.close();\n                else\n                {\n                    this.open();\n                    this.focus();\n                }\n            });\n\n            puma(this._iconCombo).on(\"mouseenter\", (e: JQuery.MouseEnterEvent) => puma(this.element()).addClass(\"hoverClass\"))\n            puma(this._iconCombo).on(\"mouseleave\", (e: JQuery.MouseLeaveEvent) => puma(this.element()).removeClass(\"hoverClass\"))\n        }\n        else if (options.imageUrl != null && options.imageUrl != \"\")\n            this.element().style.cssText += \"background-image: url(\" + options.imageUrl + \"); background-position: 4px 5px; background-repeat: no-repeat; text-indent: 13px;\";\n        //#endregion\n\n        //#region Only icons\n        if (options.onlyIcon && options.icon != null && options.icon != \"\")\n            this._allCheckedOnlyIcon = icon(IconClassicSolid.Check, this._iconCombo, { css: \"display: none; position: absolute; z-index: 2; font-size: 9px; top: -5px; right: -7px;\" });\n        //#endregion\n\n        //#region Check all\n        if (options.checkAll)\n            this.checkAll(false);\n        //#endregion\n\n        //#region Searching text\n        if (options.mode == ComboBoxTypeEnum.Combo)\n        {\n            puma(this.element()).keydown((e: JQuery.KeyDownEvent) =>\n            {\n                this.open();\n                if (options!.onKeyDown != null)\n                {\n                    let onKeyDownEvent = new ComboBoxKeyDownEvent();\n                    onKeyDownEvent.sender = this;\n                    onKeyDownEvent.event = e;\n                    options!.onKeyDown(onKeyDownEvent);\n\n                    if (onKeyDownEvent.isDefaultPrevented())\n                        return;\n                }\n\n                if (options!.onEnterKey != null && e.key == KeyEnum.Enter)\n                {\n                    let onEnterKeyEvent = new ComboBoxEnterKeyEvent();\n                    onEnterKeyEvent.sender = this;\n                    onEnterKeyEvent.value = this.value();\n                    options!.onEnterKey(onEnterKeyEvent);\n\n                    if (onEnterKeyEvent.isDefaultPrevented())\n                        return;\n                }\n\n                if (e.key != KeyEnum.Tab)\n                    this.limitInputByDataSource((this.element() as HTMLInputElement), e);\n\n                let text = (this.element() as HTMLInputElement).value;\n                let selectionStart = (this.element() as HTMLInputElement).selectionStart;\n                let selectionEnd = (this.element() as HTMLInputElement).selectionEnd;\n                if (selectionEnd != null && selectionStart != null && ((selectionEnd - selectionStart) == text.length) && e.key == KeyEnum.Backspace)\n                {\n                    this.value(null);\n                    this.change();\n                }\n                else if (e.key == KeyEnum.Backspace && text.length == 0)\n                    this.change();\n            });\n\n            let timeout = 0;\n            puma(this.element()).keyup((e: JQuery.KeyUpEvent) =>\n            {\n                this.open();\n                if (e.key == KeyEnum.ArrowRight || e.key == KeyEnum.ArrowLeft || e.key == KeyEnum.Control || e.ctrlKey)\n                {\n                    if (!(e.key == \"v\" && e.ctrlKey))\n                    {\n                        e.preventDefault();\n                        return;\n                    }\n                }\n\n                if (options!.onKeyUp != null)\n                {\n                    let onKeyUpEvent = new ComboBoxKeyUpEvent();\n                    onKeyUpEvent.sender = this;\n                    onKeyUpEvent.event = e;\n                    options!.onKeyUp(onKeyUpEvent);\n\n                    if (onKeyUpEvent.isDefaultPrevented())\n                        return;\n                }\n\n                if (e.key == KeyEnum.ArrowDown && !options!.checkboxes)\n                {\n                    let li = null;\n                    if (this.value() == null)\n                        li = puma(this._popup).find(\"li:visible\").first();\n                    else\n                        li = puma(this._dictionaryValueLi.get(this.value<string>()!)).next();\n\n                    li.focus();\n\n                    e.preventDefault();\n                    return;\n                }\n\n                if (e.key == KeyEnum.ArrowUp && !options!.checkboxes)\n                {\n                    let li = null;\n                    if (this.value() == null)\n                        li = puma(this._popup).find(\"li:visible\").first();\n                    else\n                        li = puma(this._dictionaryValueLi.get(this.value<string>()!)).prev();\n\n                    li.focus();\n\n                    e.preventDefault();\n                    return;\n                }\n\n                if (e.key == KeyEnum.Enter || e.key == KeyEnum.Tab || e.key == KeyEnum.Shift)\n                    return;\n                else\n                    this._value = null;\n\n                if (e.key != KeyEnum.Tab)\n                    this.limitInputByDataSource((this.element() as HTMLInputElement), e);\n\n                clearTimeout(timeout);\n                timeout = window.setTimeout(() =>\n                {\n                    let text = (this.element() as HTMLInputElement).value;\n                    if (options!.webService == null)\n                    {\n                        let filteredItems = this.filter(text, this.element());\n                        if (e.key == \"v\" && e.ctrlKey && filteredItems.length == 1)\n                        {\n                            this.value(filteredItems[0].value);\n                            this.close();\n                        }\n                    }\n                    else\n                    {\n                        if (text == \"\")\n                        {\n                            this._items = [];\n                            puma(this._popup).find(\"ul\").remove();\n                            return;\n                        }\n                        else\n                        {\n                            if (text.length < options!.webService!.searchAfterCharsNumber!)\n                                return;\n\n                            let selectionStart = (this.element() as HTMLInputElement).selectionStart;\n                            let selectionEnd = (this.element() as HTMLInputElement).selectionEnd;\n                            if (!(selectionStart == 0 && selectionEnd == (this.element() as HTMLInputElement).value.length))\n                                this.doAjaxCall(text);\n                        }\n                    }\n                }, 300);\n            });\n\n            puma(this.element()).on(\"paste\", (e: any) =>\n            {\n                this.open();\n                let pastedValue = e.originalEvent.clipboardData.getData(\"text\");\n\n                timeout = window.setTimeout(() =>\n                {\n                    if (options!.onPaste != null)\n                    {\n                        let event = new ComboBoxPasteEvent();\n                        event.sender = this;\n                        event.pastedValue = pastedValue;\n                        event.value = this.value() + pastedValue;\n                        event.event = e;\n                        options!.onPaste(event);\n\n                        if (event.isDefaultPrevented())\n                        {\n                            e.preventDefault();\n                            return;\n                        }\n                    }\n\n                    let text = (this.element() as HTMLInputElement).value;\n                    if (options!.webService == null)\n                    {\n                        let filteredItems = this.filter(text, this.element());\n                        if (e.key == \"v\" && e.ctrlKey && filteredItems.length == 1)\n                        {\n                            this.value(filteredItems[0].value);\n                            this.close();\n                        }\n                    }\n                    else\n                    {\n                        if (text == \"\")\n                        {\n                            this._items = [];\n                            puma(this._popup).find(\"ul\").remove();\n                            return;\n                        }\n                        else\n                        {\n                            let selectionStart = (this.element() as HTMLInputElement).selectionStart;\n                            let selectionEnd = (this.element() as HTMLInputElement).selectionEnd;\n                            if (!(selectionStart == 0 && selectionEnd == (this.element() as HTMLInputElement).value.length))\n                                this.doAjaxCall(text);\n                        }\n                    }\n                }, 300);\n            })\n        }\n        //#endregion\n\n        //#region Click/Focus\n        if (!this._isDivElement)\n        {\n            puma(this.element()).focus((e: any) => \n            {\n                (this.element() as HTMLInputElement).select();\n                if (this._openPopupAfterFocus)\n                    this.open();\n\n                this._openPopupAfterFocus = true;\n\n                if (options!.onFocus != null)\n                {\n                    let blurEvent = new ComboBoxFocusEvent();\n                    blurEvent.sender = this;\n                    blurEvent.value = this.value();\n                    options!.onFocus(blurEvent);\n                }\n            });\n            puma(this.element()).blur((e: any) => window.setTimeout(() => \n            {\n                if (this.value() == null && puma(this._popup).find(\".keydownFocus\").length == 0)\n                    this.filter(\"\", this.element());\n\n                if (this._popup != null && !this._focusWithArrows)\n                    this.close();\n\n                if (options!.onBlur != null)\n                {\n                    let blurEvent = new ComboBoxBlurEvent();\n                    blurEvent.sender = this;\n                    blurEvent.value = this.value();\n                    options!.onBlur(blurEvent);\n                }\n            }, 200));\n        }\n        else\n            puma(this.element()).click((e: any) => { (puma(this._popup).is(\":visible\")) ? this.close() : this.open() });\n        //#endregion\n\n        if (!isMobile())\n        {\n            let baseListener = (shadowRoot() != null) ? shadowRoot() : document;\n            baseListener!.addEventListener(\"scroll\", (e) =>\n            {\n                if (!puma(e.target).hasClass(\"comboBox_divPopup\") && puma(this._popup).is(\":visible\"))\n                {\n                    this.blur();\n                    this.close();\n                }\n            }, true);\n        }\n    }\n\n    //#region Methods\n    close(): void\n    {\n        let options = this.getOptions();\n        puma(this._popup).remove();\n        (this._popup as any) = null;\n        this._focusWithArrows = false;\n        this._dictionaryValueLi = new Map<string, HTMLElement[]>();\n\n        if (this._isDivElement)\n            puma(\"#vrComboBoxBackground_\" + this.element().id).remove();\n\n        if (options.onClose != null)\n        {\n            let closeEvent = new ComboBoxCloseEvent();\n            closeEvent.sender = this;\n            closeEvent.beforeValue = this._openedValue;\n            closeEvent.afterValue = this.value();\n            options.onClose(closeEvent);\n        }\n\n        if (options.mode == ComboBoxTypeEnum.Combo && this._value == null)\n        {\n            if (options.freeText)\n                this.valueInternal((this.element() as HTMLInputElement).value);\n            else\n                (this.element() as HTMLInputElement).value = \"\";\n        }\n    }\n\n    open(): void\n    {\n        let options = this.getOptions();\n        if (!this.enabled())\n            return;\n\n        if (puma(this._popup).is(\":visible\"))\n            return;\n\n        if (options.onBeforeOpen != null)\n        {\n            let beforeOpenEvent = new ComboBoxOpenEvent();\n            beforeOpenEvent.sender = this;\n            beforeOpenEvent.value = this.value();\n            options.onBeforeOpen(beforeOpenEvent);\n\n            if (beforeOpenEvent.isDefaultPrevented())\n                return;\n        }\n\n        if (this._popup == null)\n            this._popup = puma(\"<div class='comboBox_divPopup vrPopup' id='\" + this.element().id + \"_divPopup'></div>\").vrAppendToPuma((shadowRoot() != null) ? shadowRoot() : document.body)[0];\n\n        if (this.getRootItems().length == 0)\n            puma(this._popup).addClass(\"vrComboBoxFlat\");\n        else\n            puma(this._popup).removeClass(\"vrComboBoxFlat\");\n\n        window.setTimeout(() =>\n        {\n            this.drawDataSource();\n\n            if (this._isDivElement)\n            {\n                let zIndex = puma(this._popup).css(\"z-index\") - 1;\n                let background = puma(\"<div class='vrWindowBackground' id='vrComboBoxBackground_\" + this.element().id + \"' style='background-color: transparent; display: block; z-index: \" + zIndex + \";'></div>\").vrAppendToPuma((shadowRoot() != null) ? shadowRoot() : document.body)[0];\n                puma(background).click((e: any) => this.close());\n            }\n\n            //#region Popup\n            let minWidth = puma(this.element()).outerWidth();\n            if (options.popupSettings!.width != null && minWidth > options.popupSettings!.width)\n                minWidth = options.popupSettings!.width;\n\n            if (options.popupSettings!.minWidth != null)\n                minWidth = options.popupSettings!.minWidth;\n\n            if (minWidth < 100)\n                minWidth = 100;\n\n            if (options.popupSettings != null)\n                options.popupSettings.minWidth = minWidth;\n            else\n                this._popup.style.cssText += \"min-width: \" + minWidth + \"px;\";\n\n            super.settingPopup(this._popup, options.popupSettings!);\n            //#endregion\n\n            //#region Check all\n            if (options.showCheckAll)\n            {\n                this._chkCheckAll = createCheckBox(\n                    {\n                        addToControlList: false,\n                        text: \"Seleziona tutti...\",\n                        width: \"100%\",\n                        cssContainer: \"padding-bottom: 5px; margin-bottom: 5px; border-bottom: solid 1px #d0d0d0;\",\n                        class: \"vrComboBoxSelectAll\",\n                        enable: options.enable,\n                        onCheck: (e) => \n                        {\n                            let triggerChange = true;\n                            if (typeof (options!.showCheckAll) == \"boolean\")\n                                triggerChange = options!.showCheckAll;\n                            else\n                                triggerChange = options!.showCheckAll!.triggerChange!;\n\n                            if (e.checked)\n                                this.checkAll(triggerChange);\n                            else\n                                this.unCheckAll(triggerChange);\n                        }\n                    }, this._popup, ControlPositionEnum.Before);\n            }\n            //#endregion\n\n            //#region Filter\n            if (options.filter === true && puma(this._popup).find(\".vrComboBoxFilter\").length == 0)\n            {\n                let timeout = 0;\n                this._txtSearchFilter = createTextBox(\n                    {\n                        width: \"100%\",\n                        icon: IconClassicLight.Search,\n                        placeholder: \"Cerca...\",\n                        class: \"vrComboBoxFilter\",\n                        cssContainer: \"margin-bottom: 5px; margin-top: 5px;\",\n                        onKeyDown: (e) =>\n                        {\n                            this.limitInputByDataSource(e.sender.element() as HTMLInputElement, e);\n                        },\n                        onKeyUp: (e) =>\n                        {\n                            this.limitInputByDataSource(e.sender.element() as HTMLInputElement, e);\n                            clearTimeout(timeout);\n                            timeout = window.setTimeout(() => \n                            {\n                                let text: string = e.sender.value();\n                                this.filter(text, this._txtSearchFilter.element());\n                            }, 100);\n                        }\n                    }, this._popup, ControlPositionEnum.Before);\n            }\n\n            if (this._txtSearchFilter != null)\n                puma(this._txtSearchFilter.element()).focus();\n            //#endregion  \n\n            //#region Value\n            if (options.webService == null)\n                this.value(this.value(), false);\n\n            this._openedValue = this.value();\n\n            if (!options.checkboxes)\n            {\n                let liValue = this._dictionaryValueLi.get(this.value<string>()!);\n                if (liValue != null)\n                {\n                    puma(liValue).addClass(\"vrComboBoxSelectedComboValue\");\n\n                    let topPosition = puma(liValue).offset().top - puma(this._popup).offset().top - (puma(this._popup).height() / 2);\n                    if (topPosition < 0) topPosition = 0;\n                    this._popup.scrollTo(0, topPosition);\n                }\n            }\n            //#endregion\n\n            if (options.onAfterOpen != null)\n            {\n                let afterOpenEvent = new ComboBoxOpenEvent();\n                afterOpenEvent.sender = this;\n                afterOpenEvent.value = this._openedValue;\n                options.onAfterOpen(afterOpenEvent);\n            }\n        });\n    }\n\n    private limitInputByDataSource(element: HTMLInputElement, e: any): void\n    {\n        let options = this.getOptions();\n        if (options.webService != null || options.freeText === true)\n            return;\n\n        let filtered = this.getFilteredArrayByInputText(element.value);\n        if (filtered.length == 0)\n        {\n            let newText = element.value;\n            element.value = newText.substring(0, newText.length - 1);\n            e.preventDefault();\n            return;\n        }\n    }\n\n    private filter(text: string, element: HTMLElement)\n    {\n        let selectionStart = (element as HTMLInputElement).selectionStart;\n        let selectionEnd = (element as HTMLInputElement).selectionEnd;\n        let itemsToReturn: ComboBoxItem[] = [];\n\n        if (text == \"\" || text == null)\n        {\n            puma(this._popup).find(\"li\").show();\n            if (this.getOptions().webService != null)\n            {\n                this._items = [];\n                puma(this._popup).find(\".vrComboBoxUl\").remove();\n            }\n        }\n        else if (!(selectionStart == 0 && selectionEnd == (element as HTMLInputElement).value.length))\n        {\n            puma(this._popup).find(\"li\").hide();\n\n            let items = this.getFilteredArrayByInputText(text);\n            itemsToReturn = items;\n\n            let values = items.map(k => k.value);\n            let texts = items.map(k => UtilityManager.htmlDecode(k.text));\n\n            for (let item of items)\n            {\n                let parentValue = item.parentValue;\n                while (parentValue != null)\n                {\n                    let parentItem = this.items().filter(k => k.value == parentValue)[0];\n                    if (!values.includes(parentValue))\n                    {\n                        values.push(parentValue);\n                        texts.push(UtilityManager.htmlDecode(parentItem.text));\n                    }\n                    parentValue = (parentItem != null) ? parentItem.parentValue : undefined;\n                    if (parentValue == parentItem.value)\n                        parentValue = undefined;\n                }\n            }\n\n            for (let comboItemText of Array.from<HTMLSpanElement>(puma(this._popup).find(\".vrComboBoxItemText\")))\n            {\n                if (texts.includes(String(puma(comboItemText).attr(\"text\")).trim()))\n                {\n                    puma(comboItemText).closest(\".vrComboBoxLi\").show();\n                    puma(comboItemText).closest(\".vrComboBoxLi\").closest(\".vrComboBoxUl\").show();\n\n                    puma(comboItemText).closest(\".vrComboBoxLi\").find(\".vrComboBoxDivIconExpand\").removeClass(\"caret-right caret-down\");\n                    puma(comboItemText).closest(\".vrComboBoxLi\").find(\".vrComboBoxDivIconExpand\").children(\"i\").removeClass(IconClassicLight.CaretRight + \" \" + IconClassicLight.CaretDown);\n                    puma(comboItemText).closest(\".vrComboBoxLi\").find(\".vrComboBoxDivIconExpand\").addClass(\"caret-down\");\n                    puma(comboItemText).closest(\".vrComboBoxLi\").find(\".vrComboBoxDivIconExpand\").children(\"i\").addClass(IconClassicLight.CaretDown);\n                }\n            }\n        }\n        return itemsToReturn;\n    }\n\n    private drawDataSource(searchedText?: string | null): void\n    {\n        puma(this._popup).find(\".vrComboBoxUl\").remove();\n\n        let items = this.items();\n        if (searchedText != null)\n            items = this.getFilteredArrayByInputText(searchedText);\n\n        if (items.length == 1 && items[0] == null)\n            return;\n\n        this._dictionaryValueLi = new Map<string, HTMLElement[]>();\n        items = items.filter(k => k.parentValue == null);\n\n        if (this._popup != null)\n            this.drawItems(items, this._popup);\n    }\n\n    private drawItems(items: ComboBoxItem[], elementToAppend: HTMLElement): void\n    {\n        let options = this.getOptions();\n        if (items.length == 0)\n            return;\n\n        let ul = puma(\"<ul class='vrComboBoxUl'></ul>\").vrAppendToPuma(elementToAppend);\n        for (let item of items)\n        {\n            if (item.value == null)\n                item.value = item.text;\n\n            let children = this.getOnlyChildrenItems(item);\n\n            let li = puma(\"<li class='vrComboBoxLi' tabindex='-1'></li>\").vrAppendToPuma(ul);\n            if (this._dictionaryValueLi.has(String(item.value)))\n            {\n                let actualLiList = this._dictionaryValueLi.get(String(item.value))!;\n                actualLiList.push(li[0]);\n                this._dictionaryValueLi.set(String(item.value), actualLiList);\n            }\n            else\n                this._dictionaryValueLi.set(String(item.value), [li[0]]);\n\n            //#region Key support\n            if (!options.checkboxes)\n            {\n                puma(li).on(\"focusin\", (e: JQuery.FocusEvent) => \n                {\n                    this._focusWithArrows = true;\n                    puma(this._popup).find(\".vrComboBoxSelectedComboValue\").removeClass(\"vrComboBoxSelectedComboValue\");\n\n                    if (children.length == 0)\n                        puma(e.target).addClass(\"vrComboBoxSelectedComboValue keydownFocus\");\n                });\n                puma(li).on(\"keydown\", (e: JQuery.KeyDownEvent) =>\n                {\n                    if (e.key == KeyEnum.ArrowDown)\n                    {\n                        let next = puma(e.currentTarget).next();\n                        if (next.length == 0)\n                            return;\n\n                        puma(this._popup).find(\".vrComboBoxSelectedComboValue\").removeClass(\"vrComboBoxSelectedComboValue\");\n                        while (!next.is(\":visible\"))\n                            next = puma(next).next();\n\n                        next.focus();\n                    }\n                    else if (e.key == KeyEnum.ArrowUp)\n                    {\n                        let prev = puma(e.currentTarget).prev();\n                        if (prev.length == 0)\n                            return;\n\n                        puma(this._popup).find(\".vrComboBoxSelectedComboValue\").removeClass(\"vrComboBoxSelectedComboValue\");\n                        while (!prev.is(\":visible\"))\n                            prev = puma(prev).prev();\n\n                        prev.focus();\n                    }\n                    else if (e.key == KeyEnum.Enter)\n                        puma(e.currentTarget).find(\".vrComboBoxItemText\").mousedown();\n                });\n            }\n            //#endregion\n\n            //#region Tree mode\n            if (options.treeMode == ComboBoxTreeModeEnum.AllCollapsed)\n            {\n                if (item.parentValue != null)\n                    puma(li).closest(\".vrComboBoxUl\").hide();\n            }\n            else if (options.treeMode == ComboBoxTreeModeEnum.OnlyFirstLevelExpanded)\n            {\n                if (puma(li).parents(\".vrComboBoxUl\").length > 2)\n                    puma(li).closest(\".vrComboBoxUl\").hide();\n            }\n            //#endregion\n\n            if (children.length > 0)\n            {\n                //#region Icon expand/collapse\n                let iconClassForDiv = \"\";\n                let iconClass = IconClassicLight.CaretRight;\n                if (options.treeMode == ComboBoxTreeModeEnum.AllCollapsed)\n                {\n                    iconClass = IconClassicLight.CaretRight;\n                    iconClassForDiv = \"caret-right\";\n                }\n                else if (options.treeMode == ComboBoxTreeModeEnum.OnlyFirstLevelExpanded)\n                {\n                    if (puma(li).parents(\".vrComboBoxUl\").length == 1)\n                    {\n                        iconClass = IconClassicLight.CaretDown;\n                        iconClassForDiv = \"caret-down\";\n                    }\n                    else\n                    {\n                        iconClass = IconClassicLight.CaretRight;\n                        iconClassForDiv = \"caret-right\";\n                    }\n                }\n                else\n                {\n                    iconClass = IconClassicLight.CaretDown;\n                    iconClassForDiv = \"caret-down\";\n                }\n\n                let divIcon = puma(\"<div class='vrComboBoxDivIconExpand \" + iconClassForDiv + \"'></div>\").vrAppendToPuma(li);\n                puma(UtilityManager.createIcon(iconClass)).vrAppendToPuma(divIcon);\n                puma(divIcon).click((e: any) =>\n                {\n                    puma(e.currentTarget).children(\"i\").removeClass(IconClassicLight.CaretRight + \" \" + IconClassicLight.CaretDown);\n                    puma(e.currentTarget).removeClass(\"caret-right caret-down\");\n\n                    let ulChildren = puma(e.currentTarget).siblings(\".vrComboBoxUl\");\n                    if (ulChildren.first().is(\":visible\"))\n                    {\n                        ulChildren.hide();\n                        puma(e.currentTarget).children(\"i\").addClass(IconClassicLight.CaretRight);\n                        puma(e.currentTarget).addClass(\"caret-right\");\n                    }\n                    else\n                    {\n                        ulChildren.show();\n                        puma(e.currentTarget).children(\"i\").addClass(IconClassicLight.CaretDown);\n                        puma(e.currentTarget).addClass(\"caret-down\");\n                    }\n                });\n                //#endregion\n            }\n\n            let comboItem = puma(\"<div class='vrComboBoxDivItemContainer'></div>\").vrAppendToPuma(li);\n            if (options.checkboxes)\n            {\n                let checkBox = puma(\"<input type='checkbox' class='vrCheckBox'></input>\").vrAppendToPuma(comboItem);\n                puma(checkBox).click((e: JQuery.ClickEvent) =>\n                {\n                    //#region Checkboxes\n                    let isChecked = e.currentTarget.checked;\n                    let value = item.value;\n\n                    if (isChecked)\n                        this._checkedValues.push(value);\n                    else\n                        this._checkedValues.vrDelete(value);\n\n                    let targetItem = this.items().filter(k => k.value == value)[0];\n                    if (targetItem != null && this.getOnlyChildrenItems(targetItem).length > 0)\n                    {\n                        let childrenItems = this.getAllChildrenItems(targetItem);\n                        if (e.currentTarget.checked)\n                            this._checkedValues.vrPushRange(childrenItems.map(k => k.value));\n\n                        let childrenCheckboxes = this.getChildrenCheckboxElements<JQuery>(targetItem, false);\n                        puma(childrenCheckboxes).prop(\"checked\", e.currentTarget.checked);\n\n                        for (let childItem of childrenItems)\n                        {\n                            if (!e.currentTarget.checked)\n                                this._checkedValues.vrDelete(childItem.value);\n                        }\n                    }\n                    //#endregion\n\n                    this._isChecked = e.currentTarget.checked;\n\n                    if (!this._isChecked)\n                        this._checkedValues.vrDelete(item.value);\n\n                    //#region Other checkboxes same value\n                    let comboItemTexts: HTMLSpanElement[] = [];\n                    let liList = this._dictionaryValueLi.get(String(item.value))!;\n                    for (let li of liList)\n                    {\n                        let comboItemText = puma(li).find(\".vrComboBoxItemText\")[0];\n                        comboItemTexts.push(comboItemText);\n                    }\n\n                    for (let comboItemText of comboItemTexts)\n                    {\n                        if (comboItemText == null)\n                            continue;\n\n                        let checkBox = puma(comboItemText).siblings(\"input\");\n                        puma(checkBox).removeClass(\"indeterminateVrCheckbox\");\n                        puma(checkBox).prop(\"checked\", this._isChecked);\n                        checkBox[0].checked = this._isChecked;\n                    }\n\n                    for (let otherItem of this.items().filter(k => k.value == item.value))\n                    {\n                        let parentChecked = this.manageCheckParent(otherItem);\n                        if (!parentChecked && otherItem.parentValue != null)\n                            this._checkedValues.vrDelete(otherItem.parentValue);\n                        else if (parentChecked && otherItem.parentValue != null && !this._checkedValues.includes(String(otherItem.parentValue)))\n                            this._checkedValues.push(String(otherItem.parentValue));\n                    }\n                    //#endregion\n\n                    let parentChecked = this.manageCheckParent(item);\n                    if (!parentChecked && item.parentValue != null)\n                        this._checkedValues.vrDelete(item.parentValue);\n                    else if (parentChecked && item.parentValue != null && !this._checkedValues.includes(String(item.parentValue)))\n                        this._checkedValues.push(String(item.parentValue));\n\n                    this._tempCheckedValue = String(item.value);\n                    this._checkedValues = this._checkedValues.vrDistinct();\n                    this.valueInternal(this._checkedValues);\n                    this._tempCheckedValue = null;\n                });\n            }\n\n            //#region Row text\n            let rowText = \"\";\n            if (item.icon != null && item.icon != \"\")\n                rowText = \"<i class='\" + item.icon + \"'></i> \";\n\n            rowText += item.text.replace(/'/g, \"&#39;\");\n\n            if (options.template != null)\n            {\n                let templateEvent = new ComboBoxTemplateEvent();\n                templateEvent.dataItem = item;\n                templateEvent.element = comboItem[0];\n                templateEvent.sender = this;\n                rowText = options.template(templateEvent);\n            }\n\n            if (item.backgroundColor != null)\n                li[0].style.cssText += \"background-color: \" + item.backgroundColor + \";\";\n\n            let classIfCheckbox = (options.checkboxes) ? \"vrComboBoxItemTextCheckbox\" : \"\";\n            let classIfNoBr = (options.noBr) ? \"\" : \"vrComboBoxItemTextBr\";\n            let styleIfTextColor = (item.textColor != null) ? \"color: \" + item.textColor + \";\" : \"\";\n            if (item.whiteFont)\n                styleIfTextColor = \"color: #FFF;\";\n\n            let comboItemText = puma(\"<span title='\" + item.text + \"' text='\" + item.text.replace(/'/g, \"&#39;\") + \"' class='vrComboBoxItemText \" + classIfCheckbox + \" \" + classIfNoBr + \"' \" + \"style='\" + \" \" + styleIfTextColor + \"'\" + \">\" + rowText + \"</span>\").vrAppendToPuma(comboItem);\n            //#endregion\n\n            puma(comboItemText).on(\"mousedown\", (e: JQuery.MouseDownEvent) =>\n            {\n                let value = item.value;\n                let item2 = this.items().filter(k => k.value == value)[0];\n                if (item2 != null && !this.getRootValues().includes(String(item2.value)))\n                {\n                    if (!options.checkboxes)\n                    {\n                        this.valueInternal(item2.value);\n                        this.close();\n                    }\n                    else\n                        puma(e.currentTarget).siblings(\".vrCheckBox\").click();\n                }\n                else\n                    UtilityManager.interval(() => puma(this.element()).toggleClass(\"errorInput\"), 200, 800);\n            });\n\n            if (options.onItemDataBound != null)\n            {\n                let event = new ComboBoxItemDataBoundEvent();\n                event.sender = this;\n                event.element = comboItemText[0];\n                event.dataItem = item;\n                options.onItemDataBound(event);\n            }\n\n            if (children.length > 0)\n                this.drawItems(children, li);\n        }\n    }\n\n    private getFilteredArrayByInputText(value: string): ComboBoxItem[]\n    {\n        value = value.toLowerCase();\n        let filteredArray: ComboBoxItem[] = [];\n        let arrayWhereSearch = this.items().map(k => String(k.text).toLowerCase());\n        arrayWhereSearch!.forEach((k, index) => \n        {\n            if (k.indexOf(value) != -1)\n                filteredArray.push(this.items()[index]);\n        });\n        return filteredArray;\n    }\n\n    //#region Items\n    datasource(items?: ComboBoxItem[], triggerChange = true): ComboBoxItem[]\n    {\n        return this.items(items, triggerChange);\n    }\n\n    items(items?: ComboBoxItem[], triggerChange = true): ComboBoxItem[]\n    {\n        let options = this.getOptions();\n        if (items != null)\n        {\n            //#region Fix datasource\n            let itemsGrouped = items.vrGroupBy(k => k.parentValue);\n            for (let key in itemsGrouped)\n            {\n                if (key == null || key == \"null\" || key == \"undefined\")\n                    continue;\n\n                let parentExists = items.vrAny(k => k.value == key);\n                if (parentExists)\n                    continue;\n\n                let fakeParent = new ComboBoxItem();\n                fakeParent.text = \"Non identificato\";\n                fakeParent.value = key;\n                items.push(fakeParent);\n            }\n            items.forEach(k => k.value = String(k.value));\n            //#endregion\n\n            let realItems = UtilityManager.duplicate(items) as ComboBoxItem[];\n            if (options.nullable != null && options.nullable !== false)\n            {\n                let nullableItem = new ComboBoxItem();\n                nullableItem.text = (typeof (options.nullable) == \"boolean\" || options.nullable.text == null) ? \"Non selezionato\" : options.nullable.text;\n                nullableItem.value = (typeof (options.nullable) == \"boolean\") ? \"\" : ((options.nullable.value != null) ? options.nullable.value : \"0\");\n                realItems.unshift(nullableItem);\n            }\n\n            this._items = realItems;\n\n            if (options.webService == null)\n            {\n                this.drawDataSource();\n                let checkedItemIdList = realItems.filter(k => k.checked === true).map(k => k.value);\n\n                if (options.checkboxes === true && checkedItemIdList.length > 0)\n                    this.valueInternal(checkedItemIdList, triggerChange);\n                else if (options.mode == ComboBoxTypeEnum.DropDown && this.items().vrFirst() != null)\n                    this.valueInternal(this.items().vrFirst().value, triggerChange);\n            }\n            else\n            {\n                if (this._typedTextWebService == null) this._items = [];\n                this.drawDataSource();\n                this._typedTextWebService = null;\n            }\n        }\n        return this._items;\n    }\n\n    values()\n    {\n        return this.items().map(k => k.value);\n    }\n\n    getCheckedItems(onlyChildren = false): ComboBoxItem[]\n    {\n        let items = this.items().filter(k => this._checkedValues.includes(String(k.value)));\n        if (onlyChildren)\n        {\n            let childrenValues = this.getChildrenValues();\n            items = items.filter(k => childrenValues.includes(String(k.value)));\n        }\n        return items.vrDistinctBy(k => k.value);\n    }\n\n    getCheckedValues(onlyChildren = false): string[]\n    {\n        let values = this._checkedValues.vrDistinct();\n        if (onlyChildren)\n        {\n            let childrenValues = this.getChildrenValues();\n            values = values.filter(k => childrenValues.includes(k));\n        }\n        return values;\n    }\n\n    getSelectedItem<T extends ComboBoxItem>(): T\n    {\n        return this.items().filter(k => k.value != null && k.value == this.value())[0] as T;\n    }\n\n    addItem(item: ComboBoxItem, reloadCombo = true, triggerChange = true, sortBy?: SortByComboSettings): void\n    {\n        this.items().push(item);\n\n        if (sortBy != null)\n        {\n            if (sortBy.direction == null) sortBy.direction = SortDirectionEnum.Asc;\n            this.items().vrSortBy([sortBy.field], (sortBy.direction == SortDirectionEnum.Asc));\n        }\n\n        if (reloadCombo)\n            this.items(this.items(), triggerChange);\n    }\n\n    addItems(items: ComboBoxItem[], reloadCombo = true, triggerChange = true): void\n    {\n        for (let item of items)\n            this.addItem(item, false);\n\n        if (reloadCombo)\n            this.items(this.items(), triggerChange);\n    }\n\n    removeItem(itemOrId: ComboBoxItem | string | number, reloadCombo = true): void\n    {\n        if (typeof itemOrId == \"string\" || typeof itemOrId == \"number\")\n        {\n            let foundedItem = this.items().filter(k => k.value == itemOrId)[0];\n            this.items().vrDelete(foundedItem);\n        }\n        else\n            this.items().vrDelete(itemOrId);\n\n        if (reloadCombo)\n            this.items(this.items());\n    }\n\n    removeItems(items: ComboBoxItem[] | string[] | number[], reloadCombo = true): void\n    {\n        for (let item of items)\n            this.removeItem(item, false);\n\n        if (reloadCombo)\n            this.items(this.items());\n    }\n\n    getItemByValue(value: string): ComboBoxItem\n    {\n        return this.items().filter(k => String(k.value).toLowerCase() == value.toLowerCase())[0];\n    }\n\n    getItemByText(text: string): ComboBoxItem\n    {\n        return this.items().filter(k => k.text.toLowerCase() == text.toLowerCase())[0];\n    }\n\n    getElementsByValue(value: string): HTMLElement[] | undefined\n    {\n        let liValue = this._dictionaryValueLi.get(value);\n        return liValue;\n    }\n\n    getRootItems(): ComboBoxItem[]\n    {\n        let parentItems: ComboBoxItem[] = [];\n        for (let item of this.items())\n        {\n            if (item == null)\n                continue;\n\n            let parentValue = item.parentValue;\n            while (parentValue != null)\n            {\n                let parentItem = this.items().filter(k => k.value == parentValue)[0];\n                if (!parentItems.includes(parentItem))\n                    parentItems.push(parentItem);\n\n                parentValue = (parentItem != null) ? parentItem.parentValue : undefined;\n                if (parentItem != null && parentValue == parentItem.value)\n                    parentValue = undefined;\n            }\n        }\n        return parentItems;\n    }\n    getRootValues(): string[]\n    {\n        return this.getRootItems().filter(k => k != null).map(k => String(k.value));\n    }\n    private getRootTexts(): string[]\n    {\n        return this.getRootItems().map(k => k.text);\n    }\n\n    getLeafItems(): ComboBoxItem[]\n    {\n        let rootValues = this.getRootValues();\n        return this.items().filter(k => !rootValues.includes(String(k.value)));\n    }\n    getLeafValues(): string[]\n    {\n        return this.getLeafItems().map(k => String(k.value));\n    }\n    private getLeafTexts(): string[]\n    {\n        return this.getLeafItems().map(k => k.text);\n    }\n\n    getChildrenItems(): ComboBoxItem[]\n    {\n        return this.getLeafItems();\n    }\n    getChildrenValues(): string[]\n    {\n        return this.getLeafValues();\n    }\n    private getChildrenTexts(): string[]\n    {\n        return this.getLeafTexts();\n    }\n\n    private getOnlyChildrenItems(parentItem: ComboBoxItem): ComboBoxItem[]\n    {\n        return this.items().filter(k => k.parentValue != null && k.parentValue == parentItem.value);\n    }\n\n    private getAllChildrenItems(parentItem?: ComboBoxItem | null): ComboBoxItem[]\n    {\n        return this.getDataChildrenItems(parentItem);\n    }\n    private getAllChildrenValues(parentItem?: ComboBoxItem | null): string[]\n    {\n        return this.getAllChildrenItems(parentItem).map(k => String(k.value));\n    }\n\n    private getDataChildrenItems(parentItem?: ComboBoxItem | null): ComboBoxItem[]\n    {\n        let dataItems = (parentItem == null) ? this.items() : this.getOnlyChildrenItems(parentItem);\n        let items: ComboBoxItem[] = [];\n        for (let dataElement of dataItems)\n        {\n            items.push(dataElement);\n            if (this.getOnlyChildrenItems(dataElement).length > 0)\n                items.vrPushRange(this.getDataChildrenItems(dataElement));\n        }\n        return items;\n    }\n\n    private getChildrenCheckboxElements<T extends HTMLInputElement[] | JQuery>(parentItem: ComboBoxItem, checked = false, arrayMode = false): T\n    {\n        let liParent = this._dictionaryValueLi.get(String(parentItem.value));\n        let parentComboItemText = puma(liParent).find(\".vrComboBoxItemText\")[0];\n        let parentCheckbox = puma(parentComboItemText).siblings(\"input\");\n\n        let childrenCheckboxElements = puma(parentCheckbox).parent().parent().find(\"input\" + ((checked) ? \":checked\" : \"\"));\n        let sibling = puma(childrenCheckboxElements[0]).siblings(\".vrComboBoxItemText\")[0];\n        if (sibling != null && parentItem.text != null)\n        {\n            if (puma(sibling).html().vrRemoveHtml() == parentItem.text.vrRemoveHtml())\n                childrenCheckboxElements.splice(0, 1);\n        }\n\n        if (arrayMode)\n            childrenCheckboxElements = Array.from<HTMLInputElement>(childrenCheckboxElements);\n\n        return childrenCheckboxElements as T;\n    }\n\n    private getParentItem(childItem: ComboBoxItem): ComboBoxItem | null\n    {\n        if (childItem.parentValue != null)\n            return this.items().filter(k => k.value == childItem.parentValue)[0];\n        return null;\n    }\n\n    private manageCheckParent(item: ComboBoxItem): boolean | void\n    {\n        let parentItem = this.getParentItem(item);\n        if (parentItem != null)\n        {\n            let children = this.getChildrenCheckboxElements<HTMLInputElement[]>(parentItem, true, true);\n            let tempCheckedElements = children.filter(k => k != null && k.checked);\n\n            let liParent = this._dictionaryValueLi.get(String(parentItem.value))!;\n            let parentInputElement = puma(liParent).find(\"input\")[0];\n            if (parentInputElement != null)\n            {\n                puma(parentInputElement).removeClass(\"indeterminateVrCheckbox\");\n                parentInputElement.checked = false;\n\n                if (this.getAllChildrenItems(parentItem).length == tempCheckedElements.length)\n                {\n                    parentInputElement.checked = true;\n                    return true;\n                }\n                else if (tempCheckedElements.length == 0)\n                {\n                    parentInputElement.checked = false;\n                    return false;\n                }\n                else\n                {\n                    puma(parentInputElement).addClass(\"indeterminateVrCheckbox\");\n                    return false;\n                }\n            }\n        }\n        return;\n    }\n    //#endregion\n\n    //#region Text & Value\n    text(text?: string): string\n    {\n        if (text != null)\n        {\n            if (!this._isDivElement)\n                (this.element() as HTMLInputElement).value = text;\n            else\n                puma(this.element()).find(\".vrComboBoxSelectedValues\")[0].innerHTML = text;\n        }\n\n        if (!this._isDivElement)\n        {\n            let value = (this.element() as HTMLInputElement).value;\n            let selectedItem = this.getSelectedItem();\n            if (value == \"\" && selectedItem != null)\n                value = selectedItem.text;\n\n            if (value == null) value = \"\";\n            return value;\n        }\n        else\n        {\n            if (puma(this.element()).find(\".vrComboBoxSelectedValues\")[0] != null)\n            {\n                let value = puma(this.element()).find(\".vrComboBoxSelectedValues\")[0].innerHTML;\n                let selectedItem = this.getSelectedItem();\n                if (value == \"\" && selectedItem != null)\n                    value = selectedItem.text;\n\n                return value;\n            }\n            else\n                return \"\";\n        }\n    }\n\n    placeholder(text?: string)\n    {\n        if (text != null)\n            (this.element() as HTMLInputElement).placeholder = text;\n\n        return (this.element() as HTMLInputElement).placeholder;\n    }\n\n    private valueInternal<T extends string | string[] | number>(value?: ComboBoxItem | string | number | string[] | number[] | null, triggerChange: boolean = true): T | null\n    {\n        let options = this.getOptions();\n        (options as any).fromInternal = \"pumo\";\n\n        let val = this.value<T>(value, triggerChange, this._callbackAfterValue);\n\n        (options as any).fromInternal = null;\n        return val;\n    }\n\n    value<T extends string | string[] | number>(value?: ComboBoxItem | string | number | string[] | number[] | null, triggerChange: boolean = true, callback?: null | ((e: ComboBoxChangeEvent) => void)): T | null\n    {\n        if (value === null)\n        {\n            this.clear();\n            return null;\n        }\n\n        let options = this.getOptions();\n        if (value != null)\n        {\n            this._callbackAfterValue = callback;\n            if (typeof (value) == \"number\")\n                value = String(value);\n\n            if ((options as any).fromInternal == null && options.checkboxes === true)\n                this.clear();\n\n            if (!options.checkboxes)\n                puma(this._popup).find(\".vrComboBoxSelectedComboValue\").removeClass(\"vrComboBoxSelectedComboValue\");\n\n            if (typeof (value) == \"string\" || typeof (value) == \"number\")\n            {\n                value = [String(value)];\n                if (options.webService != null && (options as any).fromInternal == null)\n                    value = { value: String(value), text: \"\" };\n            }\n\n            let comboItem = null;\n            if (Array.isArray(value))\n            {\n                value = value.vrDistinct();\n                value = value.vrToStringArrayList();\n            }\n            else // Is comboBoxItem\n            {\n                comboItem = new ComboBoxItem();\n                comboItem.text = value.text;\n                comboItem.value = value.value;\n                value = [String(comboItem.value)];\n            }\n\n            if (value.length == 0)\n                this.hideClearButton();\n            else\n                this.showClearButton();\n\n            let prevValue = UtilityManager.duplicate(this._value);\n            this._value = [];\n            for (let singleValue of value)\n            {\n                let singleItem = this.items().filter(k => k.value == singleValue)[0];\n                if (singleItem != null)\n                    this._value.push(String(singleItem.value));\n            }\n\n            //#region WebService\n            if (options.webService != null && comboItem != null)\n            {\n                this._tempValueWebService = [];\n                this._tempValueWebService.push(String(comboItem.value));\n                this._typedTextWebService = (comboItem.text == null) ? \"\" : comboItem.text;\n                this.doAjaxCall(comboItem.text, true, triggerChange);\n\n                // this._typedTextWebService = (comboItem.text == null) ? \"\" : comboItem.text;\n                // if (comboItem.text != null && comboItem.text != \"\" && comboItem.value != null && comboItem.value != \"\")\n                // {\n                //     this.items([comboItem], false);\n                //     this.valueInternal(comboItem.value, triggerChange);\n                // }\n                // else\n                // {\n                //     this._tempValueWebService = [];\n                //     this._tempValueWebService.push(comboItem.value);\n                //     this.doAjaxCall(comboItem.text, true, triggerChange);\n                // }\n                return comboItem.value as T;\n            }\n            //#endregion\n\n            if (options.webService == null)\n            {\n                let values = this.values();\n                value = value.filter(k => values.includes(k));\n            }\n\n            this._checkedValues = value;\n\n            if (triggerChange)\n            {\n                let changingEvent = new ComboBoxChangingEvent();\n                if (options.onBeforeChange != null)\n                {\n                    let isParent = this.getRootValues().includes(this._value[0]);\n                    let parentItem = null;\n                    if (isParent)\n                        parentItem = this.items().filter(k => k.value == value)[0];\n\n                    changingEvent.sender = this;\n                    changingEvent.previousValue = prevValue;\n                    changingEvent.previousCheckedValues = prevValue;\n                    changingEvent.value = (options.checkboxes === true) ? this._checkedValues : this._value[0];\n                    changingEvent.text = this.text();\n                    changingEvent.childrenValues = (isParent) ? this.getAllChildrenValues(parentItem!) : [];\n                    changingEvent.checked = this._isChecked;\n                    changingEvent.isParent = this.getRootValues().includes(this._value[0]);\n                    options.onBeforeChange(changingEvent);\n                }\n\n                if (!changingEvent.isDefaultPrevented())\n                {\n                    this.writeTextByValue(comboItem, value);\n                    this.change();\n                }\n                else\n                {\n                    this._value = prevValue;\n                    this._callbackAfterValue = null;\n                }\n            }\n            else\n            {\n                this.writeTextByValue(comboItem, value);\n                if (value.length > 0)\n                    this.manageCallbackAfterValue();\n            }\n        }\n\n        if (this._value == null)\n            return null;\n        else if (options.checkboxes === true)\n            return this._value as T;\n        else\n            return this._value[0] as T;\n    }\n\n    private manageCallbackAfterValue()\n    {\n        let options = this.getOptions();\n        if (this._callbackAfterValue != null)\n        {\n            let value = (options.checkboxes && this._tempCheckedValue != null) ? this._tempCheckedValue : this.value<string>()!;\n\n            let isParent = this.getRootValues().includes(value);\n            let parentItem = null;\n            if (isParent)\n                parentItem = this.items().filter(k => k.value == value)[0];\n\n            let event = new ComboBoxChangeEvent();\n            event.sender = this;\n            event.value = value;\n            event.text = this.text();\n            event.childrenValues = (isParent) ? this.getAllChildrenValues(parentItem!) : [];\n            event.selectedItem = this.getSelectedItem();\n            event.checked = this._isChecked;\n            event.isParent = isParent;\n            this._callbackAfterValue(event);\n        }\n        this._callbackAfterValue = null;\n    }\n\n    private writeTextByValue(comboItem: ComboBoxItem | null, value: string[]): void\n    {\n        let options = this.getOptions();\n        if (!this._isDivElement)\n        {\n            if (comboItem == null)\n            {\n                let item = this.items().filter(k => k.value == value[0])[0];\n                if (item != null)\n                    (this.element() as HTMLInputElement).value = item.text;\n            }\n            else\n                (this.element() as HTMLInputElement).value = comboItem.text;\n        }\n        else\n        {\n            puma(this.element()).find(\".vrComboBoxSelectedValues\").remove();\n            let selectedItems = this.items().filter(k => value.includes(String(k.value)));\n            if (selectedItems.length > 0)\n            {\n                if (selectedItems.length == 1 && selectedItems.vrFirst().text == \"\")\n                    return;\n\n                if (options.checkboxes)\n                {\n                    selectedItems = selectedItems.vrDistinctBy(k => k.value);\n                    let selectedValues = selectedItems.map(k => k.value);\n                    let comboItemTexts: HTMLSpanElement[] = [];\n                    for (let val of selectedValues)\n                    {\n                        //#region All checkboxes same value\n                        let liList = this._dictionaryValueLi.get(String(val))!;\n                        if (liList != null)\n                        {\n                            for (let li of liList)\n                            {\n                                let comboItemText = puma(li).find(\".vrComboBoxItemText\")[0];\n                                comboItemTexts.push(comboItemText);\n                            }\n                        }\n                        //#endregion\n                    }\n\n                    for (let comboItemText of comboItemTexts)\n                    {\n                        if (comboItemText == null)\n                            continue;\n\n                        let checkBox = puma(comboItemText).siblings(\"input\");\n                        puma(checkBox).removeClass(\"indeterminateVrCheckbox\");\n                        puma(checkBox).prop(\"checked\", true);\n                        checkBox[0].checked = true;\n                    }\n\n                    //#region To manage parents checkboxes\n                    let selectedItemsDistinctedByValue = selectedItems.vrDistinctBy(k => k.parentValue);\n                    for (let item of selectedItemsDistinctedByValue)\n                    {\n                        this.manageCheckParent(item);\n\n                        //#region Check if parent has all children selected\n                        let parentItem = this.getParentItem(item);\n                        if (parentItem != null)\n                        {\n                            let childrenValues = this.getAllChildrenValues(parentItem);\n                            let containsAll = selectedItemsDistinctedByValue.map(k => k.value).every(value =>\n                            {\n                                return childrenValues.includes(value);\n                            });\n\n                            if (containsAll && !selectedItems.map(k => k.value).includes(parentItem.value))\n                                selectedItems.push(parentItem);\n                        }\n                        //#endregion\n                    }\n                    //#endregion\n                }\n\n                selectedItems = selectedItems.vrDistinctBy(k => k.value);\n                let toWriteElements: ComboBoxItem[] = [];\n                let childrenValues = this.getChildrenValues();\n                for (let selectedItem of selectedItems)\n                {\n                    if (childrenValues.includes(selectedItem.value))\n                        toWriteElements.push(selectedItem)\n                }\n\n                let spanSelectedValues = puma(\"<span class='vrComboBoxSelectedValues'>\" + ((options.onlyIcon) ? \"\" : toWriteElements.map(k => k.text).vrToCommaSeparatedList()) + \"</span>\").vrAppendToPuma(this.element())[0];\n                if (!options.onlyIcon)\n                {\n                    //#region Write text\n                    let textWidth = UtilityManager.textWidth(spanSelectedValues);\n                    if (textWidth > puma(spanSelectedValues).width() && toWriteElements.length > 1 && !options.textEllipsis)\n                        puma(spanSelectedValues).html(toWriteElements.length + \" elementi\");\n\n                    if (selectedItems.length == this.items().vrDistinctBy(k => k.value).length && !options.textEllipsis && options.mode != ComboBoxTypeEnum.DropDown)\n                        puma(spanSelectedValues).html((options.allSelectedMessage != null) ? options.allSelectedMessage : \"Tutti selezionati\");\n                    //#endregion\n                }\n                else\n                {\n                    puma(this._allCheckedOnlyIcon).hide();\n                    if (selectedItems.length == this.items().vrDistinctBy(k => k.value).length && !options.textEllipsis && options.mode != ComboBoxTypeEnum.DropDown)\n                        puma(this._allCheckedOnlyIcon).show();\n                }\n\n                if (this._chkCheckAll != null)\n                {\n                    if (selectedItems.length == this.items().vrDistinctBy(k => k.value).length)\n                        this._chkCheckAll.checked(true, false);\n                    else\n                    {\n                        if (selectedItems.length > 0)\n                            this._chkCheckAll.checked(CheckboxStateEnum.Undefined, false);\n                        else\n                            this._chkCheckAll.checked(false, false);\n                    }\n                }\n            }\n            else\n            {\n                if (this._chkCheckAll != null)\n                    this._chkCheckAll.checked(false, false);\n            }\n        }\n    }\n\n    select(index = 0, triggerChange = true): void\n    {\n        let options = this.getOptions();\n        if (options.mode == ComboBoxTypeEnum.DropDown && this.items()[index] != null)\n            this.valueInternal(this.items()[index].value, triggerChange);\n    }\n\n    index(index = 0, triggerChange = true)\n    {\n        this.select(index, triggerChange);\n    }\n\n    icon(icon?: IconClass | string | null)\n    {\n        let options = this.getOptions();\n        if (icon != null && this._iconCombo != null)\n        {\n            options.icon = icon;\n            this._iconCombo.removeAttribute('class');\n            puma(this._iconCombo).addClass(icon)\n        }\n        return this._iconCombo;\n    }\n\n    isEmpty()\n    {\n        return this.value() == null || this.value() == \"\";\n    }\n\n    error()\n    {\n        this.element().style.cssText += \"border-bottom: solid 1px red;\";\n    }\n\n    hideError()\n    {\n        this.element().style.cssText += \"border-bottom: solid 1px #CCC;\";\n    }\n\n    treeMode(mode: ComboBoxTreeModeEnum, triggerChange = true)\n    {\n        let options = this.getOptions();\n        options.treeMode = mode;\n\n        if (triggerChange)\n            this.items(this.items(), triggerChange);\n    }\n    //#endregion\n\n    //#region Check\n    checkAll(triggerChange = true): void\n    {\n        this._checkedValues = this.items().map(k => String(k.value));\n        this._checkedValues = this._checkedValues.vrDistinct();\n        this.valueInternal(this._checkedValues, triggerChange);\n\n        if (this._chkCheckAll != null)\n            this._chkCheckAll.checked(true, false);\n    }\n\n    unCheckAll(triggerChange = true): void\n    {\n        this._checkedValues = [];\n        puma(this._popup).find(\".vrComboBoxSelectedComboValue\").removeClass(\"vrComboBoxSelectedComboValue\");\n        puma(this._popup).find(\"input\").removeClass(\"indeterminateVrCheckbox\");\n        for (let input of Array.from<HTMLInputElement>(puma(this._popup).find(\"input\")))\n        {\n            puma(input).prop(\"checked\", false);\n            input.checked = false;\n        }\n\n        this.valueInternal([], triggerChange);\n        if (this._chkCheckAll != null)\n            this._chkCheckAll.checked(false, false);\n\n        let options = this.getOptions();\n        if (options.onlyIcon)\n            puma(this._allCheckedOnlyIcon).hide();\n    }\n\n    check(value: string, triggerChange = true)\n    {\n        let checkedValues = this.getCheckedValues();\n        checkedValues.push(value);\n        this.value(checkedValues, triggerChange);\n    }\n\n    unCheck(value: string, triggerChange = true): void\n    {\n        let item = this.items().filter(k => k.value == value)[0];\n        if (item != null)\n        {\n            let comboItemTexts: HTMLSpanElement[] = [];\n            let liList = this._dictionaryValueLi.get(value)!;\n            if (liList != null)\n            {\n                for (let li of liList)\n                {\n                    let comboItemText = puma(li).find(\".vrComboBoxItemText\")[0];\n                    comboItemTexts.push(comboItemText);\n                }\n\n                for (let comboItemText of comboItemTexts)\n                {\n                    if (comboItemText == null)\n                        continue;\n\n                    let checkBox = puma(comboItemText).siblings(\"input\");\n                    puma(checkBox).removeClass(\"indeterminateVrCheckbox\");\n                    puma(checkBox).prop(\"checked\", false);\n                    checkBox[0].checked = false;\n                }\n            }\n\n            this._checkedValues.vrDelete(value);\n            this.value(this.getCheckedValues(), triggerChange);\n        }\n    }\n\n    allChecked()\n    {\n        return this.getCheckedValues().length == this.getAllChildrenValues().vrDistinct().length;\n    }\n    //#endregion\n\n    //#region Support\n    clear(triggerChange = false): void\n    {\n        let options = this.getOptions();\n        puma(this._popup).find(\".vrComboBoxSelectedComboValue\").removeClass(\"vrComboBoxSelectedComboValue\");\n        this.unCheckAll(false);\n\n        this.hideClearButton();\n        puma(this._popup).find(\"li\").show();\n\n        this._value = null;\n        if (!this._isDivElement)\n            (this.element() as HTMLInputElement).value = \"\";\n        else\n        {\n            if (options.mode == ComboBoxTypeEnum.DropDown)\n            {\n                let firstItem = this.items().vrFirst();\n                if (firstItem != null)\n                {\n                    let children = this.getOnlyChildrenItems(firstItem);\n                    if (children.length == 0)\n                        this.valueInternal(firstItem.value, false);\n                    else\n                        this.valueInternal(children.vrFirst().value, false);\n                }\n                else\n                    puma(this.element()).find(\".vrComboBoxSelectedValues\").remove();\n            }\n            else\n                puma(this.element()).find(\".vrComboBoxSelectedValues\").remove();\n        }\n\n        if (options.filter === true && puma(this._popup).find(\".vrComboBoxFilter\")[0] != null)\n            puma(this._popup).find(\".vrComboBoxFilter\")[0].value = \"\";\n\n        if (options.webService != null)\n        {\n            this._items = [];\n            puma(this._popup).find(\".vrComboBoxUl\").remove();\n        }\n\n        if (triggerChange)\n            this.change();\n\n        if (options.onClear != null)\n        {\n            let clearEvent = new ComboBoxClearEvent();\n            clearEvent.sender = this;\n            options.onClear(clearEvent);\n        }\n    }\n\n    clearItems(): void\n    {\n        this._items = [];\n        this.clear();\n        puma(this._popup).find(\".vrComboBoxUl\").remove();\n    }\n\n    popup()\n    {\n        return puma(this._popup)[0];\n    }\n\n    focus(open = true)\n    {\n        this._openPopupAfterFocus = open;\n        puma(this.element()).focus();\n    }\n\n    private getOptions(): ComboBoxOptions\n    {\n        return this.options<ComboBoxOptions>();\n    }\n\n    private doAjaxCall(text = \"\", fromSet = false, triggerChange = true): void\n    {\n        let options = this.getOptions();\n        if (options.webService == null)\n            return;\n\n        if (options.webService.typedTextPropertyName == null) options.webService.typedTextPropertyName = \"text\";\n        if (options.webService.typedValuePropertyName == null) options.webService.typedValuePropertyName = \"value\";\n        if (options.webService.itemsPropertyName == null) options.webService.itemsPropertyName = \"items\";\n\n        let request: any = {};\n        request[options.webService.typedTextPropertyName] = text;\n\n        if (fromSet)\n            request[options.webService.typedValuePropertyName] = this._tempValueWebService![0];\n\n        if (options.webService.authKey == null)\n            options.webService.authKey = \"\";\n\n        if (options.webService.parameters != null)\n        {\n            let parameters = options.webService.parameters();\n            let jsonParameters = Object.getOwnPropertyNames(parameters);\n            for (let param of jsonParameters)\n                request[param] = parameters[param];\n        }\n\n        this._lastAjaxCallGuid = UtilityManager.createGuid();\n        request.guid = this._lastAjaxCallGuid;\n        UtilityManager.doAjaxCall(\n            {\n                mode: WebApiModeEnum.Async,\n                authKey: options.webService.authKey,\n                method: options.webService.method,\n                request: request\n            },\n            (response: any) =>\n            {\n                if (this._lastAjaxCallGuid != null && response.guid != null && this._lastAjaxCallGuid != response.guid)\n                    return;\n\n                let finalValue = \"\";\n                if (!fromSet)\n                {\n                    this._typedTextWebService = text;\n                    this.items(response[options!.webService!.itemsPropertyName!]);\n\n                    if (this._value != null)\n                        finalValue = this._value[0];\n                }\n                else\n                {\n                    let resultItems: any[] = response[options!.webService!.itemsPropertyName!];\n                    let itemSelected = resultItems.filter(k => k.value == this._tempValueWebService![0])[0];\n                    if (itemSelected != null)\n                    {\n                        this.items([itemSelected], false);\n                        finalValue = itemSelected.value;\n                    }\n                }\n\n                if (finalValue != \"\" && finalValue != null)\n                    this.valueInternal(finalValue, triggerChange);\n                else if (triggerChange)\n                {\n                    let value = (options.checkboxes && this._tempCheckedValue != null) ? this._tempCheckedValue : this.value();\n                    if (value != \"\" && value != null)\n                        this.change();\n                }\n            },\n            () => this._callbackAfterValue = null\n        )\n    }\n\n    showClearButton(): void\n    {\n        let options = this.getOptions();\n        if (options.clearButton !== false)\n            puma(this.container()).find(\".vrDivComboBoxClearIcon\").show();\n    }\n\n    hideClearButton(): void\n    {\n        puma(this.container()).find(\".vrDivComboBoxClearIcon\").hide();\n    }\n\n    button()\n    {\n        return this._btnCombo;\n    }\n\n    buttonVisible(state?: boolean)\n    {\n        if (state != null)\n        {\n            this.button().visible(state);\n            if (state)\n                this._divPickerIcon.classList.add(\"vrComboDivPickerWithButton\");\n            else\n                this._divPickerIcon.classList.remove(\"vrComboDivPickerWithButton\");\n        }\n        return this.button().visible();\n    }\n\n    showButton()\n    {\n        this.buttonVisible(true);\n    }\n\n    hideButton()\n    {\n        this.buttonVisible(false);\n    }\n\n    buttonEnabled(state?: boolean)\n    {\n        if (state != null)\n            this.button().enabled(state);\n\n        return this.button().enabled();\n    }\n\n    enableButton()\n    {\n        this.buttonEnabled(true);\n    }\n\n    disableButton()\n    {\n        this.buttonEnabled(true);\n    }\n    //#endregion\n\n    //#region Overrides\n    enable(): void\n    {\n        super.enable();\n        puma(this.container()).find(\".vrDivPickerIconComboBox\").removeClass(\"vrDivPickerIconDisable\");\n        puma(this.container()).find(\".vrDivPickerIconComboBoxDropDown\").removeClass(\"vrDivPickerIconDisable\");\n\n        if (this._btnCombo != null)\n            this._btnCombo.enable();\n\n        if (this._chkCheckAll != null)\n            this._chkCheckAll.enable();\n    }\n\n    disable(): void\n    {\n        super.disable();\n        puma(this.container()).find(\".vrDivPickerIconComboBox\").addClass(\"vrDivPickerIconDisable\");\n        puma(this.container()).find(\".vrDivPickerIconComboBoxDropDown\").addClass(\"vrDivPickerIconDisable\");\n\n        if (this._btnCombo != null)\n            this._btnCombo.disable();\n\n        if (this._chkCheckAll != null)\n            this._chkCheckAll.disable();\n    }\n    //#endregion\n\n    //#region Events\n    change(callBack?: Function): void\n    {\n        let changeCallBack = this.getOptions().onAfterChange;\n        if (changeCallBack != null)\n        {\n            let options = this.getOptions();\n            let value = (options.checkboxes && this._tempCheckedValue != null) ? this._tempCheckedValue : this.value<string>()!;\n\n            let isParent = this.getRootValues().includes(value);\n            let parentItem = null;\n            if (isParent)\n                parentItem = this.items().filter(k => k.value == value)[0];\n\n            let changeEvent = new ComboBoxChangeEvent();\n            changeEvent.sender = this;\n            changeEvent.value = value;\n            changeEvent.text = this.text();\n            changeEvent.childrenValues = (isParent) ? this.getAllChildrenValues(parentItem!) : [];\n            changeEvent.selectedItem = this.getSelectedItem();\n            changeEvent.checked = this._isChecked;\n            changeEvent.isParent = isParent;\n            changeCallBack(changeEvent);\n        }\n\n        this.manageCallbackAfterValue();\n\n        if (callBack != null)\n            callBack();\n    }\n    //#endregion\n}\n\nexport class DropDown extends ComboBox { }\n//#endregion\n\n//#region Classes\nclass ComboBoxNullableItem\n{\n    text?: string;\n    value?: string;\n}\n\nclass CheckAllSettings\n{\n    triggerChange?: boolean;\n}\n\nclass ComboBoxKeyDownEvent extends VrControlsEvent\n{\n    sender: ComboBox;\n    event: any;\n}\n\nclass ComboBoxKeyUpEvent extends VrControlsEvent\n{\n    sender: ComboBox;\n    event: any;\n}\n\nclass ComboBoxPasteEvent extends VrControlsEvent\n{\n    sender: ComboBox;\n    event: any;\n    pastedValue: string;\n    value: string;\n}\n\nclass ComboBoxEnterKeyEvent extends VrControlsEvent\n{\n    sender: ComboBox;\n    value: any;\n}\n\nclass ComboBoxCloseEvent extends VrControlsEvent\n{\n    sender: ComboBox;\n    beforeValue: any;\n    afterValue: any;\n}\n\nclass ComboBoxOpenEvent extends VrControlsEvent\n{\n    sender: ComboBox;\n    value: any;\n}\n\nclass ComboBoxItemDataBoundEvent extends VrControlsEvent\n{\n    sender: ComboBox;\n    element: HTMLElement;\n    dataItem: any;\n}\n\nclass ComboBoxBlurEvent extends VrControlsEvent\n{\n    sender: ComboBox;\n    value: any;\n}\n\nclass ComboBoxFocusEvent extends VrControlsEvent\n{\n    sender: ComboBox;\n    value: any;\n}\n//#endregion"],"names":["li","comboItemText","checkBox","parentChecked","childrenValues","value","icon"],"mappings":"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"}