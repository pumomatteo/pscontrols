{"version":3,"file":"painter.js","sources":["../../../../src/ui/controls/painter.ts"],"sourcesContent":["import { ControlTypeEnum, puma } from \"../vr\";\nimport { VrControlOptions, VrControl, VrControlsEvent } from \"../common\";\n\n//#region Options\nexport class PainterOptions extends VrControlOptions\n{\n    imagePath?: string;\n    size?: number;\n    color?: string;\n    saveSettings?: PainterSaveSettings;\n\n    onMouseDown?: (e: PainterMouseDownEvent) => void;\n    onMouseMove?: (e: PainterMouseMoveEvent) => void;\n    onMouseUp?: (e: PainterMouseUpEvent) => void;\n}\n//#endregion\n\n//#region Control\nexport class Painter extends VrControl\n{\n    private _color: string;\n    private _size: number;\n    private _points: [Point[]];\n    private _ctx: CanvasRenderingContext2D;\n    private _image: any;\n    private _isMoving: boolean;\n    private _pointTag?: any;\n\n    constructor(element: HTMLElement, options?: PainterOptions | null)\n    {\n        //#region Options\n        if (options == null)\n            options = new PainterOptions();\n\n        if (options.imagePath == null) options.imagePath = \"\";\n        if (options.size == null) options.size = 10;\n        if (options.color == null) options.color = \"rgba(255, 0, 0, 0.25)\";\n\n        if (options.height == null) options.height = 200;\n        if (options.width == null) options.width = 200;\n        let canvasHeight = Number(options.height);\n        let canvasWidth = Number(options.width);\n        options.height = undefined;\n        options.width = undefined;\n\n        if (options.saveSettings == null) options.saveSettings = new PainterSaveSettings();\n        if (options.saveSettings.legendWidth == null) options.saveSettings.legendWidth = 550;\n        if (options.saveSettings.legendHeight == null) options.saveSettings.legendHeight = 400;\n        if (options.tabIndex == null) options.tabIndex = -1;\n        //#endregion\n\n        super(element, options, ControlTypeEnum.Painter);\n\n        puma(this.element()).attr(\"width\", canvasWidth);\n        puma(this.element()).attr(\"height\", canvasHeight);\n        this._image = new Image();\n        this.image(options.imagePath);\n\n        this._ctx = (this.element() as HTMLCanvasElement).getContext(\"2d\")!;\n        this._ctx.clearRect(0, 0, (this._ctx as any).width, (this._ctx as any).height);\n        this._ctx.drawImage(this.image(), 0, 0);\n\n        (this._points as any) = [];\n        this.color(options.color);\n        this.size(options.size);\n        window.setTimeout(() => this.draw(), 1000);\n        this._isMoving = false;\n\n        puma(this.element()).mousemove((e: JQuery.MouseMoveEvent) =>\n        {\n            if (!this._isMoving)\n                return;\n\n            let point = this.getPoint(e);\n            if (this._points[this._points.length - 1] != null)\n                this._points[this._points.length - 1].push(point);\n\n            //#region Event\n            if (options!.onMouseMove != null)\n            {\n                let event = new PainterMouseMoveEvent();\n                event.sender = this;\n                event.event = e;\n                event.points = this._points;\n                options!.onMouseMove(event);\n\n                if (event.isDefaultPrevented())\n                {\n                    e.preventDefault();\n                    return;\n                }\n            }\n            //#endregion\n\n            this.draw();\n        });\n        puma(this.element()).mousedown((e: JQuery.MouseDownEvent) =>\n        {\n            this._isMoving = true;\n            let point = this.getPoint(e);\n\n            //#region Event\n            if (options!.onMouseDown != null)\n            {\n                let event = new PainterMouseDownEvent();\n                event.sender = this;\n                event.event = e;\n                event.points = this._points;\n                options!.onMouseDown(event);\n\n                if (event.isDefaultPrevented())\n                {\n                    e.preventDefault();\n                    return;\n                }\n            }\n            //#endregion\n\n            this._points.push([point]);\n        });\n        puma(this.element()).mouseup((e: JQuery.MouseUpEvent) =>\n        {\n            this._isMoving = false;\n\n            //#region Event\n            if (options!.onMouseUp != null)\n            {\n                let event = new PainterMouseUpEvent();\n                event.sender = this;\n                event.event = e;\n                event.points = this._points;\n                options!.onMouseUp(event);\n\n                if (event.isDefaultPrevented())\n                {\n                    e.preventDefault();\n                    return;\n                }\n            }\n            //#endregion\n        });\n    }\n\n    color(color?: string): string\n    {\n        if (color != null)\n            this._color = color;\n\n        return this._color;\n    }\n\n    size(size?: number): number\n    {\n        if (size != null)\n            this._size = size;\n\n        return this._size;\n    }\n\n    image(imagePath?: string): any\n    {\n        if (imagePath != null)\n            this._image.src = imagePath;\n\n        return this._image;\n    }\n\n    pointTag(tag?: any): any\n    {\n        if (tag != null)\n            this._pointTag = tag;\n\n        return this._pointTag;\n    }\n\n    points(points?: [Point[]]): [Point[]]\n    {\n        if (points != null)\n        {\n            this._points = points;\n            this.draw();\n        }\n\n        return this._points;\n    }\n\n    draw(): any\n    {\n        this._ctx.clearRect(0, 0, (this._ctx as any).width, (this._ctx as any).height);\n        this._ctx.drawImage(this.image(), 0, 0);\n\n        for (let i = 0; i < this._points.length; ++i)\n        {\n            let points = this._points[i] as any;\n            if (points.length < 1)\n                continue;\n\n            this._ctx.strokeStyle = points[0].color;\n            this._ctx.lineCap = \"round\";\n            this._ctx.lineJoin = \"round\";\n            this._ctx.lineWidth = points[0].size;\n            this._ctx.beginPath();\n            this._ctx.moveTo(points[0].x, points[0].y);\n\n            for (let j = 1; j < points.length; ++j)\n                this._ctx.lineTo(points[j].x, points[j].y);\n\n            this._ctx.stroke();\n        }\n    }\n\n    private getPoint(e: JQuery.MouseEventBase)\n    {\n        let point = new Point();\n        point.x = e.clientX - this.element().getBoundingClientRect().x;\n        point.y = e.clientY - this.element().getBoundingClientRect().y;\n        point.color = this.color();\n        point.size = this.size();\n        point.tag = this._pointTag;\n        return point;\n    }\n\n    clear(imagePath?: string)\n    {\n        (this._points as any) = [];\n        if (imagePath != null)\n            this.image(imagePath);\n\n        window.setTimeout(() => this.draw(), 200);\n    }\n\n    clearLastRoute()\n    {\n        this._points.pop();\n        this.draw();\n    }\n\n    clearRoute(tag: any)\n    {\n        let pointsToDelete = [];\n        for (let point of this.points())\n        {\n            for (let singlePoint of point)\n            {\n                if (singlePoint.tag == tag)\n                {\n                    pointsToDelete.push(point);\n                    break;\n                }\n            }\n        }\n\n        for (let pointToDelete of pointsToDelete)\n            this._points.vrDelete(pointToDelete);\n\n        this.draw();\n    }\n\n    save(legendItems?: LegendItem[])\n    {\n        let dataURL: string;\n        if (legendItems != null)\n        {\n            let options = this.getOptions();\n\n            let legendCanvas: HTMLCanvasElement = puma(\"<canvas>\")[0] as HTMLCanvasElement;\n            legendCanvas.width = options.saveSettings!.legendWidth!;\n            legendCanvas.height = options.saveSettings!.legendHeight!;\n            let context = legendCanvas.getContext(\"2d\")!;\n            context.drawImage(this.element() as HTMLCanvasElement, 0, 0);\n\n            let fontSize = 18;\n            let y = 10;\n            for (let legendItem of legendItems)\n            {\n                let textWidth = legendItem.color == null ? 100 : 130;\n                let textSize = context.measureText(legendItem.text);\n                let lines = Math.ceil(textSize.width / textWidth);\n                let realHeight = fontSize * lines;\n\n                context.font = fontSize.toString() + \"px Arial\";\n                if (legendItem.color != null)\n                {\n                    context.fillStyle = legendItem.color;\n                    context.fillRect(410, y, 20, 20);\n\n                    context.fillStyle = \"#000000\";\n                    context.fillText(legendItem.text, 440, y + realHeight, 100);\n                }\n                else\n                    context.fillText(legendItem.text, 410, y + realHeight, 130);\n\n                y += realHeight + 10;\n            }\n            dataURL = legendCanvas.toDataURL();\n        }\n        else\n            dataURL = (this.element() as HTMLCanvasElement).toDataURL();\n\n        return dataURL;\n    }\n\n    //#region Enable/Disable\n    enable()\n    {\n        super.enable();\n        puma(this.element()).removeClass(\"vrPainterDisabled\");\n    }\n\n    disable()\n    {\n        super.disable();\n        puma(this.element()).addClass(\"vrPainterDisabled\");\n    }\n    //#endregion\n\n    getOptions()\n    {\n        return (this.options() as PainterOptions);\n    }\n}\n\n//#region Classes\nclass Point\n{\n    public x: number;\n    public y: number;\n    public color: string;\n    public size: number;\n    public tag?: any;\n}\n\nclass LegendItem\n{\n    color?: string;\n    text: string;\n}\n\nclass PainterSaveSettings\n{\n    legendWidth?: number;\n    legendHeight?: number;\n}\n\nclass PainterEvent extends VrControlsEvent\n{\n    sender: Painter;\n    event: any\n    points: [Point[]];\n}\n\nclass PainterMouseDownEvent extends PainterEvent { }\nclass PainterMouseMoveEvent extends PainterEvent { }\nclass PainterMouseUpEvent extends PainterEvent { }\n//#endregion"],"names":[],"mappings":"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"}