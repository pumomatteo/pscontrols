{"version":3,"file":"rating.js","sources":["../../../../src/ui/controls/rating.ts"],"sourcesContent":["import { ControlTypeEnum, puma, RatingPrecisionEnum, vrEditorItemEnum, createLabel } from \"../vr\";\nimport { VrControlOptions, VrControl } from \"../common\";\nimport { UtilityManager } from \"../../../src/managers/utilityManager\";\nimport { Label } from \"./label\";\n\n//#region Options\nexport class RatingOptions extends VrControlOptions\n{\n    value?: number;\n    max?: number;\n    size?: string | number;\n    precision?: RatingPrecisionEnum;\n    tooltip?: boolean;\n    colorSettings?: RatingColorSettings;\n    total?: number;\n    readonly?: boolean;\n\n    onSelect?: (e: RatingSelectEvent) => void;\n}\n//#endregion\n\n//#region Control\nexport class Rating extends VrControl\n{\n    private _value?: number | null;\n    private _lblTotal: Label;\n\n    constructor(element: HTMLElement, options?: RatingOptions | null)\n    {\n        //#region Options\n        if (options == null)\n            options = new RatingOptions();\n\n        if (options.max == null) options.max = 5;\n        if (options.size == null) options.size = 20;\n        if (options.precision == null) options.precision = RatingPrecisionEnum.Full;\n        if (options.tooltip == null) options.tooltip = false;\n        if (options.enable == null) options.enable = true;\n\n        if (options.colorSettings == null)\n            options.colorSettings = new RatingColorSettings();\n\n        if (options.colorSettings.selected == null) options.colorSettings.selected = \"#FFD700\";\n        if (options.colorSettings.hover == null) options.colorSettings.hover = \"#FFED85\";\n        if (options.colorSettings.notSelected == null) options.colorSettings.notSelected = \"#DDD\";\n        //#endregion\n\n        super(element, options, ControlTypeEnum.Rating);\n\n        //#region Color \n        this.color(options.colorSettings);\n        //#endregion\n\n        //#region Stars\n        let radioName = this.element().id + \"vrRating\";\n        for (let i = options.max; i > 0; i--)\n        {\n            let radioFullId = this.element().id + \"_star\" + i;\n            let titleFull = (options.tooltip) ? \"title='\" + i + \"'\" : \"\";\n\n            let radioFull = puma(`<input id='` + radioFullId + `' type='radio' name='` + radioName + `' value='` + i + `' />`\n                + `<label class='vrRatingFull' for='` + radioFullId + `' ` + titleFull + `></label>`).vrAppendToPuma(this.element());\n\n            if (options.precision == RatingPrecisionEnum.Half)\n            {\n                let radioHalfId = this.element().id + \"_star\" + (i - 0.5);\n                let titleHalf = (options.tooltip) ? \"title='\" + i + \"'\" : \"\";\n                let radioHalf = puma(`<input id='` + radioHalfId + `' type='radio' name='` + radioName + `' value='` + (i - 0.5) + `' />`\n                    + `<label class='vrRatingHalf' for='` + radioHalfId + `' ` + titleHalf + `></label>`).vrAppendToPuma(this.element());\n            }\n        }\n        //#endregion\n\n        //#region Total\n        this._lblTotal = createLabel(\n            {\n                cssContainer: \"margin-left: 5px; margin-top: -6px;\"\n            }, this.container());\n\n        if (options.total != null)\n            this.total(options.total);\n        //#endregion\n\n        //#region Size\n        this.size(options.size);\n        //#endregion\n\n        //#region Enable/Disable\n        if (options.enable) this.enable();\n        else this.disable();\n        //#endregion\n\n        //#region Select\n        puma(this.element()).find(\"input\").click((e: any) =>\n        {\n            let currentValue = e.currentTarget.value;\n            if (options!.onSelect != null)\n            {\n                let selectEvent = new RatingSelectEvent();\n                selectEvent.sender = this;\n                selectEvent.oldValue = this._value;\n                selectEvent.value = currentValue;\n                options!.onSelect(selectEvent);\n            }\n            this._value = currentValue;\n        });\n        //#endregion\n\n        if (options.value != null)\n            this.value(options.value);\n    }\n    //#endregion\n\n    //#region Methods\n    value(value?: number, triggerChange = true)\n    {\n        if (value != null)\n        {\n            this.clear();\n\n            if (value > 0)\n            {\n                let realValue = 0;\n                let decimalPart = value % 1;\n                let integerPart = Math.trunc(value);\n                if (decimalPart == 0 || (decimalPart > integerPart && decimalPart < 0.2))\n                    realValue = integerPart;\n                else if (decimalPart > 0.2 && decimalPart < 0.7)\n                    realValue = integerPart + 0.5;\n                else if (decimalPart > 0.7)\n                    realValue = integerPart + 1;\n\n                puma(this.element()).find(\"input[value='\" + realValue + \"']\").attr(\"checked\", true);\n                this._value = realValue;\n            }\n        }\n\n        let checkedInput = puma(this.element()).find(\"input:checked\")[0];\n        return (checkedInput != null) ? checkedInput.value : null;\n    }\n\n    clear()\n    {\n        puma(this.element()).find(\"input\").removeAttr(\"checked\");\n        this._value = 0;\n    }\n\n    color(colorSettings?: RatingColorSettings)\n    {\n        let options = this.getOptions();\n        if (colorSettings != null)\n        {\n            if (colorSettings.hover != null) options.colorSettings!.hover = colorSettings.hover;\n            if (colorSettings.selected != null) options.colorSettings!.selected = colorSettings.selected;\n            if (colorSettings.notSelected != null) options.colorSettings!.notSelected = colorSettings.notSelected;\n\n            UtilityManager.addCssStyle(\n                `#${this.id()}>label {\n                    color: ` + options.colorSettings!.notSelected + `;\n                    float: right;\n                    cursor: pointer;\n                }\n\n                #${this.id()}>input:checked~label, #${this.id()}.hover:not(:checked)>label:hover, #${this.id()}.hover:not(:checked)>label:hover~label {\n                    color: ` + options.colorSettings!.selected + `;\n                }\n\n                #${this.id()}.hover>input:checked+label:hover, #${this.id()}.hover>input:checked~label:hover, #${this.id()}.hover>label:hover~input:checked~label, #${this.id()}.hover>input:checked~label:hover~label {\n                    color: ` + options.colorSettings!.hover + `;\n                }`\n            );\n        }\n        return options.colorSettings;\n    }\n\n    size(size?: string | number)\n    {\n        if (size != null)\n        {\n            if (typeof (size) == \"number\")\n                size = size + \"px\";\n\n            UtilityManager.addCssStyle(\n                `#${this.id}>label:before {\n                    font-size: ` + size + `;\n                }`\n            );\n        }\n\n        let firstInput = puma(this.element()).find(\"input\")[0];\n        if (firstInput != null)\n        {\n            let firstInputId = firstInput.id;\n            let fistLabel = puma(this.element()).find(\"label[for='\" + firstInputId + \"']\")[0];\n            return window.getComputedStyle(fistLabel, ':before').fontSize.vrGetNumericPart();\n        }\n        return 0;\n    }\n\n    total(total?: number)\n    {\n        if (total != null)\n            this._lblTotal.value(\"(\" + total + \")\");\n\n        return this._lblTotal.value().vrGetNumericPart();\n    }\n\n    enable()\n    {\n        super.enable();\n        puma(this.element()).addClass(\"hover\");\n        puma(this.element()).find(\"input\").removeAttr(\"disabled\");\n    }\n\n    disable()\n    {\n        super.disable();\n        puma(this.element()).removeClass(\"hover\");\n        puma(this.element()).find(\"input\").attr(\"disabled\", true);\n    }\n\n    getOptions()\n    {\n        return this.options<RatingOptions>();\n    }\n    //#endregion\n}\n//#endregion\n\n//#region Classes\nclass RatingSelectEvent\n{\n    sender: Rating;\n    value: number;\n    oldValue?: number | null;\n}\n\nclass RatingColorSettings\n{\n    selected?: string;\n    hover?: string;\n    notSelected?: string;\n}\n//#endregion"],"names":[],"mappings":"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"}