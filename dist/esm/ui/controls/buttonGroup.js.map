{"version":3,"file":"buttonGroup.js","sources":["../../../../src/ui/controls/buttonGroup.ts"],"sourcesContent":["import { VrControl, VrControlOptions, VrControlsEvent } from \"../common\";\nimport { ControlTypeEnum, SelectionModeEnum, createCheckBox, puma, ButtonGroupItem, span, createButton, ControlPositionEnum, IconClassicLight } from \"../vr\";\nimport { UtilityManager } from \"../../managers/utilityManager\";\nimport { Button } from \"./button\";\n\n//#region Options\nexport class ButtonGroupOptions extends VrControlOptions\n{\n    items?: ButtonGroupItem[];\n    selectionMode?: SelectionModeEnum;\n    checkboxes?: boolean;\n    tooltip?: boolean;\n\n    onSelect?(e: ButtonGroupSelectEvent): void;\n    onItemAdded?(e: ButtonGroupItemAddedEvent): void;\n    onItemRemoved?(e: ButtonGroupItemRemovedEvent): void;\n}\n//#endregion\n\n//#region Control\nexport class ButtonGroup extends VrControl\n{\n    private _items: ButtonGroupItem[];\n    private _btnScrollBack: Button;\n    private _btnScrollForward: Button;\n    private _populating: boolean;\n\n    constructor(element: HTMLElement, options?: ButtonGroupOptions | null)\n    {\n        //#region Options\n        if (options == null)\n            options = new ButtonGroupOptions();\n\n        if (options.selectionMode == null) options.selectionMode = SelectionModeEnum.Single;\n        if (options.checkboxes == null) options.checkboxes = false;\n        if (options.items == null) options.items = [];\n        if (options.tooltip == null) options.tooltip = false;\n        //#endregion        \n\n        super(element, options, ControlTypeEnum.ButtonGroup);\n        this.element().style.cssText += \"display: inline-block;\";\n\n        //#region Back/Forward buttons for horizontal scroll\n        let intervalScrolling = 0;\n        this._btnScrollBack = createButton({\n            icon: IconClassicLight.CaretLeft,\n            visible: false,\n            enable: false,\n            colorSettings: { background: \"#f1f1f1\" },\n            css: \"border-top-right-radius: 0px; border-bottom-right-radius: 0px;\",\n            onMouseDown: (e) =>\n            {\n                this.scrollBack();\n                intervalScrolling = window.setInterval(() =>\n                {\n                    this.scrollBack(intervalScrolling);\n                }, 100)\n            },\n            onMouseUp: (e) => window.clearInterval(intervalScrolling)\n        }, this.container())\n        puma(this._btnScrollBack.container()).vrInsertBeforePuma(this.element())\n\n        this._btnScrollForward = createButton({\n            icon: IconClassicLight.CaretRight,\n            visible: false,\n            colorSettings: { background: \"#f1f1f1\" },\n            css: \"border-top-left-radius: 0px; border-bottom-left-radius: 0px;\",\n            onMouseDown: (e) =>\n            {\n                this.scrollForward();\n                intervalScrolling = window.setInterval(() =>\n                {\n                    this.scrollForward(intervalScrolling);\n                }, 100)\n            },\n            onMouseUp: (e) => window.clearInterval(intervalScrolling)\n        }, this.container())\n        puma(this._btnScrollForward.container()).vrInsertAfterPuma(this.element())\n        //#endregion\n\n        //#region Items\n        this._items = [];\n        if (options.items != null)\n            this.items(options.items);\n        //#endregion\n    }\n\n    //#region Methods\n    items(items?: ButtonGroupItem[])\n    {\n        if (items != null)\n        {\n            this._populating = true;\n            for (let item of items)\n                this.addItem(item);\n\n            this.manageScrolling();\n            this._populating = false;\n        }\n        return this._items;\n    }\n\n    addItem(item: ButtonGroupItem)\n    {\n        this.items().push(item);\n\n        let options = this.getOptions();\n        let spanButton = puma(\"<span></span>\").vrAppendToPuma(this.element())[0];\n        puma(spanButton).addClass(\"buttonGroupItem\");\n\n        //#region Checkbox\n        let checkbox = null;\n        if (options.checkboxes)\n        {\n            checkbox = createCheckBox(\n                {\n                    checked: (item.selected === true) ? true : false,\n                    onCheck: (e) => puma(spanButton).click()\n                }, spanButton);\n            puma(checkbox.element()).attr(\"value\", item.value);\n        }\n        //#endregion\n\n        //#region Icon/ImageUrl\n        let iconOrImage = null;\n        if (item.icon != null)\n            iconOrImage = UtilityManager.createIcon(item.icon);\n        else if (item.imageUrl != null)\n            iconOrImage = puma(\"<img src='\" + item.imageUrl + \"' />\")[0];\n\n        if (iconOrImage != null)\n        {\n            puma(spanButton).vrAppendPuma(iconOrImage);\n\n            //#region Icon click\n            if (item.onIconClick != null)\n            {\n                puma(iconOrImage).on(\"click\", (e: JQuery.ClickEvent) =>\n                {\n                    let event = new ButtonGroupIconClickEvent();\n                    event.sender = this;\n                    event.value = puma(spanButton).attr(\"value\");\n                    event.selected = puma(spanButton).hasClass(\"buttonGroupItemSelected\");\n                    item.onIconClick!(event);\n                });\n            }\n            //#endregion\n        }\n        //#endregion\n\n        //#region Text\n        if (item.text == null) item.text = \"\";\n        let marginLeft = \"\";\n        if (item.icon != null || item.imageUrl != null)\n            marginLeft = \"margin-left: 5px;\";\n\n        let spanItemText = puma(\"<span class='buttonGroupItemText' style='height: 23px; \" + marginLeft + \"'>\" + item.text + \"</span>\").vrAppendToPuma(spanButton);\n        if (item.text != \"\")\n        {\n            let tooltip = \"\";\n            if (item.tooltip != null)\n                tooltip = item.tooltip;\n            else if (options.tooltip)\n                tooltip = item.text;\n\n            if (tooltip != \"\")\n                puma(spanItemText).attr(\"title\", tooltip);\n        }\n        //#endregion\n\n        puma(spanButton).attr(\"value\", item.value);\n\n        //#region Selected\n        if (item.selected === true)\n        {\n            if (!options.checkboxes)\n                puma(spanButton).addClass(\"buttonGroupItemSelected\");\n            else\n                checkbox!.check();\n        }\n        //#endregion\n\n        //#region Color settings\n        if (item.colorSettings != null)\n        {\n            let colorSettings = item.colorSettings;\n            if (colorSettings.textColor != null)\n                puma(spanButton).css(\"color\", colorSettings.textColor);\n            if (colorSettings.background != null)\n                puma(spanButton).css(\"background-color\", colorSettings.background);\n            if (colorSettings.border != null)\n                puma(spanButton).css(\"border-color\", colorSettings.border);\n        }\n        //#endregion\n\n        //#region Visibility/Enable\n        if (item.visible === false)\n            puma(spanButton).hide();\n\n        if (item.enable === false)\n            puma(spanButton).attr(\"disabled\", \"disabled\");\n        //#endregion\n\n        //#region Click\n        puma(spanButton).click((e: JQueryEventObject) =>\n        {\n            if (!this.enabled() || puma(spanButton).attr(\"disabled\") != null)\n            {\n                e.preventDefault();\n                return;\n            }\n\n            if (options!.selectionMode == SelectionModeEnum.Single)\n                this.clear();\n\n            if (!options!.checkboxes)\n                puma(e.currentTarget).toggleClass(\"buttonGroupItemSelected\");\n            else\n            {\n                let checkbox = puma(e.currentTarget).find(\".vrCheckBox\")[0];\n                checkbox.checked = !checkbox.checked;\n            }\n\n            this.changeItem(puma(e.currentTarget).attr(\"value\"), puma(e.currentTarget).hasClass(\"buttonGroupItemSelected\"), item);\n            this.changeGlobal(puma(e.currentTarget).attr(\"value\"), puma(e.currentTarget).hasClass(\"buttonGroupItemSelected\"), item);\n        });\n        //#endregion\n\n        if (!this._populating)\n            this.manageScrolling();\n\n        if (item.css != null)\n            spanButton.style.cssText += item.css;\n\n        //#region Event\n        if (options.onItemAdded != null)\n        {\n            let event = new ButtonGroupItemAddedEvent();\n            event.sender = this;\n            event.value = String(item.value);\n            options.onItemAdded(event);\n        }\n        //#endregion\n    }\n\n    manageScrolling()\n    {\n        let scrolling = puma(this.element()).vrHasScrollBar(true);\n        if (scrolling)\n        {\n            this._btnScrollBack.show();\n            this._btnScrollForward.show();\n\n            puma(this.element()).find(\".buttonGroupItem\").first().css({ \"border-top-left-radius\": \"0px\", \"border-bottom-left-radius\": \"0px\", \"border-left\": \"none\" })\n            puma(this.element()).find(\".buttonGroupItem\").last().css({ \"border-top-right-radius\": \"0px\", \"border-bottom-right-radius\": \"0px\", \"border-right\": \"none\" })\n        }\n        else\n        {\n            this._btnScrollBack.hide();\n            this._btnScrollForward.hide();\n\n            puma(this.element()).find(\".buttonGroupItem\").first().css({ \"border-top-left-radius\": \"4px\", \"border-bottom-left-radius\": \"4px\", \"border-left\": \"solid 1px #d9d9d9\" })\n            puma(this.element()).find(\".buttonGroupItem\").last().css({ \"border-top-right-radius\": \"4px\", \"border-bottom-right-radius\": \"4px\", \"border-right\": \"solid 1px #d9d9d9\" })\n        }\n    }\n\n    scrollBack(interval?: number)\n    {\n        let leftPos = puma(this.element()).scrollLeft();\n        puma(this.element()).animate({ scrollLeft: leftPos - 20 }, 10);\n\n        this._btnScrollForward.enable();\n        if ((leftPos - 20) <= 0)\n        {\n            window.clearInterval(interval);\n            this._btnScrollBack.disable();\n        }\n    }\n\n    scrollForward(interval?: number)\n    {\n        let leftPos = puma(this.element()).scrollLeft();\n        puma(this.element()).animate({ scrollLeft: leftPos + 20 }, 10);\n\n        this._btnScrollBack.enable();\n        if ((leftPos + 20) >= (this.element().scrollWidth - this.element().offsetWidth))\n        {\n            window.clearInterval(interval);\n            this._btnScrollForward.disable();\n        }\n    }\n\n    item(value: string)\n    {\n        return this.items().filter(k => k.value == value)[0];\n    }\n\n    clearItems()\n    {\n        let items = this.items().filter(k => k);\n        for (let item of items)\n            this.removeItem(String(item.value), false);\n    }\n\n    removeItem(value: string, triggerChange = true)\n    {\n        let options = this.getOptions();\n        puma(this.container()).find(\".buttonGroupItem[value='\" + value + \"']\").remove();\n\n        let index = this.items().map(k => k.value).indexOf(value);\n        if (index != -1)\n            this.items().splice(index, 1);\n\n        this.manageScrolling();\n\n        //#region Event\n        if (triggerChange && options.onItemRemoved != null)\n        {\n            let event = new ButtonGroupItemRemovedEvent();\n            event.sender = this;\n            event.value = value;\n            options.onItemRemoved(event);\n        }\n        //#endregion\n    }\n\n    showItems(values: any[])\n    {\n        for (let value of values)\n            this.showItem(value);\n    }\n\n    showItem(value: any)\n    {\n        puma(this.container()).find(\".buttonGroupItem[value='\" + value + \"']\").show();\n        this.manageScrolling();\n    }\n\n    showAllItems()\n    {\n        let values = this.items().map(k => k.value);\n        this.showItems(values);\n    }\n\n    hideItems(values: any[])\n    {\n        for (let value of values)\n            this.hideItem(value);\n    }\n\n    hideItem(value: any)\n    {\n        puma(this.container()).find(\".buttonGroupItem[value='\" + value + \"']\").hide();\n        this.manageScrolling();\n    }\n\n    hideAllItems()\n    {\n        let values = this.items().map(k => k.value);\n        this.hideItems(values);\n    }\n\n    visibleItem(value: any, state?: boolean): boolean\n    {\n        let spanItem = puma(this.container()).find(\".buttonGroupItem[value='\" + value + \"']\");\n        if (state != null)\n        {\n            if (state) spanItem.show();\n            else spanItem.hide();\n        }\n\n        this.manageScrolling();\n        return spanItem.is(\":visible\");\n    }\n\n    select(values: string[] | number[], triggerChange = true): void\n    {\n        let options = this.getOptions();\n        if (options.selectionMode == SelectionModeEnum.Single)\n            this.clear();\n\n        for (let value of values)\n        {\n            if (!options.checkboxes)\n                puma(this.container()).find(\".buttonGroupItem[value='\" + value + \"']\").addClass(\"buttonGroupItemSelected\");\n            else\n                puma(this.container()).find(\".buttonGroupItem .vrCheckBox[value='\" + value + \"']\")[0].checked = true;\n\n            if (triggerChange)\n                this.changeItem(String(value));\n        }\n\n        if (triggerChange)\n        {\n            let value = null;\n            if (this.selectionMode() == SelectionModeEnum.Single)\n                value = values.vrFirst();\n\n            this.changeGlobal(String(value));\n        }\n    }\n\n    selectIndex(index: number, triggerChange = true)\n    {\n        let options = this.getOptions();\n        if (options.selectionMode == SelectionModeEnum.Single)\n            this.clear();\n\n        if (!options.checkboxes)\n            puma(puma(this.container()).find(\".buttonGroupItem\")[index]).addClass(\"buttonGroupItemSelected\");\n        else\n            puma(this.container()).find(\".buttonGroupItem .vrCheckBox\")[index].checked = true;\n\n        let item = this.getItemByIndex(index);\n        let value = puma(item).attr(\"value\");\n\n        if (triggerChange)\n            this.changeItem(String(value));\n\n        if (triggerChange)\n            this.changeGlobal(String(value));\n    }\n\n    private changeGlobal(value?: string | null, selected?: boolean, item?: ButtonGroupItem)\n    {\n        if (item == null)\n            item = this.items().filter(k => k.value == value)[0];\n\n        let options = this.getOptions();\n        if (options!.onSelect != null)\n        {\n            let event = new ButtonGroupSelectEvent();\n            event.sender = this;\n            event.value = value;\n            event.selected = selected;\n            event.selectedValues = this.getSelectedValues();\n            window.setTimeout(() => options!.onSelect!(event));\n        }\n    }\n\n    private changeItem(value: string, selected = true, item?: ButtonGroupItem)\n    {\n        if (item == null)\n            item = this.items().filter(k => k.value == value)[0];\n\n        if (item != null && item.onClick != null)\n        {\n            let event = new ButtonGroupClickEvent();\n            event.sender = this;\n            event.value = value;\n            event.selected = selected;\n            item.onClick(event);\n        }\n    }\n\n    getSelectedValues(): string[]\n    {\n        let options = this.getOptions();\n        if (!options.checkboxes)\n            return Array.from(puma(this.container()).find(\".buttonGroupItem.buttonGroupItemSelected\")).map(k => puma(k).attr(\"value\"));\n        else\n            return Array.from(puma(this.container()).find(\".buttonGroupItem .vrCheckBox:checked\")).map(k => puma(k).attr(\"value\"));\n    }\n\n    value()\n    {\n        return puma(puma(this.container()).find(\".buttonGroupItem.buttonGroupItemSelected\")).attr(\"value\");\n    }\n\n    clear(): void\n    {\n        puma(this.container()).find(\".buttonGroupItem\").removeClass(\"buttonGroupItemSelected\");\n        //this._items = [];\n\n        let options = this.getOptions();\n        if (options.checkboxes)\n        {\n            for (let checkbox of Array.from<HTMLInputElement>(puma(this.container()).find(\".buttonGroupItem .vrCheckBox\")))\n                checkbox.checked = false;\n        }\n    }\n\n    selectionMode()\n    {\n        return this.getOptions().selectionMode;\n    }\n\n    getItemByValue(value: string): HTMLElement\n    {\n        return puma(this.container()).find(\".buttonGroupItem[value='\" + value + \"']\")[0];\n    }\n\n    getItemByIndex(index: number): HTMLElement\n    {\n        return puma(this.container()).find(\".buttonGroupItem\")[index];\n    }\n\n    itemTooltip(value: string, tooltip?: string): string\n    {\n        let item = this.getItemByValue(value);\n        if (tooltip != null)\n            puma(item).find(\".buttonGroupItemText\")[0].title = tooltip;\n\n        return puma(item).find(\".buttonGroupItemText\")[0].title;\n    }\n\n    itemText(value: string, text?: string, updateTooltip = true): string\n    {\n        let item = this.getItemByValue(value);\n        let buttonGroupItemText = puma(item).find(\".buttonGroupItemText\")[0];\n        if (text != null && buttonGroupItemText != null)\n        {\n            buttonGroupItemText.innerHTML = text;\n            if (updateTooltip)\n                buttonGroupItemText.title = text;\n        }\n        return (buttonGroupItemText != null) ? buttonGroupItemText.innerHTML : \"\";\n    }\n\n    itemTextByIndex(index: number, text?: string): string\n    {\n        let item = this.getItemByIndex(index);\n        if (text != null)\n            puma(item).find(\".buttonGroupItemText\")[0].innerHTML = text;\n\n        return puma(item).find(\".buttonGroupItemText\")[0].innerHTML;\n    }\n\n    enableItem(value: any)\n    {\n        let element = this.getItemByValue(value);\n        puma(element).removeAttr(\"disabled\");\n    }\n\n    disableItem(value: any)\n    {\n        let element = this.getItemByValue(value);\n        puma(element).attr(\"disabled\", \"disabled\");\n    }\n    //#endregion\n\n    //#region Overrides\n    enable()\n    {\n        super.enable();\n        for (let item of this.items())\n            this.enableItem(item.value!);\n    }\n\n    disable()\n    {\n        super.disable();\n        for (let item of this.items())\n            this.disableItem(item.value!);\n    }\n    //#endregion\n\n    getOptions(): ButtonGroupOptions\n    {\n        return this.options<ButtonGroupOptions>();\n    }\n}\n//#endregion\n\n//#region Classes\nclass ButtonGroupEvent extends VrControlsEvent\n{\n    sender: ButtonGroup;\n    value?: string | null;\n}\n\nclass ButtonGroupSelectEvent extends ButtonGroupEvent\n{\n    selectedValues: string[];\n    selected?: boolean;\n}\n\nclass ButtonGroupItemAddedEvent extends ButtonGroupEvent { }\nclass ButtonGroupItemRemovedEvent extends ButtonGroupEvent { }\n\nexport class ButtonGroupClickEvent extends ButtonGroupEvent\n{\n    selected: boolean;\n}\n\nexport class ButtonGroupIconClickEvent extends ButtonGroupEvent\n{\n    selected: boolean;\n}\n//#endregion"],"names":["checkbox"],"mappings":"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"}