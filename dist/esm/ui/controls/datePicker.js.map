{"version":3,"file":"datePicker.js","sources":["../../../../src/ui/controls/datePicker.ts"],"sourcesContent":["import { VrControlOptions, VrControl, VrControlsEvent } from \"../common\";\nimport { ControlTypeEnum, IconClassicLight, IconClass, createLabel, DefaultDayEnum, DateModeEnum, PositionEnum, puma, shadowRoot, DateFormatEnum, KeyEnum, createCalendar, DateDepthEnum, notify, PopupSettings } from \"../vr\";\nimport { UtilityManager } from \"../../../src/managers/utilityManager\";\n\n//#region Options\nexport class DatePickerOptions extends VrControlOptions\n{\n    defaultDay?: DefaultDayEnum;\n    mode?: DateModeEnum;\n    value?: Date;\n    min?: Date;\n    max?: Date;\n    timeInterval?: number;\n    format?: DateFormatEnum | Intl.DateTimeFormatOptions;\n    todayLabel?: boolean;\n    otherMonthDays?: boolean;\n    tooltip?: string;\n    depth?: DateDepthEnum;\n    nullable?: boolean;\n    popupSettings?: PopupSettings;\n    placeholder?: string;\n\n    onBeforeChange?(e: DatePickerChangingEvent): void;\n    onAfterChange?(e: DatePickerChangeEvent): void;\n    onKeyUp?(e: DatePickerKeyUpEvent): void;\n    onKeyDown?(e: DatePickerKeyDownEvent): void;\n    onEnterKey?(): void;\n    onFocus?(e: DatePickerFocusEvent): void;\n    onBlur?(e: DatePickerBlurEvent): void;\n}\n//#endregion\n\n//#region Control\nexport class DatePicker extends VrControl\n{\n    private _value: Date | null;\n    private _currentCursorPosition: number;\n    private _popup: HTMLElement;\n    private _justOpened: boolean;\n\n    constructor(element: HTMLElement, options?: DatePickerOptions | null)\n    {\n        //#region Options\n        if (options == null)\n            options = new DatePickerOptions();\n\n        if (options.defaultDay == null) options.defaultDay = DefaultDayEnum.First;\n        if (options.mode == null) options.mode = DateModeEnum.Date;\n        if (options.todayLabel == null) options.todayLabel = true;\n        if (options.otherMonthDays == null) options.otherMonthDays = true;\n        if (options.depth == null) options.depth = DateDepthEnum.Day;\n        if (options.nullable == null) options.nullable = true;\n\n        if (options.format == null)\n        {\n            switch (options.depth)\n            {\n                case DateDepthEnum.Day: options.format = DateFormatEnum.ShortDate; break;\n                case DateDepthEnum.Month: options.format = DateFormatEnum.Month; break;\n                case DateDepthEnum.Year: options.format = DateFormatEnum.Year; break;\n                default:\n                    options.format = DateFormatEnum.ShortDate; break;\n            }\n        }\n\n        if (options.timeInterval == null)\n            options.timeInterval = 15;\n\n        if (options.mode == DateModeEnum.Time)\n        {\n            if (options.width == null)\n                options.width = 92;\n\n            if (options.min == null)\n            {\n                let defaultDateMin = new Date();\n                defaultDateMin.setHours(6, 0);\n                options.min = defaultDateMin;\n            }\n\n            if (options.max == null)\n            {\n                let defaultDateMax = new Date();\n                defaultDateMax.setHours(23, 15);\n                options.max = defaultDateMax;\n            }\n        }\n        else\n        {\n            if (options.min == null)\n            {\n                let defaultDateMin = Date.MIN_VALUE;\n                defaultDateMin.setHours(6, 0);\n                options.min = defaultDateMin;\n            }\n\n            if (options.max == null)\n            {\n                let defaultDateMax = Date.MAX_VALUE;\n                defaultDateMax = defaultDateMax.vrAddDays(-1);\n                defaultDateMax.setHours(23, 15);\n                options.max = defaultDateMax;\n            }\n\n            if (options.mode == DateModeEnum.DateTime && options.width == null)\n                options.width = 180;\n        }\n        //#endregion\n\n        super(element, options, ControlTypeEnum.DatePicker);\n        this._currentCursorPosition = 0;\n\n        puma(element).attr(\"type\", \"text\");\n\n        if (options.label != null && options.labelSettings!.position == PositionEnum.Top)\n            this.element().style.cssText += \"padding-left: 0px !important; width: calc(100% - 12px) !important;\";\n\n        //#region Picker icon\n        let pickerIcon = null;\n        switch (options.mode)\n        {\n            case DateModeEnum.Date: pickerIcon = UtilityManager.createIcon(IconClassicLight.Calendar); break;\n            case DateModeEnum.Time: pickerIcon = UtilityManager.createIcon(IconClassicLight.Clock); break;\n            case DateModeEnum.DateTime:\n                {\n                    let divPickerIcon = puma(\"<div class='vrDivPickerDateTimeIcon'></div>\").vrAppendToPuma(this.container())[0];\n                    let pickerIcon = UtilityManager.createIcon(IconClassicLight.Calendar);\n                    puma(divPickerIcon).vrAppendPuma(pickerIcon);\n                    puma(divPickerIcon).click(() => \n                    {\n                        if (!this.enabled())\n                            return;\n\n                        this.close();\n                        this.openPopupDatePicker();\n                    });\n\n                    if (options.label != null && options.labelSettings!.position == PositionEnum.Top)\n                        divPickerIcon.style.cssText += \"bottom: 1px; top: inherit;\";\n\n                    let divPickerTimeIcon = puma(\"<div class='vrDivPickerIcon'></div>\").vrAppendToPuma(this.container())[0];\n                    let pickerTimeIcon = UtilityManager.createIcon(IconClassicLight.Clock);\n                    puma(divPickerTimeIcon).vrAppendPuma(pickerTimeIcon);\n                    puma(divPickerTimeIcon).click((e: any) => \n                    {\n                        if (!this.enabled())\n                            return;\n\n                        this.close();\n                        this.openPopupTimePicker();\n                    });\n\n                    if (options.label != null && options.labelSettings!.position == PositionEnum.Top)\n                        divPickerTimeIcon.style.cssText += \"bottom: 1px; top: inherit;\";\n                }\n                break;\n        }\n\n        if (pickerIcon != null)\n        {\n            let divPickerIcon = puma(\"<div class='vrDivPickerIcon'></div>\").vrAppendToPuma(this.container())[0];\n            if (options.label != null && options.labelSettings!.position == PositionEnum.Top)\n                divPickerIcon.style.cssText += \"bottom: 1px; top: inherit;\";\n\n            puma(divPickerIcon).vrAppendPuma(pickerIcon);\n            puma(divPickerIcon).click(() => \n            {\n                if (!this.enabled())\n                    return;\n\n                if (puma(this._popup).is(\":visible\"))\n                    this.close();\n                else\n                    this.open();\n            });\n        }\n        //#endregion\n\n        //#region Tooltip/Placeholder\n        if (options.tooltip != null)\n            puma(this.element()).attr(\"title\", options.tooltip);\n\n        if (options.placeholder != null)\n            this.placeholder(options.placeholder);\n        //#endregion\n\n        //#region Input events\n        puma(this.element()).keyup((e: JQuery.KeyUpEvent) =>\n        {\n            let value = (e.target as HTMLInputElement).value;\n            if (value == \"\")\n            {\n                this.formatDateInput(value);\n                e.preventDefault();\n                return;\n            }\n\n            if (e.key == KeyEnum.Enter)\n            {\n                this.formatDateInput((e.target as HTMLInputElement).value);\n\n                if (options!.onEnterKey != null)\n                    options!.onEnterKey();\n            }\n            else\n            {\n                if (options!.onKeyUp != null)\n                {\n                    let event = new DatePickerKeyUpEvent();\n                    event.sender = this;\n                    event.text = (e.target as HTMLInputElement).value;\n                    event.key = e.key;\n                    event.shiftKey = e.shiftKey;\n                    event.altKey = e.altKey;\n                    event.ctrlKey = e.ctrlKey;\n                    event.enterKey = e.key == KeyEnum.Enter;\n                    event.backSpaceKey = e.key == KeyEnum.Backspace;\n                    event.tabKey = e.key == KeyEnum.Tab;\n                    options!.onKeyUp(event);\n                }\n            }\n        });\n        puma(this.element()).blur((e: JQuery.BlurEvent) => \n        {\n            let value = (this._value != null) ? new Date(this._value) : null;\n            this._value = this.formatDateInput((e.target as HTMLInputElement).value, true) as any;\n            if (this._value != null)\n                this.formatValue();\n\n            if (!UtilityManager.equals(value, this._value))\n            {\n                let changingEvent = new DatePickerChangingEvent();\n                if (options!.onBeforeChange != null)\n                {\n                    changingEvent.sender = this;\n                    changingEvent.value = (this._value != null) ? new Date(this._value!) : null;\n                    changingEvent.previousValue = value;\n                    options!.onBeforeChange(changingEvent);\n\n                    if (changingEvent.isDefaultPrevented())\n                        return;\n                }\n\n                this.change();\n            }\n\n            if (options!.onBlur != null)\n            {\n                let event = new DatePickerBlurEvent();\n                event.sender = this;\n                options!.onBlur(event);\n            }\n        });\n        puma(this.element()).click((e: JQuery.ClickEvent) => this._currentCursorPosition = (e.target as HTMLInputElement).selectionStart!);\n        puma(this.element()).focus((e: JQuery.FocusEvent) => \n        {\n            (this.element() as HTMLInputElement).select();\n\n            if (options!.onFocus != null)\n            {\n                let event = new DatePickerFocusEvent();\n                event.sender = this;\n                options!.onFocus(event);\n            }\n        });\n        //#endregion\n\n        //#region Cursor management\n        puma(element).keydown((e: JQuery.KeyDownEvent) =>\n        {\n            let cursorStartPosition = (e.target as HTMLInputElement).selectionStart!;\n            if (cursorStartPosition != this._currentCursorPosition)\n                this._currentCursorPosition = cursorStartPosition;\n\n            if (e.key == KeyEnum.ArrowRight)\n                this._currentCursorPosition = cursorStartPosition + 1;\n            else if (e.key == KeyEnum.ArrowLeft) // Arrow left\n                this._currentCursorPosition = cursorStartPosition - 1;\n            else if (e.key == KeyEnum.ArrowUp)\n            {\n                if (this.value() != null)\n                {\n                    if (this._currentCursorPosition >= 0 && this._currentCursorPosition <= 2)\n                        this.value(this.value()!.vrAddDays(1));\n                    else if (this._currentCursorPosition >= 3 && this._currentCursorPosition <= 5)\n                        this.value(this.value()!.vrAddMonths(1));\n                    else if (this._currentCursorPosition >= 6)\n                        this.value(this.value()!.vrAddYears(1));\n                }\n            }\n            else if (e.key == KeyEnum.ArrowDown)\n            {\n                if (this.value() != null)\n                {\n                    if (this._currentCursorPosition >= 0 && this._currentCursorPosition <= 2)\n                        this.value(this.value()!.vrAddDays(-1));\n                    else if (this._currentCursorPosition >= 3 && this._currentCursorPosition <= 5)\n                        this.value(this.value()!.vrAddMonths(-1));\n                    else if (this._currentCursorPosition >= 6)\n                        this.value(this.value()!.vrAddYears(-1));\n                }\n            }\n\n            if (e.key == KeyEnum.ArrowRight || e.key == KeyEnum.ArrowLeft || e.key == KeyEnum.ArrowUp || e.key == KeyEnum.ArrowDown)\n            {\n                this.updateCursorPosition();\n                e.preventDefault();\n            }\n\n            if (options!.onKeyDown != null)\n            {\n                let event = new DatePickerKeyDownEvent();\n                event.sender = this;\n                event.key = e.key;\n                event.shiftKey = e.shiftKey;\n                event.altKey = e.altKey;\n                event.ctrlKey = e.ctrlKey;\n                event.enterKey = e.key == KeyEnum.Enter;\n                event.backSpaceKey = e.key == KeyEnum.Backspace;\n                event.tabKey = e.key == KeyEnum.Tab;\n                options!.onKeyDown(event);\n            }\n        });\n        //#endregion\n\n        //#region Value\n        if (options.value != null)\n            this.value(options.value, false);\n        //#endregion\n\n        window.addEventListener(\"click\", (e: any) =>\n        {\n            if (puma(this._popup).is(\":visible\") && !puma(this._popup)[0].contains(e.target) && !puma(this.container())[0].contains(e.target) && !this._justOpened)\n                this.close();\n        });\n\n        let baseListener = (shadowRoot() != null) ? shadowRoot() : document;\n        baseListener!.addEventListener(\"scroll\", (e) =>\n        {\n            if (!puma(e.target).hasClass(\"vrDivPickerPopup\") && puma(this._popup).is(\":visible\"))\n                this.close();\n        }, true);\n    }\n\n    //#region Methods\n    close(): void\n    {\n        puma(this._popup).remove();\n        (this._popup as any) = null;\n    }\n\n    open(): void\n    {\n        if (!this.enabled())\n            return;\n\n        if (this._popup == null)\n            this._popup = puma(\"<div class='vrDivPickerPopup vrPopup' id='\" + this.element().id + \"_divPopup'></div>\").vrAppendToPuma((shadowRoot() != null) ? shadowRoot() : document.body)[0];\n\n        let options = this.getOptions();\n        switch (options.mode)\n        {\n            case DateModeEnum.Date:\n            case DateModeEnum.DateTime:\n                this.openPopupDatePicker(); break;\n            case DateModeEnum.Time: this.openPopupTimePicker(); break;\n        }\n\n        this._justOpened = true;\n        window.setTimeout(() => this._justOpened = false, 500);\n    }\n\n    private formatDateInput(inputText: string, onlyFormat = false)\n    {\n        let options = this.getOptions();\n        switch (options.mode)\n        {\n            case DateModeEnum.Date: return this.formatInputDatePicker(inputText, onlyFormat);\n            case DateModeEnum.DateTime: return this.formatInputDateTimePicker(inputText);\n            case DateModeEnum.Time: return this.formatInputTimePicker(inputText, onlyFormat);\n        }\n        return null;\n    }\n\n    placeholder(value?: string): string\n    {\n        if (value != null)\n            (this.element() as HTMLInputElement).placeholder = value;\n\n        return (this.element() as HTMLInputElement).placeholder;\n    }\n\n    //#region DatePicker\n    private openPopupDatePicker(): void\n    {\n        let options = this.getOptions();\n\n        if (this._popup == null)\n            this._popup = puma(\"<div class='vrDivPickerPopup vrPopup' id='\" + this.element().id + \"_divPopup'></div>\").vrAppendToPuma((shadowRoot() != null) ? shadowRoot() : document.body)[0];\n\n        puma(this._popup).removeClass(\"timePickerPopup\");\n        puma(this._popup).addClass(\"datePickerPopup\");\n\n        createCalendar({\n            value: (this.value() != null) ? new Date(this.value()!.toString()) : undefined,\n            dateSlotWidth: 30,\n            depth: options.depth,\n            onAfterChange: (e) =>\n            {\n                this.close();\n                if (e.value != null)\n                {\n                    let actualHours = (this.value() != null) ? this.value()!.getHours() : ((options.mode == DateModeEnum.DateTime) ? new Date().getHours() : 0);\n                    let actualMinutes = (this.value() != null) ? this.value()!.getMinutes() : ((options.mode == DateModeEnum.DateTime) ? new Date().getMinutes() : 0);\n\n                    let dateToSelect = new Date(e.value.getFullYear(), e.value.getMonth(), e.value.getDate(), actualHours, actualMinutes);\n                    this.value(dateToSelect);\n                }\n            }\n        }, this._popup);\n\n        super.settingPopup(this._popup, options.popupSettings);\n    }\n\n    private formatInputDatePicker(inputText: string, onlyFormat = false): void | Date\n    {\n        let options = this.getOptions();\n        if (inputText == null || inputText == \"\")\n        {\n            if (!options.nullable)\n            {\n                UtilityManager.interval(() => puma(this.element()).toggleClass(\"errorInput\"), 200, 800);\n                this.value(this.value(), false);\n                return;\n            }\n\n            this._value = null;\n            if (!onlyFormat)\n                this.change();\n\n            return;\n        }\n\n        let todayYear = new Date().getFullYear();\n        let todayMonth = new Date().getMonth();\n\n        //#region Special\n        let specialDates = [\"oggi\", \"adesso\", \"ieri\", \"domani\", \"dopodomani\", \"natale\", \"vettore\", \"pumo\", \"pumetta\", \"pumettina\",\n            \"sanvalentino\", \"fineanno\", \"inizioanno\"];\n        if (specialDates.includes(inputText.toLowerCase()))\n        {\n            switch (inputText.toLowerCase())\n            {\n                case \"oggi\":\n                    {\n                        let today = new Date();\n                        today.setHours(0, 0);\n                        this.value(today, !onlyFormat);\n                    }\n                    break;\n                case \"adesso\": this.value(new Date(), !onlyFormat); break;\n                case \"ieri\": this.value(new Date().vrAddDays(-1), !onlyFormat); break;\n                case \"domani\": this.value(new Date().vrAddDays(1), !onlyFormat); break;\n                case \"dopodomani\": this.value(new Date().vrAddDays(2), !onlyFormat); break;\n                case \"natale\": this.value(new Date(todayYear, 11, 25), !onlyFormat); break;\n                case \"vettore\": this.value(new Date(2013, 0, 1), !onlyFormat); break;\n                case \"doctolib\": this.value(new Date(2022, 9, 1), !onlyFormat); break;\n                case \"pumo\": { this.value(new Date(1993, 9, 10), !onlyFormat); } break;\n                case \"pumetta\": { this.value(new Date(1992, 6, 9), !onlyFormat); } break;\n                case \"pumettina\": { this.value(new Date(2022, 8, 24), !onlyFormat); } break;\n                case \"sanvalentino\": this.value(new Date(todayYear, 1, 14), !onlyFormat); break;\n                case \"fineanno\": this.value(new Date(todayYear, 1, 31), !onlyFormat); break;\n                case \"inizioanno\": this.value(new Date(todayYear, 2, 1), !onlyFormat); break;\n                case \"owner\": { this.value(new Date(1993, 9, 10), !onlyFormat); } break;\n            }\n            return this.value()!;\n        }\n        //#endregion\n\n        //#region Months\n        let monthNumber = UtilityManager.getMonthNumberByName(inputText.toLowerCase());\n        if (monthNumber != -1)\n        {\n            this.value(new Date(todayYear, monthNumber, ((this.getOptions().defaultDay == DefaultDayEnum.First) ? 1 : Date.vrGetLastDayOfMonthByDate(new Date(todayYear, monthNumber, 1)).getDate())), !onlyFormat);\n            return this.value()!;\n        }\n        //#endregion\n\n        //#region Month and Year\n        let inputTextArray = inputText.toLowerCase().split(\" \");\n        if (inputTextArray.length > 1)\n        {\n            let monthNumber = UtilityManager.getMonthNumberByName(inputTextArray[0]);\n            if (monthNumber != -1)\n            {\n                if (inputTextArray[1].length == 2 || inputTextArray[1].length == 4)\n                {\n                    let year = parseInt(inputTextArray[1]);\n                    if (inputTextArray[1].length == 2)\n                        year = this.getFinalYear(inputTextArray[1]);\n\n                    let day = (this.getOptions().defaultDay == DefaultDayEnum.First) ? 1 : Date.vrGetLastDayOfMonthByDate(new Date(new Date().getFullYear(), monthNumber, 1)).getDate();\n                    this.value(new Date(year, monthNumber, day), !onlyFormat);\n                    return this.value()!;\n                }\n            }\n        }\n        //#endregion\n\n        //#region Slash or Minus\n        if (inputText.includes(\"/\") || inputText.includes(\"-\") || inputText.includes(\",\") || inputText.includes(\".\"))\n        {\n            let splittedDate: string[] = [];\n            if (inputText.includes(\"/\"))\n                splittedDate = inputText.split(\"/\");\n            else if (inputText.includes(\"-\"))\n                splittedDate = inputText.split(\"-\");\n            else if (inputText.includes(\",\"))\n                splittedDate = inputText.split(\",\");\n            else if (inputText.includes(\".\"))\n                splittedDate = inputText.split(\".\");\n\n            let day = splittedDate[0];\n            if (day == null)\n                day = String(-1);\n            day = String(day.vrGetNumericPart());\n\n            let month = splittedDate[1];\n            if (month == null)\n                month = String(new Date().getMonth());\n            month = String(month.vrGetNumericPart());\n\n            let year = splittedDate[2];\n            if (year == null)\n                year = String(new Date().getFullYear());\n            year = String(year.vrGetNumericPart());\n\n            year = String(this.getFinalYear(year));\n\n            let dateToReturn = new Date(Number(year), Number(month) - 1, Number(day));\n            if (dateToReturn != null && Date.vrIsValidDate(dateToReturn) && Number(month) >= 1 && Number(month) <= 12\n                && (dateToReturn.getMonth() + 1) == Number(month))\n            {\n                if (this.value() == null || !Date.vrEquals(this.value()!, dateToReturn))\n                    this.value(dateToReturn, !onlyFormat);\n                else\n                    this.formatValue();\n            }\n            else\n            {\n                UtilityManager.interval(() => puma(this.element()).toggleClass(\"errorInput\"), 200, 800);\n                this.clear();\n            }\n            return dateToReturn;\n        }\n        //#endregion\n\n        let originalInput = inputText;\n        inputText = inputText.replace(/[^\\w\\s]/gi, '');\n        inputText = inputText.replace(/\\s/g, '');\n        let inputTextNumeric = Number(inputText);\n\n        let day: number | null = 0;\n        let month: number | null = 0;\n        let year: number | null = 0;\n        let dateToReturn: Date | null = null;\n\n        let yearStringToday = new Date().getFullYear().toString();\n        let todayYearFull = parseInt(yearStringToday.substr(0, 2) + \"00\");\n\n        //#region Normal use\n        if (inputText.length == 1 || inputText.length == 2)\n        {\n            if (originalInput.length == 3)\n            {\n                let regexForSpecialChars = /^[A-Za-z0-9 ]+$/;\n                let hasNotSeparator = regexForSpecialChars.test(originalInput);\n                if (!hasNotSeparator)\n                {\n                    day = Number(originalInput[0]);\n                    month = Number(originalInput[2]) - 1;\n                    year = todayYear;\n                }\n            }\n            else\n            {\n                day = Number(inputText);\n                month = todayMonth;\n                year = todayYear;\n            }\n        }\n        else if (inputText.length == 3)\n        {\n            day = Number(inputText[0]);\n            month = Number(inputText[1] + inputText[2]) - 1;\n            if (month > 11)\n            {\n                day = Number(inputText[0] + inputText[1]);\n                month = Number(inputText[2]) - 1;\n            }\n            year = todayYear;\n        }\n        else if (inputText.length == 4)\n        {\n            let yearString = inputText[2] + inputText[3];\n            let yearNumber = Number(yearString);\n            if (yearNumber <= 12 && (Number(inputText[0] + inputText[1]) <= 31))\n            {\n                day = Number(inputText[0] + inputText[1]);\n                month = Number(inputText[2] + inputText[3]) - 1;\n                year = todayYear;\n            }\n            else\n            {\n                let finalYear = this.getFinalYear(yearString);\n                if (inputTextNumeric >= todayYearFull && inputTextNumeric <= new Date().getFullYear())\n                {\n                    day = 1;\n                    month = 0;\n                    year = finalYear;\n\n                    if (this.getOptions().defaultDay == DefaultDayEnum.Last)\n                    {\n                        day = 31;\n                        month = 11;\n                    }\n                }\n                else\n                {\n                    day = Number(inputText[0]);\n                    month = Number(inputText[1]) - 1;\n                    year = finalYear;\n                }\n            }\n        }\n        else if (inputText.length == 5)\n        {\n            let yearString = inputText[3] + inputText[4];\n            let finalYear = this.getFinalYear(yearString);\n\n            day = Number(inputText[0]);\n            month = Number(inputText[1] + inputText[2]) - 1;\n            if (month > 11)\n            {\n                day = Number(inputText[0] + inputText[1]);\n                month = Number(inputText[2]) - 1;\n            }\n            year = finalYear;\n        }\n        else if (inputText.length == 6)\n        {\n            let yearString = inputText[4] + inputText[5];\n            let finalYear = this.getFinalYear(yearString);\n\n            day = Number(inputText[0] + inputText[1]);\n            month = Number(inputText[2] + inputText[3]) - 1;\n            if (month > 11)\n            {\n                day = Number(inputText[0]);\n                month = Number(inputText[1]) - 1;\n                finalYear = Number(inputText[2] + inputText[3] + inputText[4] + inputText[5]);\n            }\n\n            year = finalYear;\n        }\n        else if (inputText.length == 7)\n        {\n            let finalYear = Number(inputText[3] + inputText[4] + inputText[5] + inputText[6]);\n\n            day = Number(inputText[0]);\n            month = Number(inputText[1] + inputText[2]) - 1;\n            if (month > 11)\n            {\n                day = Number(inputText[0] + inputText[1]);\n                month = Number(inputText[2]) - 1;\n            }\n\n            year = finalYear;\n        }\n        else if (inputText.length == 8)\n        {\n            day = Number(inputText[0] + inputText[1]);\n            month = Number(inputText[2] + inputText[3]) - 1;\n            year = Number(inputText[4] + inputText[5] + inputText[6] + inputText[7]);\n        }\n        //#endregion\n\n        dateToReturn = new Date(year, month, day);\n        if (onlyFormat)\n        {\n            if (dateToReturn != null && Date.vrIsValidDate(dateToReturn) && Number(month) >= 0 && Number(month) <= 11\n                && (dateToReturn.getMonth()) == Number(month))\n                return dateToReturn;\n            else\n            {\n                UtilityManager.interval(() => puma(this.element()).toggleClass(\"errorInput\"), 200, 800);\n                this.clear();\n            }\n        }\n        else\n        {\n            if (dateToReturn != null && Date.vrIsValidDate(dateToReturn) && Number(month) >= 0 && Number(month) <= 11\n                && (dateToReturn.getMonth()) == Number(month))\n            {\n                if (this.value() == null || !Date.vrEquals(this.value()!, dateToReturn))\n                    this.value(dateToReturn);\n                else\n                    this.formatValue();\n            }\n            else\n            {\n                UtilityManager.interval(() => puma(this.element()).toggleClass(\"errorInput\"), 200, 800);\n                this.clear();\n            }\n        }\n    }\n    //#endregion\n\n    //#region TimePicker\n    private openPopupTimePicker(): void\n    {\n        //#region Value\n        let value = this.value();\n        let hours = (value != null) ? value.getHours() : 0;\n        let minutes = (value != null) ? value.getMinutes() : 0;\n        //#endregion\n\n        if (this._popup == null)\n            this._popup = puma(\"<div class='vrDivPickerPopup vrPopup' id='\" + this.element().id + \"_divPopup'></div>\").vrAppendToPuma((shadowRoot() != null) ? shadowRoot() : document.body)[0];\n\n        puma(this._popup).removeClass(\"datePickerPopup\");\n        puma(this._popup).addClass(\"timePickerPopup\");\n\n        super.settingPopup(this._popup, { right: true });\n\n        let options = this.getOptions();\n\n        let tempMin = new Date(options.min!);\n        let tempMax = new Date(options.max!);\n        tempMin.setFullYear(1900, 1, 1);\n        tempMax.setFullYear(1900, 1, 1);\n\n        let differenceBetweenMinMax = Date.vrDifferenceBetweenDatesInMinutes(tempMin, tempMax);\n        let interval = Math.round(differenceBetweenMinMax / options.timeInterval!);\n\n        let topPosition = 0;\n        let time = new Date(options.min!);\n        for (let i = 0; i < interval; i++)\n        {\n            let text = time.toTimeString();\n            let textHours = Number(text.split(\":\")[0]);\n            let textMinutes = Number(text.split(\":\")[1]);\n\n            let selected = hours == textHours && minutes == textMinutes;\n            let label = this.createTimeLabel(text, selected);\n            time.vrAddMinutes(options.timeInterval!);\n\n            //#region Time not included in interval\n            if (hours == textHours)\n            {\n                if (minutes % options.timeInterval! != 0 && minutes > textMinutes && minutes < (textMinutes + options.timeInterval!))\n                {\n                    selected = true;\n                    text = String(hours).padStart(2, \"0\") + \":\" + String(minutes).padStart(2, \"0\");\n                    label = this.createTimeLabel(text, selected);\n                }\n            }\n            //#endregion\n\n            if (selected)\n                topPosition = puma(label.element()).offset().top - puma(this._popup).offset().top - (puma(this._popup).height() / 2);\n        }\n\n        if (topPosition < 0) topPosition = 0;\n        this._popup.scrollTo(0, topPosition);\n    }\n\n    private createTimeLabel(text: string, selected = false)\n    {\n        let label = createLabel(\n            {\n                text: text,\n                width: \"Calc(100% - 10px)\",\n                onClick: (e) => \n                {\n                    let value = label.value();\n                    let hours = value.split(\":\")[0];\n                    let minutes = value.split(\":\")[1];\n\n                    let actualYear = (this.value() != null) ? this.value()!.getFullYear() : new Date().getFullYear();\n                    let actualMonth = (this.value() != null) ? this.value()!.getMonth() : new Date().getMonth();\n                    let actualDays = (this.value() != null) ? this.value()!.getDate() : new Date().getDate();\n\n                    this.close();\n                    let dateToSelect = new Date(actualYear, actualMonth, actualDays, Number(hours), Number(minutes));\n                    this.value(dateToSelect);\n                },\n                css: \"cursor: pointer;\",\n                cssContainer: \"padding: 5px; padding-top: 2px; cursor: pointer; border-bottom: solid 1px #DCDCDC;\" + ((selected) ? \"background-color: #51B3E1; color: #FFF;\" : \"\")\n            }, this._popup);\n\n        return label;\n    }\n\n    private formatInputTimePicker(inputText: string, onlyFormat = false): void | Date\n    {\n        let options = this.getOptions();\n        if (inputText == null || inputText == \"\")\n        {\n            if (!options.nullable)\n            {\n                UtilityManager.interval(() => puma(this.element()).toggleClass(\"errorInput\"), 200, 800);\n                this.value(this.value(), false);\n                return;\n            }\n\n            this._value = null;\n            this.change();\n            return;\n        }\n\n        inputText = inputText.replace(/[^\\w\\s]/gi, '');\n        inputText = inputText.replace(/\\s/g, '');\n        let inputTextNumeric = Number(inputText);\n\n        let today = new Date();\n        today.setHours(0, 0);\n\n        //#region Special\n        switch (inputText.toLowerCase())\n        {\n            case \"adesso\": this.value(new Date()); return;\n            case \"pumo\": { this.value(new Date(1993, 9, 10, 10, 10)); } return;\n        }\n        //#endregion\n\n        //#region Normal use\n        if (inputText.length == 1 || inputText.length == 3)\n            inputText = \"0\" + inputText;\n\n        if (isNaN(inputTextNumeric))\n        {\n            UtilityManager.interval(() => puma(this.element()).toggleClass(\"errorInput\"), 200, 800);\n            this.clear();\n            return;\n        }\n\n        let dateToReturn = today;\n        if (inputText.length == 2)\n            dateToReturn = dateToReturn.vrAddHours(inputTextNumeric);\n        else if (inputText.length == 4)\n        {\n            let hours = Number(inputText[0] + inputText[1]);\n            let minutes = Number(inputText[2] + inputText[3]);\n            dateToReturn = dateToReturn.vrAddHours(hours).vrAddMinutes(minutes);\n        }\n\n        if (onlyFormat)\n            return dateToReturn;\n\n        this.value(dateToReturn);\n        //#endregion\n    }\n    //#endregion\n\n    //#region DateTimePicker\n    private formatInputDateTimePicker(inputText: string)\n    {\n        let timeString = inputText.split(\" \")[1];\n        if (timeString == null)\n            timeString = String(new Date().getHours()) + String(new Date().getMinutes());\n\n        let time = this.formatInputTimePicker(timeString, true) as Date;\n\n        let dateString = inputText.split(\" \")[0];\n        let date = this.formatInputDatePicker(dateString, true) as Date;\n\n        if (date != null)\n        {\n            date.setHours(time.getHours(), time.getMinutes());\n            this.value(date);\n        }\n        return date;\n    }\n    //#endregion\n\n    //#region Utility\n    private getFinalYear(yearString: string): number\n    {\n        if (yearString.length == 4)\n            return Number(yearString);\n\n        let yearStringToday = new Date().getFullYear().toString();\n        let todayYearFull = Number(yearStringToday.substr(0, 2) + \"00\");\n        let todayYear2digits = Number(yearStringToday.substr(0, 2));\n\n        let yearStringFinal = (yearString.length == 1) ? \"0\" + yearString : yearString.substr(0, 2);\n\n        let inputYear = Number(yearStringFinal);\n        let yearFinalString = \"\";\n        if (inputYear <= ((new Date().getFullYear() + 10) - todayYearFull))\n            yearFinalString = todayYear2digits + yearStringFinal;\n        else\n            yearFinalString = (todayYear2digits - 1) + yearStringFinal;\n\n        return Number(yearFinalString);\n    }\n\n    private updateCursorPosition(): void\n    {\n        if ((this.element() as any).createTextRange)\n        {\n            var range = (this.element() as any).createTextRange();\n            range.move('character', this._currentCursorPosition);\n            range.select();\n        }\n        else\n        {\n            if ((this.element() as any).selectionStart >= 0)\n            {\n                (this.element() as any).focus();\n                (this.element() as any).setSelectionRange(this._currentCursorPosition, this._currentCursorPosition);\n            }\n            else\n                (this.element() as any).focus();\n        }\n    }\n    //#endregion\n\n    value(date?: Date | null, triggerChange: boolean = true): Date | null\n    {\n        let options = this.getOptions();\n        if (date === null)\n        {\n            let changingEvent = new DatePickerChangingEvent();\n            if (options.onBeforeChange != null)\n            {\n                changingEvent.sender = this;\n                changingEvent.value = new Date(date!);\n                changingEvent.previousValue = (this._value != null) ? new Date(this._value!) : null;\n                options.onBeforeChange(changingEvent);\n\n                if (changingEvent.isDefaultPrevented())\n                    return null;\n            }\n\n            if (!options.nullable)\n            {\n                UtilityManager.interval(() => puma(this.element()).toggleClass(\"errorInput\"), 200, 800);\n                return this._value;\n            }\n            else\n            {\n                this.clear();\n                return null;\n            }\n        }\n\n        if (date != null)\n        {\n            if (typeof (date) == \"string\")\n                date = Date.vrFixDateString(date);\n\n            if (date == null)\n                throw Error(\"Formato data non valido!\");\n\n            //#region Check\n            if (options.mode == DateModeEnum.Time)\n            {\n                date.setFullYear(new Date().getFullYear());\n                date.setMonth(new Date().getMonth());\n                //date.setDate(new Date().getDate());\n            }\n\n            if (options.mode != DateModeEnum.Time)\n            {\n                if (date.vrIsLessThan(options.min!))\n                {\n                    notify(\"Data minima consentita: \" + options.min!.vrToItalyString());\n                    UtilityManager.interval(() => puma(this.element()).toggleClass(\"errorInput\"), 200, 800);\n                    this.clear();\n                    return null;\n                }\n                if (date.vrIsGreaterThan(options.max!))\n                {\n                    notify(\"Data massima consentita: \" + options.max!.vrToItalyString());\n                    UtilityManager.interval(() => puma(this.element()).toggleClass(\"errorInput\"), 200, 800);\n                    this.clear();\n                    return null;\n                }\n            }\n            //#endregion\n\n            if (triggerChange)\n            {\n                let changingEvent = new DatePickerChangingEvent();\n                if (options.onBeforeChange != null)\n                {\n                    changingEvent.sender = this;\n                    changingEvent.value = new Date(date);\n                    changingEvent.previousValue = (this._value != null) ? new Date(this._value!) : null;\n                    options.onBeforeChange(changingEvent);\n                }\n\n                if (!changingEvent.isDefaultPrevented())\n                {\n                    this._value = new Date(date);\n                    this.formatValue();\n                    this.change();\n                }\n            }\n            else\n            {\n                this._value = new Date(date);\n                this.formatValue();\n            }\n        }\n\n        if (this._value != null)\n            this._value.setSeconds(0);\n\n        if (this.mode() == DateModeEnum.Time && this._value != null)\n        {\n            let hours = this._value.getHours();\n            let minutes = this._value.getMinutes();\n            this._value = new Date(1900, 0, 1, hours, minutes);\n        }\n\n        return this._value;\n    }\n\n    private formatValue()\n    {\n        let options = this.getOptions();\n        let element = (this.element() as HTMLInputElement);\n\n        if (typeof (options.format!) == \"number\") // DateFormatEnum\n        {\n            let dateOptions: Intl.DateTimeFormatOptions = {};\n            switch (options.format)\n            {\n                case DateFormatEnum.ShortDate:\n                case DateFormatEnum.ShortDateWithoutYear:\n                    {\n                        dateOptions = {\n                            year: (options.format == DateFormatEnum.ShortDate) ? 'numeric' : undefined,\n                            month: '2-digit',\n                            day: '2-digit',\n                            hour12: false\n                        }\n                    }\n                    break;\n                case DateFormatEnum.LongDate:\n                case DateFormatEnum.LongDateWithoutYear:\n                    {\n                        dateOptions = {\n                            weekday: 'long',\n                            year: (options.format == DateFormatEnum.LongDate) ? 'numeric' : undefined,\n                            month: 'long',\n                            day: '2-digit',\n                            hour12: false\n                        }\n                    }\n                    break;\n                case DateFormatEnum.WeekDay:\n                    {\n                        dateOptions = {\n                            weekday: 'long',\n                            year: 'numeric',\n                            month: '2-digit',\n                            day: '2-digit',\n                            hour12: false\n                        }\n                    }\n                    break;\n                case DateFormatEnum.Month:\n                    {\n                        dateOptions = {\n                            year: 'numeric',\n                            month: 'long',\n                        }\n                    }\n                    break;\n                case DateFormatEnum.Year:\n                    {\n                        dateOptions = {\n                            year: 'numeric',\n                        }\n                    }\n                    break;\n            }\n            dateOptions.timeZone = \"Europe/Rome\";\n            let dateFormatter = new Intl.DateTimeFormat(/*navigator.language*/\"it\", dateOptions);\n            let dateString = dateFormatter.format(this._value!).vrCapitalize();\n\n            if (options.format == DateFormatEnum.WeekRange)\n            {\n                let firstDayOfWeek = Date.vrGetFirstDayOfWeekByDate(this._value!);\n                let lastDayOfWeek = firstDayOfWeek.vrAddDays(5);\n                dateString = firstDayOfWeek.vrToItalyString() + \" - \" + lastDayOfWeek.vrToItalyString();\n            }\n            else if (options.format == DateFormatEnum.LongWeekRange)\n            {\n                let firstDayOfWeek = Date.vrGetFirstDayOfWeekByDate(this._value!);\n                let lastDayOfWeek = firstDayOfWeek.vrAddDays(5);\n\n                dateOptions = {\n                    timeZone: \"Europe/Rome\",\n                    year: 'numeric',\n                    month: 'long',\n                    day: '2-digit',\n                }\n                dateFormatter = new Intl.DateTimeFormat(\"it\", dateOptions);\n                dateString = dateFormatter.format(firstDayOfWeek) + \" - \" + dateFormatter.format(lastDayOfWeek);\n            }\n            else if (options.format == DateFormatEnum.FourWeeksRange)\n            {\n                let firstDayOfWeek = Date.vrGetFirstDayOfWeekByDate(this._value!);\n                let lastDayOfWeek = firstDayOfWeek.vrAddDays(26);\n                dateString = firstDayOfWeek.vrToItalyString() + \" - \" + lastDayOfWeek.vrToItalyString();\n            }\n            else if (options.format == DateFormatEnum.LongFourWeeksRange)\n            {\n                let firstDayOfWeek = Date.vrGetFirstDayOfWeekByDate(this._value!);\n                let lastDayOfWeek = firstDayOfWeek.vrAddDays(26);\n\n                dateOptions = {\n                    timeZone: \"Europe/Rome\",\n                    year: 'numeric',\n                    month: 'long',\n                    day: '2-digit',\n                }\n                dateFormatter = new Intl.DateTimeFormat(\"it\", dateOptions);\n                dateString = dateFormatter.format(firstDayOfWeek) + \" - \" + dateFormatter.format(lastDayOfWeek);\n            }\n\n            switch (options.mode)\n            {\n                case DateModeEnum.Date: element.value = dateString; break;\n                case DateModeEnum.Time: element.value = this._value!.toTimeString(); break;\n                case DateModeEnum.DateTime: element.value = dateString + \" \" + this._value!.toTimeString(); break;\n            }\n        }\n        else\n            element.value = this._value!.vrFormatString(options.format!, \"it\")\n    }\n\n    mode(mode?: DateModeEnum)\n    {\n        let options = this.getOptions();\n        if (mode != null)\n            options.mode = mode;\n\n        return options.mode;\n    }\n\n    min(min?: Date)\n    {\n        let options = this.getOptions();\n        if (min != null)\n            options.min = min;\n\n        return options.min;\n    }\n\n    max(max?: Date)\n    {\n        let options = this.getOptions();\n        if (max != null)\n            options.max = max;\n\n        return options.max;\n    }\n\n    format(format?: DateFormatEnum, changeText = true)\n    {\n        let options = this.getOptions();\n        if (format != null)\n        {\n            options.format = format;\n            if (changeText)\n                this.value(this.value(), false);\n        }\n        return options.format;\n    }\n\n    clear(triggerChange = false): void\n    {\n        this._value = null;\n        (this.element() as HTMLInputElement).value = \"\";\n\n        if (triggerChange)\n            this.change();\n    }\n\n    isEmpty()\n    {\n        return this.value() == null;\n    }\n\n    error()\n    {\n        puma(this.element()).addClass(\"vrDatePickerError\");\n    }\n\n    hideError()\n    {\n        puma(this.element()).removeClass(\"vrDatePickerError\");\n    }\n\n    private getOptions(): DatePickerOptions\n    {\n        return this.options<DatePickerOptions>();\n    }\n    //#endregion\n\n    //#region Overrides\n    enable(): void\n    {\n        super.enable();\n        puma(this.container()).find(\".vrDivPickerIcon\").removeClass(\"vrDivPickerIconDisable\");\n        puma(this.container()).find(\".vrDivPickerDateTimeIcon\").removeClass(\"vrDivPickerIconDisable\");\n    }\n\n    disable(): void\n    {\n        super.disable();\n        puma(this.container()).find(\".vrDivPickerIcon\").addClass(\"vrDivPickerIconDisable\");\n        puma(this.container()).find(\".vrDivPickerDateTimeIcon\").addClass(\"vrDivPickerIconDisable\");\n    }\n    //#endregion\n\n    //#region Events\n    change(): void\n    {\n        let changeCallBack = this.getOptions().onAfterChange;\n        if (changeCallBack != null)\n        {\n            let changeEvent = new DatePickerChangeEvent();\n            changeEvent.sender = this;\n            changeEvent.value = (this.value() != null) ? new Date(this.value()!) : null;\n            changeCallBack(changeEvent);\n        }\n    }\n    //#endregion\n}\n\nexport class TimePicker extends DatePicker { }\nexport class DateTimePicker extends DatePicker { }\nexport class MonthPicker extends DatePicker { }\nexport class YearPicker extends DatePicker { }\n//#endregion\n\n//#region Classes\nclass DatePickerEvent extends VrControlsEvent\n{\n    sender: DatePicker;\n    value: Date | null;\n}\n\nclass DatePickerChangeEvent extends DatePickerEvent\n{\n\n}\n\nclass DatePickerChangingEvent extends DatePickerEvent\n{\n    previousValue?: Date | null;\n}\n\nexport enum ActualViewEnum\n{\n    Day,\n    Month,\n    Year,\n    Decade\n}\n\nclass DatePickerFocusEvent extends DatePickerEvent\n{\n}\n\nclass DatePickerBlurEvent extends DatePickerEvent\n{\n}\n\nclass DatePickerKeyUpPressEvent extends VrControlsEvent\n{\n    sender: DatePicker;\n    text: string;\n    key: string;\n    shiftKey: boolean;\n    altKey: boolean;\n    ctrlKey: boolean;\n    enterKey: boolean;\n    backSpaceKey: boolean;\n    tabKey: boolean;\n}\n\nclass DatePickerKeyUpEvent extends DatePickerKeyUpPressEvent\n{\n}\n\nclass DatePickerKeyDownEvent extends DatePickerKeyUpPressEvent\n{\n}\n//#endregion"],"names":["pickerIcon","monthNumber","year","day","month","dateToReturn","ActualViewEnum"],"mappings":"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"}