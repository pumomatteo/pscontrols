{"version":3,"file":"radioButton.js","sources":["../../../../src/ui/controls/radioButton.ts"],"sourcesContent":["import { VrControlOptions, VrControl } from \"../common\";\nimport { ControlTypeEnum, puma } from \"../vr\";\n\n//#region Options\nexport class RadioButtonOptions extends VrControlOptions\n{\n    text?: string;\n    value?: string;\n    checked?: boolean;\n    name?: string;\n\n    onCheck?(e: RadioButtonCheckEvent): void;\n}\n//#endregion\n\n//#region Control\nexport class RadioButton extends VrControl\n{\n    constructor(element: HTMLElement, options?: RadioButtonOptions | null)\n    {\n        //#region Options\n        if (options == null)\n            options = new RadioButtonOptions();\n\n        if (options.text == null) options.text = \"\";\n        if (options.checked == null) options.checked = false;\n        //#endregion\n\n        puma(element).attr(\"type\", \"radio\");\n        super(element, options, ControlTypeEnum.RadioButton);\n\n        //#region Value & Name\n        if (options.value == null) options.value = options.text;\n        if (options.value != null)\n            puma(this.element()).attr(\"value\", options.value);\n\n        if (options.name != null)\n            puma(this.element()).attr(\"name\", options.name);\n        //#endregion\n\n        //#region Structure\n        let labelContainer = puma(\"<label class='vrRadioButtonLabelContainer'></label>\").vrAppendToPuma(this.container());\n        puma(this.element()).vrAppendToPuma(labelContainer);\n        puma(\"<span class='vrRadioButtonCheckMark'></span>\").vrAppendToPuma(labelContainer);\n        let lblRadioButton = puma(\"<label class='vrRadioButtonLabel'>\" + options.text + \"</label>\").vrAppendToPuma(this.container());\n        //#endregion\n\n        //#region Checked\n        if (options.checked === true)\n            this.checked(true, false);\n        //#endregion\n\n        //#region Events\n        puma(this.element()).on(\"click\", (e: JQuery.ClickEvent) =>\n        {\n            let radioButton = e.currentTarget as HTMLInputElement;\n            let checked = radioButton.checked;\n            this.checked(checked);\n        });\n\n        puma(lblRadioButton).on(\"click\", (e: JQuery.ClickEvent) =>\n        {\n            let lblRadioButtonContainer = puma(lblRadioButton).prev();\n            let input = lblRadioButtonContainer.find(\"input\")[0];\n            if (!input.checked)\n                input.checked = true;\n\n            let checked = input.checked;\n            this.checked(checked);\n        });\n        //#endregion\n    }\n\n    //#region Methods\n    checked(state?: boolean, triggerChange = true): boolean\n    {\n        if (state != null)\n        {\n            (this.element() as HTMLInputElement).checked = state;\n\n            if (triggerChange)\n            {\n                let options = this.getOptions();\n                if (options!.onCheck != null)\n                {\n                    let event = new RadioButtonCheckEvent();\n                    event.sender = this;\n                    event.checked = state;\n                    options!.onCheck(event);\n                }\n            }\n        }\n        return (this.element() as HTMLInputElement).checked;\n    }\n\n    text(text?: string): string\n    {\n        if (text != null)\n            puma(this.container()).find(\".vrRadioButtonLabel\").html(text);\n\n        return puma(this.container()).find(\".vrRadioButtonLabel\").html();\n    }\n\n    clear(triggerChange = false): void\n    {\n        this.checked(false, triggerChange);\n    }\n\n    getOptions(): RadioButtonOptions\n    {\n        return this.options<RadioButtonOptions>();\n    }\n\n    enable(): void\n    {\n        super.enable();\n        puma(this.container()).removeClass(\"vrRadioButtonListDisabled\");\n    }\n\n    disable(): void\n    {\n        super.disable();\n        puma(this.container()).addClass(\"vrRadioButtonListDisabled\");\n    }\n    //#endregion\n}\n//#endregion\n\n//#region Events\nclass RadioButtonEvent\n{\n    sender: RadioButton;\n}\n\nexport class RadioButtonCheckEvent extends RadioButtonEvent\n{\n    checked: boolean;\n}\n//#endregion"],"names":[],"mappings":";;AAIO,MAAM,2BAA2B,iBACxC;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAGJ;AAIO,MAAM,oBAAoB,UACjC;AAAA,EACI,YAAY,SAAsB,SAClC;AAEI,QAAI,WAAW;AACX,gBAAU,IAAI,mBAAA;AAElB,QAAI,QAAQ,QAAQ,KAAM,SAAQ,OAAO;AACzC,QAAI,QAAQ,WAAW,KAAM,SAAQ,UAAU;AAG/C,SAAK,OAAO,EAAE,KAAK,QAAQ,OAAO;AAClC,UAAM,SAAS,SAAS,gBAAgB,WAAW;AAGnD,QAAI,QAAQ,SAAS,KAAM,SAAQ,QAAQ,QAAQ;AACnD,QAAI,QAAQ,SAAS;AACjB,WAAK,KAAK,QAAA,CAAS,EAAE,KAAK,SAAS,QAAQ,KAAK;AAEpD,QAAI,QAAQ,QAAQ;AAChB,WAAK,KAAK,QAAA,CAAS,EAAE,KAAK,QAAQ,QAAQ,IAAI;AAIlD,QAAI,iBAAiB,KAAK,qDAAqD,EAAE,eAAe,KAAK,WAAW;AAChH,SAAK,KAAK,QAAA,CAAS,EAAE,eAAe,cAAc;AAClD,SAAK,8CAA8C,EAAE,eAAe,cAAc;AAClF,QAAI,iBAAiB,KAAK,uCAAuC,QAAQ,OAAO,UAAU,EAAE,eAAe,KAAK,WAAW;AAI3H,QAAI,QAAQ,YAAY;AACpB,WAAK,QAAQ,MAAM,KAAK;AAI5B,SAAK,KAAK,QAAA,CAAS,EAAE,GAAG,SAAS,CAAC,MAClC;AACI,UAAI,cAAc,EAAE;AACpB,UAAI,UAAU,YAAY;AAC1B,WAAK,QAAQ,OAAO;AAAA,IACxB,CAAC;AAED,SAAK,cAAc,EAAE,GAAG,SAAS,CAAC,MAClC;AACI,UAAI,0BAA0B,KAAK,cAAc,EAAE,KAAA;AACnD,UAAI,QAAQ,wBAAwB,KAAK,OAAO,EAAE,CAAC;AACnD,UAAI,CAAC,MAAM;AACP,cAAM,UAAU;AAEpB,UAAI,UAAU,MAAM;AACpB,WAAK,QAAQ,OAAO;AAAA,IACxB,CAAC;AAAA,EAEL;AAAA;AAAA,EAGA,QAAQ,OAAiB,gBAAgB,MACzC;AACI,QAAI,SAAS,MACb;AACK,WAAK,UAA+B,UAAU;AAE/C,UAAI,eACJ;AACI,YAAI,UAAU,KAAK,WAAA;AACnB,YAAI,QAAS,WAAW,MACxB;AACI,cAAI,QAAQ,IAAI,sBAAA;AAChB,gBAAM,SAAS;AACf,gBAAM,UAAU;AAChB,kBAAS,QAAQ,KAAK;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AACA,WAAQ,KAAK,UAA+B;AAAA,EAChD;AAAA,EAEA,KAAK,MACL;AACI,QAAI,QAAQ;AACR,WAAK,KAAK,WAAW,EAAE,KAAK,qBAAqB,EAAE,KAAK,IAAI;AAEhE,WAAO,KAAK,KAAK,UAAA,CAAW,EAAE,KAAK,qBAAqB,EAAE,KAAA;AAAA,EAC9D;AAAA,EAEA,MAAM,gBAAgB,OACtB;AACI,SAAK,QAAQ,OAAO,aAAa;AAAA,EACrC;AAAA,EAEA,aACA;AACI,WAAO,KAAK,QAAA;AAAA,EAChB;AAAA,EAEA,SACA;AACI,UAAM,OAAA;AACN,SAAK,KAAK,UAAA,CAAW,EAAE,YAAY,2BAA2B;AAAA,EAClE;AAAA,EAEA,UACA;AACI,UAAM,QAAA;AACN,SAAK,KAAK,UAAA,CAAW,EAAE,SAAS,2BAA2B;AAAA,EAC/D;AAAA;AAEJ;AAIA,MAAM,iBACN;AAAA,EACI;AACJ;AAEO,MAAM,8BAA8B,iBAC3C;AAAA,EACI;AACJ;"}